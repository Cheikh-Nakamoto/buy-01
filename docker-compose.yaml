version: '3.8'

networks:
  buy-network:
    driver: bridge

services:

  ### ðŸŸ© MongoDB pour User Service
  user-mongodb:
    image: mongo:latest
    container_name: user-mongodb
    environment:
      MONGO_INITDB_DATABASE: user_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27017:27017"
    volumes:
      - user_mongo_data:/data/db
    networks:
      - buy-network

    ### ðŸŸ© MongoDB pour Product Service
  product-mongodb:
    image: mongo:latest
    container_name: product-mongodb
    environment:
      MONGO_INITDB_DATABASE: product_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27018:27017"
    volumes:
      - product_mongo_data:/data/db
    networks:
      - buy-network
    
    ### ðŸŸ© MongoDB pour Media Servie
  media-mongodb:
    image: mongo:latest
    container_name: media-mongodb
    environment:
      MONGO_INITDB_DATABASE: media_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27019:27017"
    volumes:
      - media_mongo_data:/data/db
    networks:
      - buy-network

  ### Eureka Server
  discovery-server:
    build: ./backend/api/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - buy-network

  ### ðŸŸ¦ User Service (Spring Boot)
  user-service:
    build: ./backend/api/user
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - user-mongodb
      - kafka
      - discovery-server
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:secret@user-mongodb:27017/user_db?authSource=admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: N5Dztk+QsQEOFEhZ9WZ7ZzRp7uuOoT/knKWvYVZLNS7vt8BjnfHxLjzjGdBfEBu3
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
    volumes:
      - ./uploads:/app/uploads
    networks:
      - buy-network
    restart: always

  ### ðŸŸª Product Service (Spring Boot)
  product-service:
    build: ./backend/api/product
    container_name: product-service
    ports:
      - "8082:8082"
    depends_on:
      - product-mongodb
      - kafka
      - discovery-server
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:secret@product-mongodb:27018/product_db?authSource=admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
    volumes:
      - ./uploads:/app/uploads
    networks:
      - buy-network
    restart: always

  ### ðŸŸª Media Service (Spring Boot)
  media-service:
    build: ./backend/api/media
    container_name: media-service
    ports:
      - "8083:8083"
    depends_on:
      - media-mongodb
      - kafka
      - discovery-server
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:secret@media-mongodb:27019/media_db?authSource=admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
    volumes:
      - ./uploads:/app/uploads
    networks:
      - buy-network
    restart: always

  ### ðŸŸ¨ Zookeeper (nÃ©cessaire pour Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - buy-network

  ### ðŸŸ§ Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - buy-network

  ### ðŸŸ¥ API Gateway (Spring Boot)
  gateway-service:
    build: ./backend/api/gateway-service
    container_name: gateway-service
    ports:
      - "8090:8090"
    depends_on:
      - discovery-server
      - user-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      SPRING_CLOUD_GATEWAY_ROUTES_USER_SERVICE_URI: lb://user-service
      SPRING_CLOUD_GATEWAY_ROUTES_USER_SERVICE_ID: user-service
      SPRING_CLOUD_GATEWAY_ROUTES_USER_SERVICE_PREDICATE: Path=/users/**, Path=/auth/**, Path=/admin/**
      SPRING_CLOUD_GATEWAY_ROUTES_PRODUCT_SERVICE_URI: lb://product-service
      SPRING_CLOUD_GATEWAY_ROUTES_PRODUCT_SERVICE_ID: product-service
      SPRING_CLOUD_GATEWAY_ROUTES_PRODUCT_SERVICE_PREDICATE: Path=/products/**, Path=/categories/**, Path=/images/**
      SPRING_CLOUD_GATEWAY_ROUTES_MEDIA_SERVICE_URI: lb://media-service
      SPRING_CLOUD_GATEWAY_ROUTES_MEDIA_SERVICE_ID: media-service
      SPRING_CLOUD_GATEWAY_ROUTES_MEDIA_SERVICE_PREDICATE: Path=/media/**
      JWT_SECRET: N5Dztk+QsQEOFEhZ9WZ7ZzRp7uuOoT/knKWvYVZLNS7vt8BjnfHxLjzjGdBfEBu3
    networks:
      - buy-network
      
volumes:
  user_mongo_data:
  product_mongo_data:
  media_mongo_data:
