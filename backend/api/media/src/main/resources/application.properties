# --- SERVICE CONFIG ---
spring.application.name=media-service
server.port=8083

# Connexion au serveur Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Uncomment the following line if you want to use Docker Compose with Eureka
#eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka
eureka.instance.prefer-ip-address=true
eureka.fetch-registry=true
eureka.register-with-eureka=true

# --- MONGODB ---
spring.data.mongodb.database=media_db
spring.data.mongodb.uri=mongodb://root:secret@localhost:27019/media_db?authSource=admin
#spring.data.mongodb.uri=mongodb://root:secret@media-mongodb:27018/media_db?authSource=admin

spring.docker.compose.enabled=false

# --- UPLOAD CONFIG (optionnel) ---
file.upload-dir=/app/uploads/productsImages
# Uncomment the following line if you want to use Docker Compose with uploads
#file.upload-dir=./uploads/productsImages
media.upload.allowed-types=image/jpeg,image/png,image/webp

# Taille max par fichier
spring.servlet.multipart.max-file-size=2MB

# Taille totale de la requÃªte (utile pour multipart avec plusieurs fichiers)
spring.servlet.multipart.max-request-size=7MB


# Internal token for service-to-service communication
internal.token-header=X-INTERNAL-TOKEN
internal.token=NyKKbcadVWq1Mim/r7vwzPjy0SikZgFOiYJRO8GvE1A=

# Kafka Bootstrap
spring.kafka.bootstrap-servers=localhost:9092
# Uncomment the following line if you want to use Docker Compose with Kafka
#spring.kafka.bootstrap-servers=kafka:29092

# Consumer
spring.kafka.consumer.group-id=media-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted.packages=*

# Swagger configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.url.path=/v3/api-docs
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.try-it-out-enabled=true

# Swagger default media types
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json