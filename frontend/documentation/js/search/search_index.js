var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiUrlService.html",[0,0.894,1,1.787]],["body/injectables/ApiUrlService.html",[0,0.925,1,1.848,2,1.03,3,0.183,4,0.159,5,0.159,6,5.38,7,1.612,8,1.218,9,0.159,10,0.396,11,6.797,12,4.116,13,1.617,14,4.116,15,4.116,16,4.116,17,4.116,18,4.116,19,4.116,20,4.116,21,4.116,22,4.116,23,4.116,24,4.116,25,4.116,26,4.116,27,4.151,28,4.116,29,4.116,30,4.116,31,4.116,32,1.5,33,1.729,34,3.406,35,1.72,36,1.852,37,0.03,38,4.388,39,6.656,40,3.38,41,1.112,42,0.74,43,1.706,44,1.75,45,0.453,46,1.112,47,0.159,48,0.942,49,3.406,50,1.888,51,3.406,52,2.246,53,2.506,54,1.153,55,2.246,56,3.933,57,4.594,58,2.246,59,1.888,60,0.923,61,4.938,62,3.406,63,2.246,64,3.38,65,3.406,66,2.246,67,3.406,68,3.406,69,2.246,70,3.406,71,2.239,72,3.38,73,0.996,74,3.406,75,2.246,76,2.864,77,2.492,78,2.246,79,2.246,80,1.466,81,3.862,82,4.54,83,2.246,84,1.888,85,4.594,86,1.295,87,3.406,88,1.888,89,3.406,90,2.246,91,2.864,92,3.406,93,2.246,94,1.792,95,0.858,96,2.246,97,2.246,98,0.183,99,0.159,100,1.218,101,1.118,102,1.118,103,1.652,104,1.888,105,1.888,106,2.246,107,2.246,108,1.652,109,4.938,110,0.183,111,0.525,112,2.246,113,1.888,114,2.246,115,1.335,116,1.888,117,2.246,118,2.892,119,0.961,120,2.246,121,2.246,122,2.246,123,2.246,124,2.246,125,2.246,126,2.246,127,2.246,128,2.246,129,2.246,130,0.014,131,0.014]],["title/components/App.html",[132,0.511,133,1.115]],["body/components/App.html",[3,0.342,4,0.296,5,0.296,9,0.296,10,0.611,33,1.139,35,1.139,36,1.226,37,0.029,42,0.667,45,0.428,47,0.296,48,0.71,73,1.226,94,1.319,98,0.468,99,0.296,101,2.619,110,0.342,111,0.98,130,0.022,131,0.022,132,0.892,133,2.3,134,1.781,135,1.529,136,1.648,137,1.648,138,3.526,139,1.648,140,2.651,141,2.231,142,5.261,143,1.946,144,2.231,145,5.261,146,2.231,147,5.261,148,5.747,149,4.831,150,3.87,151,5.261,152,4.195,153,1.925,154,4.195,155,4.195,156,1.648,157,2.067,158,2.067,159,1.648,160,2.368,161,1.648,162,1.648,163,1.42,164,1.648,165,1.648,166,1.42,167,1.648,168,1.529,169,1.918,170,1.648,171,1.648,172,1.42,173,1.648,174,1.529,175,1.648,176,1.42,177,1.648,178,1.648,179,1.319,180,1.529,181,1.648,182,1.42,183,2.067,184,1.648,185,1.42,186,1.529,187,1.648,188,1.42,189,1.529,190,1.648]],["title/interfaces/AuthFormData.html",[191,0.423,192,0.962]],["body/interfaces/AuthFormData.html",[3,0.308,4,0.267,5,0.387,7,1.24,9,0.267,10,0.572,37,0.029,41,0.756,42,0.439,43,1.515,45,0.524,46,0.984,47,0.444,48,1.172,60,0.775,80,1.632,86,1.19,95,0.953,98,0.308,99,0.267,110,0.532,119,1.466,130,0.021,131,0.021,191,0.841,192,1.439,193,1.28,194,1.28,195,1.135,196,1.963,197,1.632,198,1.632,199,1.695,200,1.695,201,0.883,202,1.795,203,2.035,204,1.19,205,1.379,206,1.549,207,1.795,208,1.667,209,1.795,210,1.667,211,1.667,212,1.549,213,1.795,214,1.379,215,1.379,216,1.379,217,1.28,218,1.19,219,1.19,220,1.19,221,1.379,222,1.379,223,1.15,224,1.279,225,1.105,226,1.105,227,1.027,228,1.24,229,0.883,230,1.105,231,0.883,232,1.105]],["title/interfaces/AuthResponse.html",[191,0.423,225,0.962]],["body/interfaces/AuthResponse.html",[3,0.319,4,0.277,5,0.394,7,1.27,9,0.277,10,0.586,37,0.029,41,0.784,42,0.456,43,1.532,45,0.507,46,1.007,47,0.416,48,1.17,60,0.908,80,1.369,86,1.234,95,0.989,98,0.319,99,0.277,110,0.535,119,1.479,130,0.021,131,0.021,191,0.846,192,1.147,193,1.328,194,1.328,195,0.929,196,1.328,197,1.369,198,1.369,199,1.473,200,1.473,201,0.916,202,1.838,203,2.059,204,1.234,205,1.43,206,1.586,207,1.838,208,1.707,209,1.838,210,1.707,211,1.707,212,1.586,213,1.838,214,1.43,215,1.43,216,1.43,217,1.328,218,1.234,219,1.234,220,1.234,221,1.43,222,1.43,223,1.178,224,1.301,225,1.473,226,1.718,227,1.065,228,1.27,229,0.916,230,1.147,231,0.916,232,1.147]],["title/injectables/AuthService.html",[0,0.894,233,1.787]],["body/injectables/AuthService.html",[0,0.909,1,2.796,2,1.008,3,0.179,4,0.155,5,0.441,7,0.553,9,0.155,10,0.389,13,2.025,27,3.818,32,0.801,33,1.568,35,1.233,36,1.506,37,0.03,38,3.523,41,0.669,44,1.277,45,0.37,46,0.669,47,0.4,54,1.917,60,0.877,71,2.202,72,2.987,77,2.653,80,1.102,91,4.332,95,1.392,98,0.398,99,0.155,100,1.192,101,1.094,102,1.668,105,1.847,108,2.465,110,0.179,111,0.513,118,2.022,130,0.014,131,0.014,169,1.783,179,1.054,180,2.106,192,1.566,195,0.987,197,1.102,198,0.596,201,0.513,223,0.782,224,1.204,225,0.642,226,1.74,228,0.553,229,1.291,233,1.818,234,1.847,235,4.89,236,3.065,237,2.987,238,4.111,239,3.413,240,1.375,241,3.072,242,4.542,243,4.542,244,4.542,245,3.35,246,2.197,247,3.35,248,2.197,249,4.332,250,3.685,251,2.435,252,3.35,253,4.061,254,3.342,255,3.35,256,1.992,257,3.35,258,3.35,259,1.781,260,3.541,261,3.791,262,2.344,263,3.367,264,3.791,265,2.197,266,3.35,267,2.816,268,3.342,269,3.818,270,3.342,271,3.35,272,3.35,273,2.202,274,3.35,275,3.35,276,2.465,277,3.35,278,2.197,279,3.35,280,4.542,281,2.816,282,3.342,283,3.35,284,4.89,285,3.342,286,2.197,287,3.35,288,2.816,289,3.35,290,3.35,291,3.35,292,1.221,293,3.35,294,5.776,295,2.197,296,3.35,297,4.111,298,2.465,299,1.616,300,2.465,301,3.35,302,2.816,303,2.202,304,2.197,305,3.35,306,2.197,307,2.465,308,2.197,309,3.35,310,1.616,311,1.444,312,1.192,313,1.444,314,1.847,315,1.616,316,1.192,317,2.197,318,1.444,319,2.197,320,1.616,321,1.847,322,1.616,323,2.197,324,1.192,325,2.816,326,3.35,327,2.197,328,2.197,329,2.197,330,2.197,331,2.669,332,4.061,333,2.796,334,2.197,335,3.35,336,2.465,337,3.413,338,2.465,339,3.35,340,2.197,341,2.197,342,3.35,343,2.197,344,2.465,345,3.35,346,2.197,347,2.197,348,2.669,349,2.197,350,3.342,351,2.816,352,2.273,353,1.847,354,2.197,355,1.847,356,1.847,357,2.273,358,2.701,359,4.542,360,1.992,361,1.616,362,1.616,363,3.35,364,1.306,365,1.668,366,2.465,367,1.616,368,2.816,369,2.197,370,2.197,371,2.197,372,2.197,373,1.616,374,1.847,375,1.616,376,2.262,377,2.197,378,1.847,379,1.847,380,2.197,381,1.847,382,2.197,383,1.818,384,1.616,385,2.816,386,2.197,387,2.197,388,2.197,389,2.465,390,1.616,391,2.197,392,2.197,393,2.197,394,2.197,395,2.987,396,2.197,397,2.197,398,2.197,399,1.847,400,2.197,401,2.197,402,2.197,403,2.197,404,2.197,405,2.197,406,1.847,407,2.197,408,2.197,409,2.197,410,2.197,411,2.197,412,2.197,413,2.197,414,3.413,415,2.197,416,2.197,417,2.197,418,2.197,419,2.197,420,2.197,421,4.061,422,2.197,423,2.465,424,2.197,425,2.197,426,1.616,427,1.616,428,1.847,429,2.197,430,2.197,431,2.197]],["title/injectables/CarouselCustomConfig.html",[0,0.894,432,2.164]],["body/injectables/CarouselCustomConfig.html",[0,1.491,2,2.065,3,0.366,4,0.318,5,0.318,9,0.318,10,0.638,33,1.676,35,1.749,36,1.805,37,0.029,47,0.419,98,0.366,99,0.318,110,0.366,111,1.051,119,1.283,130,0.023,131,0.023,195,1.012,262,2.33,432,3.611,433,4.659,434,3.783,435,5.931,436,6.333,437,6.176,438,6.176,439,2.735,440,4.5,441,4.5,442,6.176,443,5.494,444,4.5,445,5.494,446,4.5,447,5.494,448,5.192,449,4.618,450,4.618]],["title/components/CircularImage.html",[132,0.511,163,1.115]],["body/components/CircularImage.html",[3,0.286,4,0.248,5,0.248,9,0.331,10,0.544,32,1.924,33,1.529,35,0.953,36,1.026,37,0.029,41,0.937,42,0.613,43,1.181,45,0.382,47,0.331,48,0.794,54,1.587,73,1.026,94,1.104,98,0.502,99,0.248,110,0.286,111,0.82,130,0.02,131,0.02,132,0.819,133,2.237,134,1.587,135,1.28,136,1.379,137,1.379,139,1.379,140,2.596,141,1.988,143,1.189,144,1.988,146,1.988,149,3.941,153,1.611,156,1.379,157,1.842,158,1.842,159,1.379,160,2.213,161,1.379,162,1.379,163,1.907,164,2.422,165,1.379,166,1.189,167,1.379,168,1.28,169,1.709,170,1.379,171,1.379,172,1.189,173,1.379,174,1.28,175,1.379,176,1.189,177,1.379,178,1.379,179,1.104,180,1.28,181,1.379,182,1.189,183,1.842,184,1.379,185,1.189,186,1.28,187,1.379,188,1.189,189,1.28,190,1.379,240,1.587,259,1.104,292,1.28,432,3.469,433,4.317,448,4.933,451,4.317,452,2.951,453,3.941,454,4.688,455,5.277,456,4.688,457,3.469,458,5.277,459,5.277,460,5.277,461,5.277,462,5.277,463,5.277,464,4.436,465,4.688,466,4.688,467,3.702,468,3.449,469,5.277,470,4.688,471,3.511,472,3.511,473,4.688,474,2.543,475,5.277,476,4.688,477,2.788,478,3.511,479,2.088,480,3.511,481,2.583,482,3.511,483,2.951,484,2.951,485,2.583,486,3.511,487,3.511,488,3.511,489,4.688,490,4.688,491,4.688]],["title/components/Dashboard.html",[132,0.511,166,1.115]],["body/components/Dashboard.html",[3,0.232,4,0.201,5,0.201,9,0.201,32,1.038,33,1.283,37,0.029,42,0.632,44,0.896,45,0.385,47,0.201,54,1.374,73,0.832,94,0.896,98,0.33,99,0.201,110,0.232,111,0.665,115,3.063,130,0.017,131,0.017,132,0.733,133,2.174,134,1.374,135,1.038,136,1.119,137,1.119,139,1.119,140,2.523,141,1.208,143,0.964,144,1.721,146,1.721,153,1.307,156,1.119,157,1.594,158,1.594,159,1.119,160,2.024,161,1.119,162,1.119,163,0.964,164,1.119,165,1.119,166,1.916,167,1.119,168,1.038,169,1.878,170,1.119,171,1.119,172,0.964,173,1.119,174,1.038,175,1.119,176,0.964,177,1.119,178,1.119,179,0.896,180,1.038,181,1.119,182,0.964,183,1.594,184,1.119,185,0.964,186,1.038,187,1.119,188,0.964,189,1.038,190,1.119,195,0.525,230,1.186,240,1.374,259,1.276,292,1.723,324,1.545,361,3.79,365,2.818,373,2.985,375,2.985,376,2.02,399,5.166,474,2.202,492,2.394,493,4.058,494,4.058,495,5.151,496,5.151,497,2.848,498,3.366,499,2.848,500,2.848,501,2.848,502,3.411,503,2.848,504,2.848,505,3.79,506,5.954,507,4.058,508,2.818,509,4.058,510,4.058,511,4.058,512,5.005,513,4.058,514,5.151,515,5.151,516,6.145,517,3.411,518,5.66,519,5.151,520,5.151,521,2.985,522,5.954,523,5.151,524,4.058,525,3.411,526,4.058,527,5.151,528,4.058,529,4.058,530,4.058,531,4.058,532,4.058,533,4.058,534,2.848,535,4.058,536,4.058,537,3.79,538,4.058,539,5.151,540,5.954,541,4.058,542,4.058,543,4.058,544,4.058,545,4.058,546,4.058,547,5.151,548,4.058,549,4.058,550,4.058,551,4.058,552,4.058,553,4.058,554,4.058,555,4.058,556,3.411,557,4.33,558,4.058,559,4.058,560,4.058,561,3.411,562,4.058,563,4.058,564,5.151,565,3.913,566,5.66,567,4.058,568,4.058,569,4.058,570,4.058,571,4.058,572,4.058,573,4.058,574,4.058,575,5.151,576,5.151,577,5.151,578,4.058,579,4.058,580,4.058,581,4.058,582,4.058,583,4.058,584,4.058,585,4.058,586,4.058,587,4.058,588,4.058,589,4.058,590,4.058,591,4.058,592,4.058,593,5.151,594,2.413,595,5.151,596,4.058,597,4.058,598,4.058,599,4.058,600,2.848]],["title/injectables/DataService.html",[0,0.894,601,2.164]],["body/injectables/DataService.html",[0,1.529,2,2.151,3,0.382,4,0.331,5,0.331,8,2.543,9,0.331,10,0.654,13,2.372,33,1.639,35,1.529,36,1.646,37,0.029,44,1.474,45,0.382,47,0.331,50,3.94,54,1.907,98,0.459,99,0.331,100,2.543,101,2.334,110,0.382,111,1.095,130,0.024,131,0.024,195,0.863,229,1.463,236,3.59,240,1.907,259,1.474,292,1.709,310,3.448,312,2.543,601,3.701,602,5.264,603,6.037,604,5.631,605,5.631,606,5.631,607,4.687,608,4.734,609,4.687,610,4.687]],["title/interfaces/ErrorMessage.html",[191,0.423,232,0.962]],["body/interfaces/ErrorMessage.html",[3,0.32,4,0.278,5,0.394,7,1.272,9,0.278,10,0.586,37,0.029,41,0.786,42,0.457,43,1.534,45,0.507,46,1.009,47,0.416,48,1.172,60,0.79,80,1.371,86,1.237,95,0.991,98,0.32,99,0.278,110,0.536,119,1.48,130,0.021,131,0.021,191,0.846,192,1.15,193,1.332,194,1.332,196,1.332,197,1.371,198,1.371,199,1.476,200,1.476,201,0.919,202,1.841,203,2.061,204,1.237,205,1.434,206,1.589,207,1.841,208,1.71,209,1.841,210,1.71,211,1.71,212,1.589,213,1.841,214,1.434,215,1.434,216,1.434,217,1.332,218,1.237,219,1.237,220,1.237,221,1.434,222,1.434,223,1.18,224,1.455,225,1.15,226,1.15,227,1.068,228,1.534,229,0.919,230,1.15,231,0.919,232,1.476]],["title/injectables/GuardService.html",[0,0.894,611,2.423]],["body/injectables/GuardService.html",[0,1.331,2,1.725,3,0.306,4,0.266,5,0.266,8,2.039,9,0.266,13,1.477,32,1.37,33,1.331,37,0.029,44,1.542,45,0.399,46,0.751,47,0.347,60,0.819,71,2.47,73,1.098,98,0.471,99,0.266,100,2.039,101,1.871,102,1.871,110,0.306,111,0.878,118,2.442,130,0.021,131,0.021,153,1.725,191,0.483,195,0.903,198,1.481,199,1.098,223,1.351,233,3.338,240,1.66,249,4.122,250,3.246,251,1.871,256,3.246,259,1.542,260,3.44,262,1.594,263,2.916,273,4.224,311,3.944,312,2.039,322,4.527,324,2.039,352,2.545,357,2.08,498,3.821,525,3.16,594,2.235,611,3.607,612,4.588,613,5.785,614,3.758,615,3.758,616,3.758,617,5.785,618,5.785,619,3.758,620,4.122,621,6.153,622,4.588,623,5.785,624,6,625,2.916,626,3.758,627,3.758,628,3.758,629,3.758,630,4.904,631,2.47,632,3.16,633,3.758,634,3.758,635,3.758,636,3.758,637,3.758,638,3.16,639,3.758,640,2.765,641,2.765,642,3.758,643,3.758,644,3.16,645,3.758,646,3.758,647,3.16,648,2.235,649,3.758,650,3.607,651,3.758,652,3.758]],["title/interfaces/MediaFile.html",[191,0.423,218,1.036]],["body/interfaces/MediaFile.html",[3,0.306,4,0.266,5,0.386,7,1.512,9,0.266,10,0.57,37,0.029,41,0.752,42,0.437,43,1.602,45,0.523,46,0.981,47,0.465,48,1.173,60,0.773,80,1.332,86,1.82,95,0.948,98,0.306,99,0.266,110,0.532,119,1.501,130,0.021,131,0.021,191,0.84,192,1.1,193,1.274,194,1.274,196,1.274,197,1.332,198,1.332,199,1.434,200,1.434,201,0.879,202,1.789,203,2.122,204,1.184,205,1.372,206,1.888,207,2.188,208,1.661,209,1.789,210,1.661,211,1.661,212,1.544,213,1.789,214,1.372,215,1.372,216,1.372,217,1.274,218,1.544,219,1.184,220,1.184,221,1.372,222,1.372,223,1.146,224,1.276,225,1.1,226,1.1,227,1.021,228,1.236,229,0.879,230,1.1,231,0.879,232,1.1]],["title/interfaces/MediaItem.html",[191,0.423,204,1.036]],["body/interfaces/MediaItem.html",[3,0.308,4,0.267,5,0.387,7,1.514,9,0.267,10,0.571,37,0.029,41,1.093,42,0.439,43,1.603,45,0.524,46,0.983,47,0.462,48,1.171,60,0.775,80,1.335,86,1.188,95,0.952,98,0.308,99,0.267,110,0.532,119,1.502,130,0.021,131,0.021,191,0.841,192,1.104,193,1.279,194,1.279,196,1.279,197,1.335,198,1.335,199,1.438,200,1.438,201,0.882,202,1.793,203,2.124,204,1.547,205,1.994,206,1.89,207,2.191,208,1.665,209,1.793,210,1.665,211,1.665,212,1.547,213,1.793,214,1.377,215,1.377,216,1.377,217,1.279,218,1.188,219,1.188,220,1.188,221,1.377,222,1.377,223,1.149,224,1.278,225,1.104,226,1.104,227,1.025,228,1.239,229,0.882,230,1.104,231,0.882,232,1.104]],["title/components/Navbar.html",[132,0.511,143,1.115]],["body/components/Navbar.html",[3,0.255,4,0.222,5,0.222,9,0.222,10,0.504,13,1.233,32,1.144,33,1.681,35,1.179,36,1.269,37,0.029,42,0.578,44,1.366,45,0.438,47,0.352,48,0.843,60,0.799,73,1.455,77,1.702,94,0.987,98,0.438,99,0.222,110,0.255,111,0.733,130,0.018,131,0.018,132,0.773,133,2.204,134,1.47,135,1.144,136,1.233,137,1.233,139,1.233,140,2.558,141,1.331,143,1.976,144,1.842,146,1.842,153,1.439,156,1.233,157,1.706,158,1.706,159,1.233,160,2.112,161,1.233,162,1.233,163,1.062,164,1.233,165,1.233,166,1.686,167,1.233,168,1.144,169,1.583,170,1.233,171,1.233,172,1.062,173,1.233,174,1.144,175,1.233,176,1.062,177,1.233,178,1.233,179,0.987,180,1.816,181,1.233,182,1.062,183,1.706,184,1.233,185,1.062,186,1.144,187,1.233,188,1.062,189,1.144,190,1.233,195,0.8,200,0.917,201,1.318,223,0.733,233,3.31,236,3.471,237,3.664,239,4.744,240,1.47,241,2.702,259,1.836,273,3.533,292,1.959,303,2.854,307,3.194,316,1.702,324,1.702,333,1.702,352,1.331,357,1.842,365,1.562,373,2.308,467,3.533,498,3.196,502,2.637,508,1.562,521,2.308,631,2.854,638,2.637,644,2.637,647,2.637,648,1.865,653,2.637,654,3.664,655,4.342,656,4.342,657,5.643,658,5.375,659,4.342,660,5.375,661,5.375,662,3.137,663,4.342,664,3.137,665,3.137,666,4.342,667,3.471,668,3.137,669,3.137,670,3.137,671,3.137,672,3.137,673,3.65,674,2.637,675,3.137,676,3.137,677,3.137,678,2.637,679,3.137,680,2.637,681,3.137,682,4.342,683,2.637,684,3.137,685,3.137,686,3.137,687,3.137,688,3.137,689,3.137,690,2.702,691,4.342,692,4.342,693,3.137,694,3.137,695,3.137,696,3.137,697,2.637,698,3.137,699,3.137,700,3.137,701,3.137,702,3.137,703,3.137,704,4.342,705,3.194,706,4.342,707,3.65]],["title/interfaces/Product.html",[42,0.382,191,0.423]],["body/interfaces/Product.html",[3,0.293,4,0.255,5,0.378,7,1.201,9,0.255,10,0.554,37,0.029,41,0.72,42,0.554,43,1.587,45,0.519,46,1.183,47,0.464,48,1.171,60,0.757,80,1.294,86,1.133,95,0.908,98,0.293,99,0.255,110,0.528,119,1.515,130,0.02,131,0.02,191,0.834,192,1.053,193,1.22,194,1.22,195,1.16,196,1.22,197,1.294,198,1.294,199,1.394,200,1.394,201,0.841,202,2.158,203,2.158,204,1.133,205,1.313,206,1.5,207,1.738,208,2.004,209,2.158,210,2.004,211,2.004,212,1.79,213,2.158,214,2.074,215,2.074,216,1.313,217,1.22,218,1.133,219,1.133,220,1.133,221,1.313,222,1.313,223,1.114,224,1.249,225,1.053,226,1.053,227,0.978,228,1.201,229,0.841,230,1.053,231,0.841,232,1.053]],["title/components/ProductCard.html",[132,0.511,172,1.115]],["body/components/ProductCard.html",[3,0.155,4,0.135,5,0.135,9,0.135,10,0.489,13,0.748,32,0.694,33,1.652,35,0.814,36,0.557,37,0.03,40,3.096,41,1.084,42,0.773,43,1.52,44,1.44,45,0.414,46,0.841,47,0.392,48,1.058,54,1.646,56,2.766,60,0.648,64,1.401,73,0.557,77,2.638,94,1.167,98,0.414,99,0.135,102,0.948,104,1.601,110,0.155,111,1.069,115,1.783,118,2.095,130,0.013,131,0.013,132,0.653,133,2.023,134,1.015,135,0.694,136,1.799,137,0.748,139,0.748,140,2.348,141,1.272,143,0.645,144,1.272,146,1.272,153,0.874,156,0.748,157,1.178,158,1.178,159,0.748,160,1.654,161,0.748,162,0.748,163,1.425,164,1.178,165,0.748,166,0.645,167,0.748,168,0.694,169,1.093,170,0.748,171,0.748,172,1.425,173,0.748,174,0.694,175,0.748,176,0.645,177,0.748,178,0.748,179,0.599,180,0.694,181,0.748,182,0.645,183,1.178,184,0.748,185,0.645,186,0.694,187,0.748,188,0.645,189,0.694,190,0.748,195,0.843,201,0.701,203,1.015,208,1.256,210,1.55,211,1.256,217,1.015,223,0.701,229,0.983,231,0.701,240,1.015,241,2.013,251,2.279,256,3.225,259,1.879,262,1.272,263,1.783,264,2.206,273,1.971,292,1.352,298,3.878,316,1.033,324,1.033,333,1.033,352,2.3,357,0.808,381,1.601,383,1.033,439,1.847,451,1.401,457,2.438,464,3.119,468,2.206,474,2.283,477,1.783,479,1.133,485,1.401,498,3.025,505,2.206,508,1.847,517,1.601,556,2.521,557,4.759,561,3.538,601,2.766,620,2.521,625,1.133,640,1.401,648,1.783,667,3.646,690,1.033,708,5.154,709,5.154,710,1.601,711,4.578,712,2.999,713,2.999,714,2.999,715,4.087,716,2.999,717,2.999,718,2.999,719,2.999,720,3.71,721,3.71,722,3.71,723,2.999,724,4.578,725,3.71,726,4.578,727,2.999,728,4.208,729,2.999,730,1.905,731,2.999,732,2.999,733,1.905,734,2.999,735,4.277,736,1.905,737,4.838,738,2.766,739,4.578,740,4.208,741,3.538,742,1.905,743,2.999,744,2.999,745,1.905,746,4.862,747,2.999,748,1.905,749,4.208,750,4.208,751,4.208,752,4.208,753,4.208,754,3.538,755,4.208,756,1.905,757,2.999,758,2.999,759,3.538,760,2.999,761,2.999,762,2.999,763,2.999,764,3.71,765,2.999,766,1.905,767,2.521,768,2.521,769,2.206,770,2.999,771,1.905,772,2.999,773,2.999,774,2.999,775,1.905,776,2.999,777,2.999,778,1.905,779,1.905,780,5.088,781,5.423,782,4.208,783,2.999,784,1.905,785,1.905,786,4.208,787,1.905,788,1.905,789,2.999,790,2.999,791,4.578,792,1.905,793,1.905,794,1.905,795,1.905,796,1.601,797,1.905,798,1.905,799,1.905,800,1.905,801,1.905,802,1.905,803,1.905,804,1.601,805,1.601,806,3.538,807,1.905,808,2.999,809,1.905,810,1.401,811,1.905,812,1.905,813,1.905,814,1.601,815,1.401,816,1.401,817,1.905,818,1.905,819,1.905,820,2.521,821,2.999,822,3.71,823,2.999,824,1.905,825,1.905,826,1.905,827,1.905,828,1.252,829,2.999,830,1.905,831,1.905,832,1.905,833,4.208,834,1.905,835,1.905,836,2.999,837,1.905,838,1.905,839,2.999,840,1.905,841,1.905,842,1.905,843,1.905,844,1.905,845,1.905,846,2.999,847,4.862,848,2.999,849,2.999,850,2.999,851,2.999,852,2.999,853,2.999]],["title/interfaces/ProductFormData.html",[191,0.423,219,1.036]],["body/interfaces/ProductFormData.html",[3,0.306,4,0.265,5,0.385,7,1.234,9,0.265,10,0.569,37,0.029,41,0.75,42,0.436,43,1.511,45,0.523,46,1.199,47,0.454,48,1.172,60,0.772,80,1.33,86,1.181,95,0.946,98,0.306,99,0.265,110,0.532,119,1.525,130,0.021,131,0.021,191,0.84,192,1.097,193,1.271,194,1.271,195,0.903,196,1.271,197,1.33,198,1.33,199,1.432,200,1.432,201,0.877,202,1.786,203,2.031,204,1.181,205,1.368,206,1.541,207,1.786,208,2.031,209,2.187,210,2.031,211,2.031,212,1.541,213,2.187,214,1.368,215,1.368,216,1.368,217,1.271,218,1.181,219,1.541,220,1.181,221,1.368,222,1.368,223,1.144,224,1.274,225,1.097,226,1.097,227,1.019,228,1.234,229,0.877,230,1.097,231,0.877,232,1.097]],["title/components/ProductManagement.html",[132,0.511,176,1.115]],["body/components/ProductManagement.html",[3,0.352,4,0.306,5,0.306,37,0.029,42,0.775,45,0.437,73,1.264,94,1.361,98,0.352,99,0.306,110,0.352,111,1.011,130,0.023,131,0.023,132,0.904,133,2.291,134,1.816,135,1.577,136,1.7,137,1.7,139,1.7,140,2.659,141,1.835,143,1.465,144,2.275,146,2.275,156,1.7,157,2.107,158,2.107,159,1.7,160,2.394,161,1.7,162,1.7,163,1.465,164,1.7,165,1.7,166,1.465,167,1.7,168,1.577,169,1.955,170,1.7,171,1.7,172,1.465,173,1.7,174,1.577,175,1.7,176,2.063,177,1.7,178,1.7,179,1.361,180,1.577,181,1.7,182,1.465,183,2.107,184,1.7,185,1.465,186,1.577,187,1.7,188,1.465,189,1.577,190,1.7,320,4.482,854,3.637,855,3.637,856,3.637,857,5.363,858,5.363,859,5.363]],["title/injectables/ProductService.html",[0,0.894,860,2.423]],["body/injectables/ProductService.html",[0,0.664,1,1.97,2,0.678,3,0.12,4,0.104,5,0.339,7,0.373,8,0.802,9,0.257,13,1.427,32,0.539,33,1.426,35,0.401,36,0.432,37,0.03,38,0.972,40,1.798,41,1.072,42,0.765,43,1.526,44,1.563,45,0.39,46,0.916,47,0.362,48,1.013,53,1.088,54,1.058,56,2.386,59,1.243,60,0.346,64,3.657,71,1.607,76,2.055,77,1.326,82,2.055,94,0.983,98,0.39,99,0.104,100,0.802,101,0.736,102,1.217,103,1.088,108,4.087,110,0.12,111,0.345,118,2.615,119,1.227,130,0.017,131,0.01,135,0.539,195,0.883,224,1.452,226,1.453,227,1.426,228,1.566,229,1.196,230,0.714,231,1.161,240,0.828,241,3.164,250,2.576,251,1.808,254,1.798,259,1.866,260,3.644,261,3.948,262,2.108,263,2.956,268,1.798,269,2.055,270,1.798,276,1.798,282,1.798,285,2.671,292,0.539,298,3.372,300,2.958,311,3.267,312,1.326,313,2.054,314,1.243,315,1.088,316,0.802,318,2.386,324,0.802,331,2.643,333,1.97,336,3.372,344,4.146,348,2.847,350,3.657,351,1.243,352,2.676,353,1.243,357,2.108,358,2.956,360,1.454,364,1.454,365,1.217,376,1.217,383,0.802,395,1.798,406,2.055,414,2.055,423,1.088,426,3.372,427,1.088,439,1.556,474,0.802,565,2.054,594,1.454,625,3.046,690,1.696,705,2.671,737,3.052,738,2.847,768,2.627,769,3.526,796,2.055,804,3.641,805,3.641,814,2.055,815,1.088,816,4.199,820,3.052,828,1.607,860,1.798,861,4.511,862,3.125,863,3.125,864,2.445,865,2.445,866,3.631,867,3.631,868,2.445,869,3.631,870,2.627,871,3.125,872,1.243,873,2.958,874,3.052,875,1.243,876,2.055,877,2.445,878,1.479,879,3.631,880,2.055,881,2.055,882,3.631,883,2.445,884,2.055,885,2.445,886,2.445,887,2.445,888,2.445,889,2.445,890,4.584,891,4.305,892,2.445,893,1.479,894,2.445,895,1.479,896,3.631,897,2.445,898,1.479,899,1.479,900,3.631,901,2.445,902,2.445,903,1.479,904,3.631,905,2.445,906,2.445,907,1.479,908,3.125,909,2.445,910,2.445,911,2.445,912,1.243,913,3.052,914,3.052,915,1.479,916,2.445,917,4.03,918,3.631,919,4.03,920,2.445,921,2.055,922,3.125,923,3.125,924,3.125,925,3.125,926,2.299,927,1.798,928,2.445,929,3.052,930,2.055,931,2.055,932,2.445,933,2.445,934,2.445,935,2.445,936,1.479,937,3.052,938,3.372,939,3.125,940,1.243,941,3.38,942,1.243,943,4.03,944,0.972,945,1.243,946,1.243,947,1.243,948,2.627,949,2.055,950,2.445,951,1.479,952,1.479,953,3.641,954,3.641,955,3.372,956,1.479,957,1.479,958,4.021,959,3.38,960,1.479,961,1.479,962,1.479,963,1.479,964,1.479,965,1.243,966,1.088,967,1.243,968,1.088,969,1.479,970,2.445,971,1.479,972,4.087,973,1.243,974,3.052,975,1.479,976,2.445,977,1.479,978,1.479,979,2.445,980,3.125,981,2.445,982,2.445,983,4.331,984,3.631,985,2.445,986,2.445,987,2.445,988,2.445,989,1.454,990,2.055,991,2.445,992,2.055,993,2.445,994,2.055,995,1.607,996,3.631,997,2.055,998,2.445,999,2.445,1000,1.798,1001,2.445,1002,2.445,1003,2.445,1004,2.445,1005,2.055,1006,2.445,1007,2.445,1008,2.445,1009,2.055,1010,2.445,1011,1.479,1012,1.479,1013,1.798,1014,1.479,1015,1.479,1016,1.479,1017,1.479,1018,3.631,1019,1.479,1020,1.479,1021,1.479,1022,1.479,1023,1.479,1024,1.088,1025,1.479,1026,1.479,1027,2.055,1028,1.243,1029,1.479,1030,1.479,1031,1.479,1032,2.445,1033,1.479,1034,1.479,1035,1.479,1036,1.479,1037,2.445,1038,1.479,1039,1.479,1040,2.055,1041,2.055]],["title/interfaces/ServiceResponse.html",[191,0.423,227,0.894]],["body/interfaces/ServiceResponse.html",[3,0.312,4,0.271,5,0.389,7,1.252,9,0.271,10,0.577,37,0.029,41,0.766,42,0.445,43,1.521,45,0.504,46,0.993,47,0.437,48,1.17,60,0.78,80,1.348,86,1.206,95,0.966,98,0.312,99,0.271,110,0.534,119,1.471,130,0.021,131,0.021,191,0.843,192,1.121,193,1.298,194,1.298,195,1.14,196,1.298,197,1.348,198,1.348,199,1.452,200,1.452,201,0.896,202,1.811,203,2.044,204,1.206,205,1.398,206,1.563,207,1.811,208,1.682,209,1.811,210,1.682,211,1.682,212,1.563,213,1.811,214,1.398,215,1.398,216,1.398,217,1.298,218,1.206,219,1.206,220,1.206,221,1.398,222,1.398,223,1.362,224,1.445,225,1.121,226,1.121,227,1.348,228,1.521,229,1.362,230,1.61,231,1.362,232,1.121]],["title/components/SignIn.html",[132,0.511,179,1.036]],["body/components/SignIn.html",[3,0.104,4,0.09,5,0.403,9,0.09,10,0.252,13,2.333,32,0.79,33,1.589,35,1.275,36,1.373,37,0.03,41,0.805,42,0.327,44,1.266,45,0.426,46,0.741,47,0.353,48,0.764,53,2.439,54,0.433,60,0.399,73,1.084,80,1.421,81,1.822,94,0.403,95,1.081,98,0.328,99,0.09,102,1.846,110,0.104,111,0.299,115,0.761,118,1.846,119,0.658,130,0.009,131,0.009,132,0.514,133,1.836,134,0.734,135,0.467,136,1.303,137,0.503,139,0.503,140,2.131,141,0.919,143,0.433,144,0.919,146,0.919,150,0.942,153,0.587,156,0.503,157,0.852,158,0.852,159,0.503,160,1.303,161,0.503,162,0.503,163,0.433,164,0.503,165,0.503,166,0.433,167,0.503,168,0.467,169,1.945,170,0.503,171,0.503,172,0.433,173,0.503,174,0.467,175,0.503,176,0.433,177,0.503,178,0.503,179,1.043,180,2.191,181,0.503,182,1.122,183,0.852,184,0.503,185,0.433,186,0.467,187,0.503,188,0.433,189,0.467,190,0.503,195,0.895,196,1.452,197,1.631,198,1.164,199,1.177,200,0.823,201,0.866,206,0.403,224,1.367,228,0.835,231,0.774,232,0.823,233,2.327,240,0.734,241,2.185,250,3.048,251,1.079,256,1.972,259,1.706,260,1.972,262,0.543,264,1.594,267,1.076,281,2.369,282,0.942,292,1.869,297,3.606,299,0.942,300,1.594,303,2.179,313,2.964,321,2.369,322,1.594,325,2.787,331,2.437,333,1.529,348,0.841,352,1.913,356,1.076,357,1.708,358,0.761,360,2.89,361,0.942,362,0.942,364,2.394,365,1.846,374,1.076,376,2.005,383,2.012,384,0.942,385,1.076,390,1.594,439,2.136,449,1.076,457,1.852,467,2.179,477,2.974,479,0.761,484,2.787,498,2.551,505,1.594,508,2.136,521,1.594,537,1.594,565,2.647,594,0.761,622,1.076,625,1.289,631,1.424,632,1.822,640,2.439,648,0.761,650,0.942,654,2.073,667,1.972,673,2.787,674,1.076,678,1.076,680,1.076,690,1.799,715,3.117,738,2.179,741,1.822,754,1.822,759,1.822,810,2.962,816,0.942,828,0.841,927,0.942,929,1.822,931,1.822,966,3.989,968,2.439,972,0.942,973,1.076,989,1.289,990,2.787,992,1.822,994,1.076,995,0.841,997,3.792,1009,1.822,1013,1.594,1024,1.594,1042,4.957,1043,4.957,1044,1.076,1045,2.369,1046,2.167,1047,2.167,1048,2.369,1049,2.818,1050,5.002,1051,2.818,1052,2.818,1053,2.818,1054,2.818,1055,2.818,1056,3.315,1057,2.167,1058,3.315,1059,2.167,1060,3.315,1061,2.167,1062,3.315,1063,2.167,1064,3.315,1065,1.28,1066,2.787,1067,1.28,1068,1.822,1069,1.28,1070,1.822,1071,2.167,1072,2.073,1073,1.424,1074,2.167,1075,2.167,1076,2.167,1077,2.167,1078,2.167,1079,1.28,1080,3.315,1081,5.64,1082,2.167,1083,2.167,1084,2.167,1085,2.167,1086,2.818,1087,1.28,1088,2.167,1089,2.167,1090,3.708,1091,3.606,1092,2.167,1093,2.167,1094,1.28,1095,2.167,1096,2.167,1097,1.822,1098,1.28,1099,2.167,1100,3.708,1101,2.167,1102,2.167,1103,3.95,1104,1.28,1105,2.167,1106,1.28,1107,2.167,1108,2.167,1109,2.167,1110,2.167,1111,2.167,1112,3.315,1113,2.167,1114,1.28,1115,2.167,1116,2.167,1117,2.167,1118,2.167,1119,2.167,1120,2.167,1121,1.28,1122,2.167,1123,2.167,1124,4.027,1125,2.818,1126,3.315,1127,2.167,1128,1.28,1129,3.315,1130,2.167,1131,2.167,1132,2.167,1133,2.167,1134,2.167,1135,2.818,1136,1.28,1137,2.167,1138,2.167,1139,2.167,1140,2.167,1141,1.28,1142,1.822,1143,1.28,1144,2.167,1145,1.28,1146,1.28,1147,1.28,1148,1.28,1149,2.167,1150,2.167,1151,2.167,1152,1.28,1153,2.787,1154,2.167,1155,2.167,1156,1.28,1157,1.28,1158,1.28,1159,0.942,1160,1.424,1161,1.28,1162,1.28,1163,1.28,1164,2.167,1165,2.818,1166,1.28,1167,1.28,1168,1.28,1169,1.822,1170,1.076,1171,1.28,1172,2.167,1173,1.28,1174,1.28,1175,1.28,1176,2.167,1177,1.076,1178,1.28,1179,1.076,1180,1.822,1181,1.822,1182,1.28,1183,1.28,1184,1.822,1185,2.167,1186,1.28,1187,2.167,1188,2.787,1189,3.117,1190,1.28,1191,1.28,1192,1.28,1193,2.818,1194,1.822,1195,1.076,1196,1.076,1197,1.076,1198,2.167,1199,1.076,1200,1.076,1201,1.28,1202,1.28,1203,1.28,1204,1.28,1205,1.076,1206,2.818,1207,1.28,1208,1.28,1209,1.28,1210,1.28,1211,1.28,1212,1.28,1213,1.28,1214,2.787,1215,1.28,1216,1.076,1217,2.167,1218,1.28,1219,1.28,1220,1.28,1221,1.28,1222,1.28,1223,1.28,1224,1.28,1225,2.167,1226,1.28,1227,1.28,1228,1.28,1229,1.28,1230,1.28,1231,1.28,1232,2.167,1233,1.28,1234,1.28,1235,1.28,1236,1.28,1237,1.28,1238,1.28,1239,1.28,1240,1.28,1241,1.28,1242,1.28,1243,1.076,1244,1.076,1245,1.28,1246,1.28,1247,4.289,1248,1.28,1249,1.28,1250,3.315,1251,3.315,1252,1.28,1253,1.28,1254,1.28,1255,2.167,1256,2.167,1257,2.167,1258,1.28,1259,2.167,1260,1.28,1261,2.167,1262,1.822,1263,2.167,1264,1.822,1265,2.818,1266,1.28,1267,1.28,1268,1.822,1269,1.28,1270,1.28,1271,1.28,1272,1.28,1273,2.369,1274,1.076,1275,1.28,1276,1.28,1277,1.28,1278,1.28,1279,1.28,1280,1.28,1281,1.28,1282,2.818,1283,0.942,1284,1.28,1285,1.28,1286,1.28,1287,1.28,1288,1.28,1289,1.28,1290,1.28,1291,1.28,1292,4.205,1293,1.28,1294,1.28,1295,1.28,1296,1.28,1297,1.076,1298,0.942,1299,1.076,1300,0.942,1301,1.076,1302,1.28,1303,1.28,1304,1.28,1305,1.28,1306,1.28,1307,1.28,1308,1.28,1309,2.167,1310,1.28,1311,1.28,1312,1.28,1313,1.28,1314,1.28,1315,1.076,1316,1.28,1317,1.28,1318,1.28,1319,1.28,1320,2.167,1321,2.167,1322,2.167,1323,2.167,1324,2.167,1325,3.315,1326,4.51,1327,3.315,1328,1.28,1329,1.28,1330,2.167,1331,1.28,1332,1.28,1333,1.28,1334,1.28,1335,1.28,1336,1.28,1337,2.167,1338,1.28,1339,1.28,1340,1.28,1341,1.28,1342,2.167,1343,2.167,1344,3.315,1345,1.28,1346,1.28,1347,1.28,1348,1.28,1349,2.167,1350,2.167,1351,2.167,1352,2.167,1353,2.167,1354,2.167,1355,2.167,1356,2.167,1357,1.28,1358,1.28,1359,1.28,1360,1.28,1361,1.28,1362,1.28,1363,1.28,1364,1.28,1365,1.28,1366,1.28,1367,1.28,1368,1.28,1369,1.28,1370,1.28,1371,1.28,1372,1.28,1373,1.28,1374,1.28,1375,1.28,1376,1.28]],["title/components/ToastError.html",[132,0.511,182,1.115]],["body/components/ToastError.html",[3,0.354,4,0.174,5,0.174,9,0.174,10,0.424,33,1.674,35,1.585,36,1.737,37,0.03,42,0.505,44,1.147,45,0.392,47,0.393,48,0.736,73,0.719,94,0.774,98,0.354,99,0.174,110,0.2,111,0.575,113,4.042,119,1.015,130,0.015,131,0.015,132,0.675,133,2.123,134,1.235,135,0.897,136,0.967,137,0.967,139,0.967,140,2.464,141,1.547,143,0.833,144,1.547,146,1.547,156,0.967,157,1.433,158,1.433,159,0.967,160,1.889,161,0.967,162,0.967,163,0.833,164,0.967,165,0.967,166,0.833,167,0.967,168,0.897,169,1.33,170,0.967,171,0.967,172,0.833,173,0.967,174,0.897,175,0.967,176,0.833,177,0.967,178,0.967,179,0.774,180,0.897,181,0.967,182,1.628,183,2.445,184,0.967,185,1.628,186,1.33,187,0.967,188,0.833,189,0.897,190,0.967,195,0.672,201,1.199,223,1.015,224,1.199,228,1.095,231,1.123,240,1.235,259,1.512,292,1.872,303,2.398,352,2.736,357,2.425,362,1.81,364,3.311,376,2.678,383,2.359,439,2.557,467,3.161,468,2.684,477,2.585,481,1.81,508,1.225,512,3.655,631,2.398,641,1.81,650,3.538,654,3.198,667,2.169,690,1.335,989,3.054,1005,2.068,1073,1.617,1153,5.309,1160,4.09,1216,2.068,1264,3.655,1273,3.067,1283,2.684,1377,4.578,1378,2.068,1379,4.348,1380,4.348,1381,4.348,1382,4.348,1383,4.348,1384,3.648,1385,3.648,1386,4.809,1387,4.348,1388,4.348,1389,4.348,1390,4.348,1391,5.135,1392,5.135,1393,5.135,1394,3.648,1395,3.648,1396,4.809,1397,4.348,1398,3.648,1399,2.46,1400,2.46,1401,3.648,1402,2.46,1403,3.648,1404,2.46,1405,2.46,1406,6.103,1407,5.718,1408,3.648,1409,3.648,1410,2.46,1411,5.379,1412,5.379,1413,4.809,1414,2.46,1415,3.648,1416,2.46,1417,3.648,1418,3.067,1419,2.46,1420,3.648,1421,3.648,1422,2.46,1423,3.648,1424,3.648,1425,3.648,1426,2.46,1427,3.648,1428,3.648,1429,3.648,1430,4.348,1431,3.648,1432,2.46,1433,2.46,1434,2.46,1435,1.81,1436,2.46,1437,2.46,1438,2.46,1439,3.648,1440,4.042,1441,2.46,1442,2.46,1443,2.46,1444,2.46,1445,2.46,1446,2.46,1447,2.46,1448,2.46,1449,2.46,1450,2.46,1451,3.648,1452,2.46,1453,2.46,1454,2.46,1455,2.46,1456,2.46,1457,2.46,1458,2.46]],["title/components/ToastSampleIconComponent.html",[132,0.511,185,1.115]],["body/components/ToastSampleIconComponent.html",[3,0.357,4,0.31,5,0.31,37,0.029,42,0.681,45,0.441,73,1.283,94,1.381,98,0.357,99,0.31,110,0.357,111,1.025,130,0.023,131,0.023,132,0.91,133,2.281,134,1.832,135,1.972,136,1.725,137,1.725,139,1.725,140,2.663,143,1.486,156,1.725,157,2.126,158,2.126,159,1.725,160,2.406,161,1.725,162,1.725,163,1.486,164,1.725,165,1.725,166,1.486,167,1.725,168,1.6,169,1.972,170,1.725,171,1.725,172,1.486,173,1.725,174,1.6,175,1.725,176,1.486,177,1.725,178,1.725,179,1.381,180,1.6,181,1.725,182,1.486,183,2.406,184,1.725,185,2.073,186,2.232,187,1.725,188,1.486,189,1.6,190,1.725,262,2.295,1160,2.885,1377,3.229,1435,4.315,1459,3.69,1460,5.411]],["title/components/UpdateForm.html",[132,0.511,188,1.115]],["body/components/UpdateForm.html",[3,0.207,4,0.179,5,0.384,9,0.179,10,0.434,13,0.998,32,1.361,33,1.667,35,1.202,36,1.294,37,0.03,41,0.746,42,0.514,44,1.393,45,0.48,47,0.434,48,0.977,54,1.499,60,0.77,73,0.742,80,1.013,94,1.769,95,0.64,98,0.488,99,0.179,110,0.207,111,0.593,130,0.016,131,0.016,132,0.687,133,2.134,134,1.264,135,0.925,136,0.998,137,0.998,139,0.998,140,2.477,141,1.584,143,0.859,144,1.584,146,1.584,150,1.868,156,0.998,157,1.467,158,1.467,159,0.998,160,1.918,161,0.998,162,0.998,163,0.859,164,0.998,165,0.998,166,0.859,167,0.998,168,0.925,169,1.78,170,0.998,171,0.998,172,0.859,173,0.998,174,0.925,175,0.998,176,0.859,177,0.998,178,0.998,179,0.798,180,0.925,181,0.998,182,0.859,183,1.467,184,0.998,185,0.859,186,0.925,187,0.998,188,1.653,189,0.925,190,0.998,195,0.816,197,1.013,198,0.689,200,1.091,201,0.593,229,1.215,236,3.235,240,1.264,259,1.636,292,2.103,307,2.746,316,1.377,338,1.868,352,2.071,357,2.071,358,2.22,360,3.502,365,1.859,366,3.592,367,1.868,368,2.134,376,1.859,378,2.134,379,2.134,389,1.868,457,2.91,474,1.377,477,1.51,479,1.51,483,2.134,485,1.868,508,1.859,565,2.454,594,2.22,667,1.51,697,2.134,735,2.134,806,2.134,989,1.51,1045,3.722,1048,3.722,1066,4.104,1068,3.722,1072,1.868,1073,1.669,1091,3.722,1142,3.138,1159,1.868,1170,2.134,1177,2.134,1194,2.134,1195,2.134,1196,2.134,1197,2.134,1199,2.134,1200,2.134,1205,2.134,1243,2.134,1244,2.134,1300,2.746,1461,5.215,1462,5.215,1463,2.134,1464,4.428,1465,4.428,1466,4.428,1467,4.428,1468,4.428,1469,4.428,1470,4.428,1471,4.428,1472,3.733,1473,3.733,1474,4.882,1475,4.428,1476,4.428,1477,3.733,1478,4.882,1479,3.733,1480,4.882,1481,4.882,1482,2.539,1483,5.202,1484,3.722,1485,3.733,1486,3.733,1487,2.539,1488,2.539,1489,3.733,1490,2.539,1491,2.539,1492,2.539,1493,2.539,1494,3.733,1495,2.539,1496,2.539,1497,2.539,1498,2.539,1499,2.539,1500,2.539,1501,2.539,1502,2.539,1503,2.539,1504,2.539,1505,2.539,1506,2.539,1507,2.539,1508,2.539,1509,2.539,1510,2.539,1511,2.539,1512,2.539,1513,2.539,1514,3.733,1515,3.733,1516,2.539,1517,2.539,1518,2.539,1519,2.539,1520,2.539,1521,2.539,1522,2.539,1523,4.428,1524,2.539,1525,2.539,1526,2.539,1527,2.539,1528,2.539,1529,3.733,1530,3.733,1531,2.539,1532,2.539,1533,3.733,1534,2.539,1535,2.539,1536,2.539,1537,2.539,1538,2.539,1539,2.539,1540,2.539,1541,2.539,1542,3.733,1543,3.733,1544,3.733,1545,3.138,1546,3.733,1547,3.733,1548,3.733,1549,3.733,1550,3.733,1551,3.733,1552,3.733,1553,3.733,1554,3.733,1555,3.733]],["title/interfaces/UploadProgress.html",[191,0.423,220,1.036]],["body/interfaces/UploadProgress.html",[3,0.314,4,0.272,5,0.452,7,1.256,9,0.272,10,0.579,37,0.029,41,0.77,42,0.448,43,1.524,45,0.504,46,0.996,47,0.438,48,1.169,60,0.782,80,1.353,86,1.212,95,0.971,98,0.314,99,0.272,110,0.534,119,1.508,130,0.021,131,0.021,191,0.843,192,1.126,193,1.305,194,1.305,195,0.918,196,1.305,197,1.353,198,1.353,199,1.457,200,1.457,201,0.9,202,1.817,203,2.048,204,1.212,205,1.405,206,1.568,207,1.817,208,1.687,209,1.817,210,1.687,211,1.687,212,1.568,213,1.817,214,1.405,215,1.405,216,1.405,217,1.305,218,1.212,219,1.212,220,1.568,221,2.129,222,2.129,223,1.364,224,1.447,225,1.126,226,1.126,227,1.046,228,1.256,229,0.9,230,1.126,231,0.9,232,1.126]],["title/interfaces/User.html",[60,0.466,191,0.423]],["body/interfaces/User.html",[3,0.303,4,0.263,5,0.384,7,1.228,9,0.263,10,0.566,37,0.029,41,0.745,42,0.433,43,1.598,45,0.522,46,0.974,47,0.453,48,1.172,60,0.816,80,1.624,86,1.172,95,1.453,98,0.303,99,0.263,110,0.531,119,1.461,130,0.021,131,0.021,191,0.839,192,1.089,193,1.261,194,1.261,195,1.062,196,1.261,197,1.624,198,1.624,199,1.685,200,1.685,201,0.87,202,2.181,203,2.117,204,1.172,205,1.358,206,1.534,207,1.778,208,1.651,209,1.778,210,1.651,211,1.651,212,1.534,213,1.778,214,1.358,215,1.358,216,1.358,217,1.261,218,1.172,219,1.172,220,1.172,221,1.358,222,1.358,223,1.139,224,1.269,225,1.089,226,1.089,227,1.011,228,1.228,229,0.87,230,1.089,231,0.87,232,1.089]],["title/injectables/UserService.html",[0,0.894,1556,2.423]],["body/injectables/UserService.html",[0,0.694,1,2.036,2,0.716,3,0.127,4,0.11,5,0.409,7,0.393,8,0.847,9,0.11,10,0.297,13,2.296,32,0.932,33,1.569,35,0.881,36,0.948,37,0.03,38,1.026,41,0.827,43,1.043,44,1.398,45,0.337,46,0.75,47,0.346,48,0.979,54,1.589,56,1.026,60,0.819,72,1.88,73,1.525,77,0.847,84,1.312,86,1.302,88,1.312,94,0.804,95,0.945,98,0.382,99,0.11,100,0.847,101,0.777,102,1.273,103,1.148,110,0.127,111,0.365,115,2.231,118,2.524,119,1.038,130,0.011,131,0.011,195,0.763,197,1.018,199,0.456,206,0.491,223,1.096,224,1.444,226,1.299,227,0.881,228,1.374,229,0.876,230,0.456,231,0.876,236,1.93,237,2.76,238,2.728,240,0.865,241,3.17,250,1.52,251,0.777,254,1.148,259,1.962,260,3.725,261,1.88,262,1.756,263,3.102,270,1.88,276,1.88,288,2.728,292,1.183,299,1.148,310,1.148,311,3.085,312,0.847,313,1.026,315,1.148,316,0.847,318,1.026,320,1.148,331,2.721,333,2.246,336,3.27,337,1.312,338,1.148,344,3.27,348,2.721,350,2.76,352,2.646,355,1.312,357,2.354,358,1.93,360,3.3,364,3.102,365,2.66,366,3.045,367,3.045,375,1.88,376,2.66,383,1.387,384,3.27,389,1.148,390,1.148,395,1.88,423,1.148,426,1.88,427,1.88,428,1.312,439,0.777,450,1.312,474,0.847,508,2.806,537,1.148,608,2.149,625,1.52,641,2.76,690,2.036,705,1.88,707,3.154,769,1.88,815,1.148,828,1.68,870,2.728,872,1.312,873,2.388,874,3.154,875,2.149,876,2.149,891,2.149,912,1.312,913,3.154,914,3.154,917,3.154,919,2.728,921,2.149,926,1.148,927,2.388,930,2.149,937,3.154,938,3.27,940,1.312,941,3.48,942,1.312,943,3.737,944,1.026,945,1.312,946,1.312,947,1.312,948,2.149,949,2.149,953,3.48,954,4.262,955,3.045,959,3.48,965,1.312,966,2.76,967,2.149,968,1.88,972,3.73,974,3.154,989,1.52,1024,1.88,1027,1.312,1040,2.149,1041,2.149,1070,2.149,1072,2.76,1073,2.466,1103,1.312,1169,2.149,1179,2.149,1180,2.149,1181,2.149,1184,1.312,1188,1.312,1189,1.312,1214,1.312,1262,4.86,1268,2.149,1274,3.154,1292,2.728,1297,2.728,1298,1.148,1299,1.312,1300,1.148,1301,1.312,1315,1.312,1440,2.149,1484,1.312,1545,2.149,1556,1.88,1557,4.912,1558,3.752,1559,3.752,1560,3.752,1561,3.752,1562,3.752,1563,4.139,1564,3.752,1565,3.752,1566,3.246,1567,3.246,1568,2.556,1569,1.561,1570,3.752,1571,2.556,1572,2.556,1573,1.561,1574,2.556,1575,2.556,1576,4.693,1577,1.561,1578,3.752,1579,2.556,1580,4.898,1581,1.561,1582,2.556,1583,2.556,1584,1.561,1585,4.445,1586,4.445,1587,2.556,1588,2.556,1589,2.556,1590,2.556,1591,1.561,1592,1.561,1593,2.556,1594,1.561,1595,2.556,1596,1.561,1597,2.556,1598,2.556,1599,2.556,1600,2.556,1601,2.556,1602,2.556,1603,1.561,1604,3.752,1605,4.445,1606,2.556,1607,3.246,1608,1.561,1609,2.556,1610,2.556,1611,1.561,1612,2.556,1613,2.556,1614,2.556,1615,1.561,1616,2.556,1617,3.752,1618,1.561,1619,2.556,1620,3.246,1621,1.561,1622,1.561,1623,1.561,1624,1.561,1625,3.246,1626,1.561,1627,1.561,1628,1.561,1629,1.561,1630,1.561,1631,1.561,1632,1.561,1633,3.246,1634,1.561,1635,1.561,1636,1.561,1637,2.556,1638,1.561,1639,2.556,1640,1.561,1641,1.561,1642,1.561,1643,1.561,1644,1.561,1645,1.561,1646,2.556,1647,1.561,1648,1.561,1649,1.561,1650,1.561,1651,1.561,1652,1.561,1653,1.561,1654,1.561,1655,1.561,1656,1.561,1657,1.561,1658,4.445,1659,1.561,1660,1.561,1661,1.561,1662,1.561,1663,1.561,1664,1.561,1665,2.556,1666,1.561,1667,1.561,1668,1.561,1669,1.561,1670,1.561,1671,2.556]],["title/coverage.html",[1672,3.774]],["body/coverage.html",[0,1.705,1,2.06,5,0.268,6,3.191,7,0.956,8,3.266,37,0.029,42,0.441,47,0.268,54,1.285,60,0.538,73,1.109,130,0.021,131,0.021,132,1.027,133,1.285,138,3.191,143,1.285,163,1.285,166,1.285,168,1.384,172,1.285,174,1.384,176,1.285,179,1.194,182,1.285,185,1.285,186,1.384,188,1.285,191,0.841,192,1.109,194,2.215,204,1.194,212,1.194,218,1.194,219,1.194,220,1.194,225,1.109,227,1.03,232,1.109,233,2.06,234,3.191,432,2.495,433,3.631,434,3.191,439,3.379,451,2.793,452,3.191,492,3.191,601,2.495,602,3.191,611,2.793,612,3.191,653,3.191,708,4.149,709,3.191,710,3.191,854,3.191,855,3.191,856,3.191,860,2.793,861,3.191,926,2.793,944,2.495,1028,3.191,1042,3.191,1043,3.191,1044,3.191,1160,3.244,1377,3.631,1378,3.191,1435,2.793,1459,3.191,1461,3.191,1462,3.191,1463,3.191,1556,2.793,1557,3.191,1672,3.191,1673,3.796,1674,3.796,1675,3.796,1676,3.191,1677,3.796,1678,3.191,1679,5.484,1680,3.796,1681,3.796,1682,3.796,1683,3.796,1684,3.796,1685,4.935,1686,5.484,1687,3.796,1688,3.796,1689,5.484,1690,5.807,1691,3.796,1692,3.796,1693,3.796,1694,3.796,1695,3.796,1696,3.796,1697,3.796,1698,3.796,1699,3.796,1700,3.796,1701,3.796,1702,3.796,1703,3.796,1704,3.796,1705,3.796,1706,3.796,1707,3.796,1708,3.796,1709,3.796,1710,3.796,1711,3.796,1712,3.796,1713,3.796,1714,3.796,1715,3.796,1716,3.796,1717,3.191,1718,3.796,1719,3.796,1720,3.796]],["title/dependencies.html",[1721,2.314,1722,3.328]],["body/dependencies.html",[37,0.029,99,0.343,130,0.024,131,0.024,153,2.226,312,2.633,479,2.885,481,3.57,1000,3.57,1159,3.57,1722,4.079,1723,4.852,1724,4.852,1725,6.466,1726,4.852,1727,4.852,1728,4.852,1729,4.079,1730,5.749,1731,5.749,1732,4.852,1733,4.852,1734,4.852,1735,4.852,1736,4.852,1737,4.852,1738,4.852,1739,4.852,1740,4.852,1741,4.852,1742,4.852,1743,4.852,1744,4.852,1745,4.852,1746,4.852,1747,4.852,1748,4.852,1749,4.852]],["title/miscellaneous/functions.html",[1750,1.809,1751,3.328]],["body/miscellaneous/functions.html",[9,0.352,37,0.027,44,1.569,45,0.406,46,0.997,47,0.352,60,0.706,130,0.025,131,0.025,195,0.919,224,1.521,231,1.365,251,2.483,256,2.966,259,1.569,285,3.669,738,3.84,767,4.193,810,3.669,873,4.559,938,4.559,944,3.84,955,3.669,995,3.278,1013,3.669,1097,4.193,1717,4.193,1750,3.278,1751,4.193,1752,4.988,1753,4.988,1754,4.988,1755,4.988]],["title/index.html",[9,0.194,1756,2.752,1757,2.752]],["body/index.html",[4,0.305,35,1.453,37,0.023,54,1.461,116,3.627,130,0.023,131,0.023,132,0.903,134,1.461,189,1.573,268,3.174,302,3.627,318,2.836,648,2.565,683,3.627,880,3.627,881,3.627,884,3.627,995,3.519,1000,4.478,1283,3.174,1298,3.174,1418,5.361,1729,3.627,1758,4.314,1759,5.821,1760,4.314,1761,5.353,1762,6.258,1763,3.627,1764,4.314,1765,5.353,1766,5.821,1767,4.314,1768,6.258,1769,6.377,1770,6.377,1771,4.314,1772,5.353,1773,4.314,1774,4.314,1775,5.353,1776,4.314,1777,4.314,1778,4.314,1779,4.314,1780,5.353,1781,4.314,1782,4.314,1783,4.314,1784,5.821,1785,4.314,1786,4.314,1787,4.314,1788,4.314,1789,4.314,1790,4.314,1791,4.314,1792,5.821,1793,4.314,1794,4.314,1795,4.314,1796,4.314,1797,4.314,1798,4.314,1799,4.314,1800,4.314,1801,4.314,1802,5.353,1803,5.821,1804,4.314,1805,4.314,1806,4.314,1807,4.314,1808,4.314,1809,5.821,1810,4.314,1811,4.314,1812,5.353,1813,4.314,1814,4.314,1815,4.314,1816,4.314,1817,4.314,1818,4.314,1819,4.314,1820,4.314,1821,4.314,1822,4.314,1823,4.314,1824,3.174,1825,4.314]],["title/modules.html",[1826,3.774]],["body/modules.html",[37,0.026,130,0.026,131,0.026,1826,4.504]],["title/overview.html",[1824,3.303]],["body/overview.html",[2,2.433,37,0.026,130,0.026,131,0.026,134,1.795,193,1.795,1824,3.9,1827,5.301,1828,5.301,1829,5.301]],["title/interfaces/productImage.html",[191,0.423,212,1.036]],["body/interfaces/productImage.html",[3,0.317,4,0.276,5,0.393,7,1.265,9,0.276,10,0.583,37,0.029,41,0.779,42,0.453,43,1.613,45,0.506,46,1.003,47,0.429,48,1.172,60,0.787,80,1.363,86,1.226,95,0.982,98,0.317,99,0.276,110,0.535,119,1.477,130,0.021,131,0.021,191,0.845,192,1.139,193,1.32,194,1.32,196,1.32,197,1.363,198,1.363,199,1.467,200,1.467,201,0.911,202,1.831,203,2.055,204,1.226,205,1.421,206,1.579,207,1.831,208,1.7,209,1.831,210,1.7,211,1.7,212,1.747,213,1.831,214,1.421,215,1.421,216,2.138,217,1.986,218,1.226,219,1.226,220,1.226,221,1.421,222,1.421,223,1.173,224,1.297,225,1.139,226,1.139,227,1.058,228,1.265,229,0.911,230,1.139,231,0.911,232,1.139]],["title/properties.html",[10,0.46,1721,2.314]],["body/properties.html",[10,0.619,37,0.027,130,0.026,131,0.026,1763,4.48,1830,5.329]],["title/miscellaneous/variables.html",[1750,1.809,1831,3.328]],["body/miscellaneous/variables.html",[9,0.362,35,1.39,36,1.497,37,0.029,47,0.362,130,0.025,131,0.025,262,2.173,453,4.306,1676,4.306,1678,4.989,1750,3.367,1831,4.306,1832,5.122,1833,5.122,1834,5.122,1835,5.122,1836,5.122,1837,5.122,1838,5.122,1839,5.122,1840,5.122]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/productImage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":439,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0\">ajouter",{"_index":852,"title":{},"body":{"components/ProductCard.html":{}}}],["0).gettime",{"_index":827,"title":{},"body":{"components/ProductCard.html":{}}}],["0.0.0",{"_index":1830,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0011",{"_index":549,"title":{},"body":{"components/Dashboard.html":{}}}],["0012",{"_index":541,"title":{},"body":{"components/Dashboard.html":{}}}],["1",{"_index":474,"title":{},"body":{"components/CircularImage.html":{},"components/Dashboard.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["1,024",{"_index":532,"title":{},"body":{"components/Dashboard.html":{}}}],["1,240.50",{"_index":529,"title":{},"body":{"components/Dashboard.html":{}}}],["1,847",{"_index":582,"title":{},"body":{"components/Dashboard.html":{}}}],["1.2.3",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["10/23",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1028,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["1000",{"_index":828,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["1000ms",{"_index":934,"title":{},"body":{"injectables/ProductService.html":{}}}],["1024",{"_index":1180,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["11",{"_index":1829,"title":{},"body":{"overview.html":{}}}],["12",{"_index":523,"title":{},"body":{"components/Dashboard.html":{}}}],["12.5",{"_index":584,"title":{},"body":{"components/Dashboard.html":{}}}],["13",{"_index":1827,"title":{},"body":{"overview.html":{}}}],["13/17",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":1267,"title":{},"body":{"components/SignIn.html":{}}}],["17/25",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["17/35",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["17/40",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":524,"title":{},"body":{"components/Dashboard.html":{}}}],["18/21",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["19.99",{"_index":563,"title":{},"body":{"components/Dashboard.html":{}}}],["1].charat(0)).touppercase",{"_index":1522,"title":{},"body":{"components/UpdateForm.html":{}}}],["2",{"_index":518,"title":{},"body":{"components/Dashboard.html":{}}}],["2.3.0",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["20.0.1",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":1764,"title":{},"body":{"index.html":{}}}],["20.1.3",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["20.1.4",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":983,"title":{},"body":{"injectables/ProductService.html":{}}}],["2023",{"_index":540,"title":{},"body":{"components/Dashboard.html":{}}}],["22",{"_index":554,"title":{},"body":{"components/Dashboard.html":{}}}],["23",{"_index":546,"title":{},"body":{"components/Dashboard.html":{}}}],["24",{"_index":517,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["25",{"_index":1458,"title":{},"body":{"components/ToastError.html":{}}}],["299",{"_index":984,"title":{},"body":{"injectables/ProductService.html":{}}}],["3",{"_index":705,"title":{},"body":{"components/Navbar.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["3.13.0",{"_index":1742,"title":{},"body":{"dependencies.html":{}}}],["3.8",{"_index":591,"title":{},"body":{"components/Dashboard.html":{}}}],["30",{"_index":569,"title":{},"body":{"components/Dashboard.html":{}}}],["300",{"_index":830,"title":{},"body":{"components/ProductCard.html":{}}}],["3000",{"_index":445,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["30j",{"_index":573,"title":{},"body":{"components/Dashboard.html":{}}}],["33",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["39.3",{"_index":588,"title":{},"body":{"components/Dashboard.html":{}}}],["3m",{"_index":574,"title":{},"body":{"components/Dashboard.html":{}}}],["4.1.10",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1281,"title":{},"body":{"components/SignIn.html":{}}}],["401",{"_index":1284,"title":{},"body":{"components/SignIn.html":{}}}],["403",{"_index":1285,"title":{},"body":{"components/SignIn.html":{}}}],["409",{"_index":1290,"title":{},"body":{"components/SignIn.html":{}}}],["413",{"_index":1293,"title":{},"body":{"components/SignIn.html":{}}}],["42",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["422",{"_index":1296,"title":{},"body":{"components/SignIn.html":{}}}],["43",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["45.00",{"_index":555,"title":{},"body":{"components/Dashboard.html":{}}}],["47",{"_index":585,"title":{},"body":{"components/Dashboard.html":{}}}],["48",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":537,"title":{},"body":{"components/Dashboard.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["5.4.1",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1302,"title":{},"body":{"components/SignIn.html":{}}}],["5mb",{"_index":1181,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["6",{"_index":1342,"title":{},"body":{"components/SignIn.html":{}}}],["60",{"_index":829,"title":{},"body":{"components/ProductCard.html":{}}}],["68",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1828,"title":{},"body":{"overview.html":{}}}],["7.0.3",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["7j",{"_index":572,"title":{},"body":{"components/Dashboard.html":{}}}],["8",{"_index":533,"title":{},"body":{"components/Dashboard.html":{}}}],["8.2",{"_index":587,"title":{},"body":{"components/Dashboard.html":{}}}],["83",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["89.90",{"_index":548,"title":{},"body":{"components/Dashboard.html":{}}}],["9/12",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["_issignin",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":622,"title":{},"body":{"injectables/GuardService.html":{},"components/SignIn.html":{}}}],["accessors",{"_index":723,"title":{},"body":{"components/ProductCard.html":{}}}],["accordingly",{"_index":1140,"title":{},"body":{"components/SignIn.html":{}}}],["account",{"_index":1292,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["action",{"_index":740,"title":{},"body":{"components/ProductCard.html":{}}}],["activated",{"_index":621,"title":{},"body":{"injectables/GuardService.html":{}}}],["activatedroutesnapshot",{"_index":617,"title":{},"body":{"injectables/GuardService.html":{}}}],["active",{"_index":692,"title":{},"body":{"components/Navbar.html":{}}}],["activeindex",{"_index":435,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["actual",{"_index":910,"title":{},"body":{"injectables/ProductService.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["actuel",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["actuellement",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["add",{"_index":40,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["add_img_by_product_id",{"_index":12,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["added",{"_index":971,"title":{},"body":{"injectables/ProductService.html":{}}}],["addimageinproduct",{"_index":862,"title":{},"body":{"injectables/ProductService.html":{}}}],["addimageinproduct(id",{"_index":877,"title":{},"body":{"injectables/ProductService.html":{}}}],["adding",{"_index":814,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["additional",{"_index":1819,"title":{},"body":{"index.html":{}}}],["addproduct",{"_index":863,"title":{},"body":{"injectables/ProductService.html":{}}}],["addproduct(product",{"_index":892,"title":{},"body":{"injectables/ProductService.html":{}}}],["address",{"_index":81,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/SignIn.html":{}}}],["adds",{"_index":879,"title":{},"body":{"injectables/ProductService.html":{}}}],["addtocart",{"_index":714,"title":{},"body":{"components/ProductCard.html":{}}}],["addtocart(event",{"_index":747,"title":{},"body":{"components/ProductCard.html":{}}}],["addtocartevent",{"_index":720,"title":{},"body":{"components/ProductCard.html":{}}}],["adjusts",{"_index":1139,"title":{},"body":{"components/SignIn.html":{}}}],["admin",{"_index":61,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["again",{"_index":968,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["ajouter",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"components/Navbar.html":{}}}],["alert('auth",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["alert('invalid",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["alert('login",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["alert('registration",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedroutesforclient",{"_index":643,"title":{},"body":{"injectables/GuardService.html":{}}}],["allowedroutesforclient.includes(state.url",{"_index":645,"title":{},"body":{"injectables/GuardService.html":{}}}],["allowedtypes",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedtypes.includes(file.type",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["already",{"_index":1172,"title":{},"body":{"components/SignIn.html":{}}}],["analyses",{"_index":598,"title":{},"body":{"components/Dashboard.html":{}}}],["angular",{"_index":1000,"title":{},"body":{"injectables/ProductService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/cdk",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":479,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":940,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":99,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/productImage.html":{}}}],["angular/forms",{"_index":1159,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":483,"title":{},"body":{"components/CircularImage.html":{},"components/UpdateForm.html":{}}}],["angular/material/core",{"_index":1505,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/material/dialog",{"_index":1502,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/material/icon",{"_index":485,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/UpdateForm.html":{}}}],["angular/material/input",{"_index":1503,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/material/select",{"_index":1504,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/platform",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":153,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"dependencies.html":{}}}],["animate",{"_index":436,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["annuler",{"_index":1553,"title":{},"body":{"components/UpdateForm.html":{}}}],["anti",{"_index":1025,"title":{},"body":{"injectables/ProductService.html":{}}}],["aperçu",{"_index":513,"title":{},"body":{"components/Dashboard.html":{}}}],["api",{"_index":38,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["apiurl",{"_index":876,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["apiurlservice",{"_index":1,"title":{"injectables/ApiUrlService.html":{}},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["app",{"_index":133,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["app.css",{"_index":147,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":145,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":1678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appels",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["application",{"_index":1775,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["applicationconfig",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1096,"title":{},"body":{"components/SignIn.html":{}}}],["après",{"_index":1315,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["array",{"_index":804,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["array(3).fill",{"_index":473,"title":{},"body":{"components/CircularImage.html":{}}}],["arraybuffer",{"_index":1142,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["arrive",{"_index":1255,"title":{},"body":{"components/SignIn.html":{}}}],["artifacts",{"_index":1796,"title":{},"body":{"index.html":{}}}],["assigner",{"_index":1509,"title":{},"body":{"components/UpdateForm.html":{}}}],["associated",{"_index":768,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["async",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["async/await",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["asynchronous",{"_index":918,"title":{},"body":{"injectables/ProductService.html":{}}}],["attempt",{"_index":1041,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["attempts",{"_index":928,"title":{},"body":{"injectables/ProductService.html":{}}}],["au",{"_index":697,"title":{},"body":{"components/Navbar.html":{},"components/UpdateForm.html":{}}}],["aucun",{"_index":1431,"title":{},"body":{"components/ToastError.html":{}}}],["aucune",{"_index":1425,"title":{},"body":{"components/ToastError.html":{}}}],["aujourd'hui",{"_index":534,"title":{},"body":{"components/Dashboard.html":{}}}],["aujourd\\'hui",{"_index":600,"title":{},"body":{"components/Dashboard.html":{}}}],["auth",{"_index":117,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["auth.service",{"_index":626,"title":{},"body":{"injectables/GuardService.html":{}}}],["authenticated",{"_index":71,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{}}}],["authenticates",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["authform",{"_index":1048,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["authform.get('avatar')?.invalid",{"_index":1328,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('avatar')?.touched",{"_index":1329,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.errors?.['mismatch",{"_index":1348,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.errors?.['required",{"_index":1347,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.invalid",{"_index":1345,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.touched",{"_index":1346,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.errors?.['email",{"_index":1336,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.errors?.['required",{"_index":1335,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.invalid",{"_index":1333,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.touched",{"_index":1334,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('name')?.invalid",{"_index":1331,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('name')?.touched",{"_index":1332,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.errors?.['minlength",{"_index":1341,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.errors?.['required",{"_index":1340,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.invalid",{"_index":1338,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.touched",{"_index":1339,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'avatar\\')?.invalid",{"_index":1359,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'avatar\\')?.touched",{"_index":1360,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.errors?.[\\'mismatch",{"_index":1374,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.errors?.[\\'required",{"_index":1373,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.invalid",{"_index":1371,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.touched",{"_index":1372,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.errors?.[\\'email",{"_index":1366,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.errors?.[\\'required",{"_index":1365,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.invalid",{"_index":1363,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.touched",{"_index":1364,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'name\\')?.invalid",{"_index":1361,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'name\\')?.touched",{"_index":1362,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.errors?.[\\'minlength",{"_index":1370,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.errors?.[\\'required",{"_index":1369,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.invalid",{"_index":1367,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.touched",{"_index":1368,"title":{},"body":{"components/SignIn.html":{}}}],["authformdata",{"_index":192,"title":{"interfaces/AuthFormData.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["authorization",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["authresponse",{"_index":225,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["authservice",{"_index":233,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"coverage.html":{}}}],["auto",{"_index":449,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"components/SignIn.html":{}}}],["automatically",{"_index":1776,"title":{},"body":{"index.html":{}}}],["automatiquement",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["autorisée",{"_index":649,"title":{},"body":{"injectables/GuardService.html":{}}}],["autres",{"_index":1008,"title":{},"body":{"injectables/ProductService.html":{}}}],["available",{"_index":1787,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":95,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["avatar.jpg",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarfile",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarfile.name",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarfile.type",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarinput",{"_index":1217,"title":{},"body":{"components/SignIn.html":{}}}],["avatarinput.value",{"_index":1220,"title":{},"body":{"components/SignIn.html":{}}}],["avatarpreview",{"_index":1049,"title":{},"body":{"components/SignIn.html":{}}}],["avec",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/UserService.html":{}}}],["avoid",{"_index":752,"title":{},"body":{"components/ProductCard.html":{}}}],["await",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["back",{"_index":1321,"title":{},"body":{"components/SignIn.html":{}}}],["backend",{"_index":108,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["backoff",{"_index":921,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["badge",{"_index":781,"title":{},"body":{"components/ProductCard.html":{}}}],["badgeclass",{"_index":725,"title":{},"body":{"components/ProductCard.html":{}}}],["badges",{"_index":811,"title":{},"body":{"components/ProductCard.html":{}}}],["badgetext",{"_index":724,"title":{},"body":{"components/ProductCard.html":{}}}],["base",{"_index":930,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["basedelay",{"_index":914,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["baseurl",{"_index":14,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["bearer",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["before",{"_index":932,"title":{},"body":{"injectables/ProductService.html":{}}}],["behaviorsubject",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":608,"title":{},"body":{"injectables/DataService.html":{},"injectables/UserService.html":{}}}],["between",{"_index":1137,"title":{},"body":{"components/SignIn.html":{}}}],["bienvenue",{"_index":510,"title":{},"body":{"components/Dashboard.html":{}}}],["blob",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["blob([json.stringify(userdata",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{}}}],["body",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["bon",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["bord",{"_index":509,"title":{},"body":{"components/Dashboard.html":{}}}],["both",{"_index":1116,"title":{},"body":{"components/SignIn.html":{}}}],["browser",{"_index":1729,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":1792,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1793,"title":{},"body":{"index.html":{}}}],["buttondirective",{"_index":1434,"title":{},"body":{"components/ToastError.html":{}}}],["buttons",{"_index":761,"title":{},"body":{"components/ProductCard.html":{}}}],["buyer",{"_index":1349,"title":{},"body":{"components/SignIn.html":{}}}],["buyer&#64;demo.com",{"_index":1358,"title":{},"body":{"components/SignIn.html":{}}}],["buyer@demo.com",{"_index":1376,"title":{},"body":{"components/SignIn.html":{}}}],["c'est",{"_index":1257,"title":{},"body":{"components/SignIn.html":{}}}],["cache",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["call",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["canactivate",{"_index":613,"title":{},"body":{"injectables/GuardService.html":{}}}],["canactivate(route",{"_index":616,"title":{},"body":{"injectables/GuardService.html":{}}}],["canhide",{"_index":715,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["car",{"_index":1535,"title":{},"body":{"components/UpdateForm.html":{}}}],["card",{"_index":711,"title":{},"body":{"components/ProductCard.html":{}}}],["card'},{'name",{"_index":173,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["card.css",{"_index":713,"title":{},"body":{"components/ProductCard.html":{}}}],["card.html",{"_index":712,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts",{"_index":710,"title":{},"body":{"components/ProductCard.html":{},"coverage.html":{}}}],["card.ts:107",{"_index":802,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:115",{"_index":775,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:124",{"_index":748,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:132",{"_index":756,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:141",{"_index":771,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:22",{"_index":733,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:24",{"_index":745,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:26",{"_index":736,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:28",{"_index":742,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:29",{"_index":731,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:37",{"_index":766,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:46",{"_index":779,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:62",{"_index":785,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:76",{"_index":788,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:86",{"_index":793,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:96",{"_index":795,"title":{},"body":{"components/ProductCard.html":{}}}],["card/product",{"_index":709,"title":{},"body":{"components/ProductCard.html":{},"coverage.html":{}}}],["carouselcomponent",{"_index":458,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselconfig",{"_index":455,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselcontrolcomponent",{"_index":461,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselcustomconfig",{"_index":432,"title":{"injectables/CarouselCustomConfig.html":{}},"body":{"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"coverage.html":{}}}],["carouselindicatorscomponent",{"_index":480,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselinnercomponent",{"_index":459,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselitemcomponent",{"_index":460,"title":{},"body":{"components/CircularImage.html":{}}}],["carroussel.config",{"_index":482,"title":{},"body":{"components/CircularImage.html":{}}}],["cart",{"_index":739,"title":{},"body":{"components/ProductCard.html":{}}}],["cas",{"_index":998,"title":{},"body":{"injectables/ProductService.html":{}}}],["case",{"_index":833,"title":{},"body":{"components/ProductCard.html":{}}}],["catalogue",{"_index":704,"title":{},"body":{"components/Navbar.html":{}}}],["catch",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":942,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["catcherror((error",{"_index":953,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["category",{"_index":209,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["ce",{"_index":519,"title":{},"body":{"components/Dashboard.html":{}}}],["centralized",{"_index":106,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["certain",{"_index":757,"title":{},"body":{"components/ProductCard.html":{}}}],["cette",{"_index":525,"title":{},"body":{"components/Dashboard.html":{},"injectables/GuardService.html":{}}}],["champ",{"_index":1202,"title":{},"body":{"components/SignIn.html":{}}}],["change",{"_index":1113,"title":{},"body":{"components/SignIn.html":{}}}],["changed",{"_index":1178,"title":{},"body":{"components/SignIn.html":{}}}],["changement",{"_index":1230,"title":{},"body":{"components/SignIn.html":{}}}],["changements",{"_index":1168,"title":{},"body":{"components/SignIn.html":{}}}],["changepassword(currentpassword",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["changes",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["changing",{"_index":450,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"injectables/UserService.html":{}}}],["characters",{"_index":1343,"title":{},"body":{"components/SignIn.html":{}}}],["check",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["checkauth",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["checknetworkconnection",{"_index":1558,"title":{},"body":{"injectables/UserService.html":{}}}],["checks",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["choose",{"_index":1816,"title":{},"body":{"index.html":{}}}],["circular",{"_index":164,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["circularimage",{"_index":163,"title":{"components/CircularImage.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["claim",{"_index":677,"title":{},"body":{"components/Navbar.html":{}}}],["class",{"_index":111,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["classe",{"_index":691,"title":{},"body":{"components/Navbar.html":{}}}],["cleanavatarinput",{"_index":1056,"title":{},"body":{"components/SignIn.html":{}}}],["cleaned",{"_index":1221,"title":{},"body":{"components/SignIn.html":{}}}],["cleans",{"_index":1131,"title":{},"body":{"components/SignIn.html":{}}}],["clear",{"_index":1086,"title":{},"body":{"components/SignIn.html":{}}}],["cleared",{"_index":1083,"title":{},"body":{"components/SignIn.html":{}}}],["clearing",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearmessages",{"_index":1057,"title":{},"body":{"components/SignIn.html":{}}}],["clearmessages(delay",{"_index":1078,"title":{},"body":{"components/SignIn.html":{}}}],["clears",{"_index":1080,"title":{},"body":{"components/SignIn.html":{}}}],["cli",{"_index":1762,"title":{},"body":{"index.html":{}}}],["click",{"_index":754,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["client",{"_index":199,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["clients",{"_index":595,"title":{},"body":{"components/Dashboard.html":{}}}],["cliqu",{"_index":699,"title":{},"body":{"components/Navbar.html":{}}}],["close",{"_index":1552,"title":{},"body":{"components/UpdateForm.html":{}}}],["cmd",{"_index":539,"title":{},"body":{"components/Dashboard.html":{}}}],["code",{"_index":995,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["come",{"_index":1814,"title":{},"body":{"index.html":{}}}],["comerce",{"_index":151,"title":{},"body":{"components/App.html":{}}}],["command",{"_index":1809,"title":{},"body":{"index.html":{}}}],["commande",{"_index":593,"title":{},"body":{"components/Dashboard.html":{}}}],["commandes",{"_index":522,"title":{},"body":{"components/Dashboard.html":{}}}],["comme",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["commented",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["commonmodule",{"_index":457,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["compenant",{"_index":1436,"title":{},"body":{"components/ToastError.html":{}}}],["compenant.ts",{"_index":1459,"title":{},"body":{"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["compile",{"_index":1794,"title":{},"body":{"index.html":{}}}],["complete",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["completed",{"_index":222,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["complètement",{"_index":1071,"title":{},"body":{"components/SignIn.html":{}}}],["component",{"_index":132,"title":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":161,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["components",{"_index":134,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"index.html":{},"overview.html":{}}}],["composants",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["compte",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["computed",{"_index":1153,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{}}}],["computes",{"_index":780,"title":{},"body":{"components/ProductCard.html":{}}}],["confirm",{"_index":1344,"title":{},"body":{"components/SignIn.html":{}}}],["confirmpassword",{"_index":196,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["connect",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["connection",{"_index":1308,"title":{},"body":{"components/SignIn.html":{}}}],["connexion",{"_index":1268,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["considère",{"_index":1001,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.error('authentication",{"_index":1272,"title":{},"body":{"components/SignIn.html":{}}}],["console.error('error",{"_index":954,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["console.error('test",{"_index":961,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.error(`error",{"_index":1016,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.error(errormsg",{"_index":1023,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(\"effac",{"_index":988,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(\"emission",{"_index":818,"title":{},"body":{"components/ProductCard.html":{}}}],["console.log(\"error",{"_index":1278,"title":{},"body":{"components/SignIn.html":{}}}],["console.log('account",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('adding",{"_index":1011,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('avatar",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["console.log('debug",{"_index":1149,"title":{},"body":{"components/SignIn.html":{}}}],["console.log('deleting",{"_index":976,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('fetching",{"_index":950,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('image",{"_index":1007,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('login",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('navigating",{"_index":502,"title":{},"body":{"components/Dashboard.html":{},"components/Navbar.html":{}}}],["console.log('product",{"_index":970,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('registration",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sending",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('signing",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('user",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('valid",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`${key",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`image",{"_index":1020,"title":{},"body":{"injectables/ProductService.html":{}}}],["const",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["constructor(apiurl",{"_index":872,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(apiurlservice",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservice",{"_index":614,"title":{},"body":{"injectables/GuardService.html":{}}}],["constructor(datasharedservice",{"_index":730,"title":{},"body":{"components/ProductCard.html":{}}}],["constructor(dialogref",{"_index":1482,"title":{},"body":{"components/UpdateForm.html":{}}}],["constructor(fb",{"_index":1065,"title":{},"body":{"components/SignIn.html":{}}}],["constructor(private",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["constructor(route",{"_index":662,"title":{},"body":{"components/Navbar.html":{}}}],["constructor(router",{"_index":497,"title":{},"body":{"components/Dashboard.html":{}}}],["contact",{"_index":1288,"title":{},"body":{"components/SignIn.html":{}}}],["containing",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"miscellaneous/functions.html":{}}}],["content",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["contenu",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["continue",{"_index":1325,"title":{},"body":{"components/SignIn.html":{}}}],["control",{"_index":632,"title":{},"body":{"injectables/GuardService.html":{},"components/SignIn.html":{}}}],["control.value",{"_index":1241,"title":{},"body":{"components/SignIn.html":{}}}],["controls",{"_index":1089,"title":{},"body":{"components/SignIn.html":{}}}],["contrôler",{"_index":1448,"title":{},"body":{"components/ToastError.html":{}}}],["converting",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["coreui/angular",{"_index":481,"title":{},"body":{"components/CircularImage.html":{},"components/ToastError.html":{},"dependencies.html":{}}}],["coreui/coreui",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["coreui/icons",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["correction",{"_index":843,"title":{},"body":{"components/ProductCard.html":{}}}],["correctly",{"_index":1248,"title":{},"body":{"components/SignIn.html":{}}}],["cours",{"_index":550,"title":{},"body":{"components/Dashboard.html":{}}}],["coverage",{"_index":1672,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":53,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["create_product",{"_index":15,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["created",{"_index":973,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["createdat",{"_index":202,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["createform",{"_index":1058,"title":{},"body":{"components/SignIn.html":{}}}],["creating",{"_index":1354,"title":{},"body":{"components/SignIn.html":{}}}],["creation",{"_index":783,"title":{},"body":{"components/ProductCard.html":{}}}],["credentials",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["créer",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"components/SignIn.html":{}}}],["css",{"_index":786,"title":{},"body":{"components/ProductCard.html":{}}}],["currency",{"_index":797,"title":{},"body":{"components/ProductCard.html":{}}}],["current",{"_index":77,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["currently",{"_index":70,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["currentnotification",{"_index":1397,"title":{},"body":{"components/ToastError.html":{}}}],["currentpassword",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"injectables/UserService.html":{}}}],["currentuser()?.name",{"_index":706,"title":{},"body":{"components/Navbar.html":{}}}],["currentuser?.id",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["currentusersubject",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["custom",{"_index":1122,"title":{},"body":{"components/SignIn.html":{}}}],["côt",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["d'authentification",{"_index":1274,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["d'erreur",{"_index":1309,"title":{},"body":{"components/SignIn.html":{}}}],["d'état",{"_index":1166,"title":{},"body":{"components/SignIn.html":{}}}],["d\\'authentification",{"_index":1150,"title":{},"body":{"components/SignIn.html":{}}}],["dans",{"_index":992,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["dashboard",{"_index":166,"title":{"components/Dashboard.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["dashboard'},{'name",{"_index":167,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["dashboard.css",{"_index":494,"title":{},"body":{"components/Dashboard.html":{}}}],["dashboard.html",{"_index":493,"title":{},"body":{"components/Dashboard.html":{}}}],["data",{"_index":229,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["data.user.avatar",{"_index":1514,"title":{},"body":{"components/UpdateForm.html":{}}}],["data.user?.email",{"_index":1511,"title":{},"body":{"components/UpdateForm.html":{}}}],["data.user?.name",{"_index":1510,"title":{},"body":{"components/UpdateForm.html":{}}}],["data.user?.password",{"_index":1512,"title":{},"body":{"components/UpdateForm.html":{}}}],["data_form",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.email",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.name",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.password",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.role",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataservice",{"_index":601,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"components/ProductCard.html":{},"coverage.html":{}}}],["datasharedservice",{"_index":732,"title":{},"body":{"components/ProductCard.html":{}}}],["datasubject",{"_index":603,"title":{},"body":{"injectables/DataService.html":{}}}],["date",{"_index":203,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["date().gettime",{"_index":825,"title":{},"body":{"components/ProductCard.html":{}}}],["date(this.product.createdat",{"_index":826,"title":{},"body":{"components/ProductCard.html":{}}}],["dayssincecreation",{"_index":823,"title":{},"body":{"components/ProductCard.html":{}}}],["de",{"_index":508,"title":{},"body":{"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["debug",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":1493,"title":{},"body":{"components/UpdateForm.html":{}}}],["default",{"_index":35,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":929,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["defined",{"_index":33,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":56,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["delete_img_by_media_id",{"_index":16,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["delete_product_by_id",{"_index":17,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["delete_user",{"_index":18,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["deleteaccount",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["deleted",{"_index":769,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["deleteimage",{"_index":716,"title":{},"body":{"components/ProductCard.html":{}}}],["deleteimage(id",{"_index":765,"title":{},"body":{"components/ProductCard.html":{}}}],["deleteimageinproduct",{"_index":864,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteimageinproduct(id",{"_index":894,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct",{"_index":865,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct(id",{"_index":897,"title":{},"body":{"injectables/ProductService.html":{}}}],["deletes",{"_index":896,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleting",{"_index":815,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["deletion",{"_index":743,"title":{},"body":{"components/ProductCard.html":{}}}],["demo",{"_index":1356,"title":{},"body":{"components/SignIn.html":{}}}],["denied",{"_index":1287,"title":{},"body":{"components/SignIn.html":{}}}],["dependencies",{"_index":1722,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derniers",{"_index":570,"title":{},"body":{"components/Dashboard.html":{}}}],["dernières",{"_index":538,"title":{},"body":{"components/Dashboard.html":{}}}],["des",{"_index":565,"title":{},"body":{"components/Dashboard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["description",{"_index":46,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["descriptive",{"_index":1755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["detailed",{"_index":1821,"title":{},"body":{"index.html":{}}}],["details",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["determines",{"_index":620,"title":{},"body":{"injectables/GuardService.html":{},"components/ProductCard.html":{}}}],["development",{"_index":1765,"title":{},"body":{"index.html":{}}}],["dialogref",{"_index":1474,"title":{},"body":{"components/UpdateForm.html":{}}}],["dialogref.close",{"_index":1536,"title":{},"body":{"components/UpdateForm.html":{}}}],["dialogue",{"_index":1530,"title":{},"body":{"components/UpdateForm.html":{}}}],["dim",{"_index":581,"title":{},"body":{"components/Dashboard.html":{}}}],["direction",{"_index":437,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["directive",{"_index":159,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"index.html":{}}}],["directory",{"_index":1798,"title":{},"body":{"index.html":{}}}],["displayed",{"_index":734,"title":{},"body":{"components/ProductCard.html":{}}}],["displaying",{"_index":808,"title":{},"body":{"components/ProductCard.html":{}}}],["displays",{"_index":1110,"title":{},"body":{"components/SignIn.html":{}}}],["dist",{"_index":1797,"title":{},"body":{"index.html":{}}}],["document.queryselector('input[type=\"file\"][formcontrolname=\"avatar",{"_index":1218,"title":{},"body":{"components/SignIn.html":{}}}],["document.queryselectorall('.navbar",{"_index":694,"title":{},"body":{"components/Navbar.html":{}}}],["documentation",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1133,"title":{},"body":{"components/SignIn.html":{}}}],["dom",{"_index":136,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["données",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["du",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["dupont",{"_index":545,"title":{},"body":{"components/Dashboard.html":{}}}],["déconnecte",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["défaut",{"_index":1413,"title":{},"body":{"components/ToastError.html":{}}}],["définir",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["délai",{"_index":1024,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["détail/corps",{"_index":1442,"title":{},"body":{"components/ToastError.html":{}}}],["détaillées",{"_index":599,"title":{},"body":{"components/Dashboard.html":{}}}],["détails",{"_index":530,"title":{},"body":{"components/Dashboard.html":{}}}],["déterminer",{"_index":1439,"title":{},"body":{"components/ToastError.html":{}}}],["e",{"_index":150,"title":{},"body":{"components/App.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["e.g",{"_index":759,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["e.target?.result",{"_index":1199,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["e2e",{"_index":1811,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1813,"title":{},"body":{"index.html":{}}}],["ecomerce",{"_index":1758,"title":{},"body":{"index.html":{}}}],["effect",{"_index":673,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["element",{"_index":158,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["elements",{"_index":758,"title":{},"body":{"components/ProductCard.html":{}}}],["email",{"_index":80,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["emits",{"_index":737,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["empty",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["en",{"_index":115,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/Dashboard.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["end",{"_index":1418,"title":{},"body":{"components/ToastError.html":{},"index.html":{}}}],["endpoint",{"_index":39,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["endpoints",{"_index":109,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["enregistrer",{"_index":1555,"title":{},"body":{"components/UpdateForm.html":{}}}],["enter",{"_index":1337,"title":{},"body":{"components/SignIn.html":{}}}],["environment.apiurl",{"_index":114,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["err",{"_index":960,"title":{},"body":{"injectables/ProductService.html":{}}}],["erreur",{"_index":1005,"title":{},"body":{"injectables/ProductService.html":{},"components/ToastError.html":{}}}],["erreurs",{"_index":1009,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["error",{"_index":224,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["error'},{'name",{"_index":184,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["error('invalid",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('no",{"_index":965,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["error(`http",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(error.error",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.css",{"_index":1385,"title":{},"body":{"components/ToastError.html":{}}}],["error.error",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["error.html",{"_index":1384,"title":{},"body":{"components/ToastError.html":{}}}],["error.message",{"_index":974,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["error.name",{"_index":1305,"title":{},"body":{"components/SignIn.html":{}}}],["error.status",{"_index":997,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["error.ts",{"_index":1378,"title":{},"body":{"components/ToastError.html":{},"coverage.html":{}}}],["error.ts:20",{"_index":1399,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:22",{"_index":1419,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:23",{"_index":1433,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:24",{"_index":1416,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:27",{"_index":1410,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:33",{"_index":1432,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:44",{"_index":1426,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:55",{"_index":1414,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:65",{"_index":1400,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:74",{"_index":1422,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:78",{"_index":1405,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:82",{"_index":1404,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:87",{"_index":1402,"title":{},"body":{"components/ToastError.html":{}}}],["error/toast",{"_index":1160,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["error?.error?.message",{"_index":1312,"title":{},"body":{"components/SignIn.html":{}}}],["error?.message",{"_index":1313,"title":{},"body":{"components/SignIn.html":{}}}],["errormessage",{"_index":232,"title":{"interfaces/ErrorMessage.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["errormsg",{"_index":1021,"title":{},"body":{"injectables/ProductService.html":{}}}],["errors",{"_index":1013,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["errors.join",{"_index":1037,"title":{},"body":{"injectables/ProductService.html":{}}}],["errors.length",{"_index":1032,"title":{},"body":{"injectables/ProductService.html":{}}}],["errors.push(errormsg",{"_index":1022,"title":{},"body":{"injectables/ProductService.html":{}}}],["est",{"_index":1440,"title":{},"body":{"components/ToastError.html":{},"injectables/UserService.html":{}}}],["et",{"_index":1073,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["eur",{"_index":798,"title":{},"body":{"components/ProductCard.html":{}}}],["even",{"_index":1135,"title":{},"body":{"components/SignIn.html":{}}}],["event",{"_index":667,"title":{},"body":{"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["event.preventdefault",{"_index":688,"title":{},"body":{"components/Navbar.html":{}}}],["event.stoppropagation",{"_index":839,"title":{},"body":{"components/ProductCard.html":{}}}],["event.target",{"_index":700,"title":{},"body":{"components/Navbar.html":{}}}],["event.target.files[0",{"_index":1177,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["eventcoalescing",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":735,"title":{},"body":{"components/ProductCard.html":{},"components/UpdateForm.html":{}}}],["example",{"_index":1769,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1804,"title":{},"body":{"index.html":{}}}],["exhausted",{"_index":925,"title":{},"body":{"injectables/ProductService.html":{}}}],["existe",{"_index":642,"title":{},"body":{"injectables/GuardService.html":{}}}],["existing",{"_index":882,"title":{},"body":{"injectables/ProductService.html":{}}}],["exists",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["exponential",{"_index":920,"title":{},"body":{"injectables/ProductService.html":{}}}],["exponentiel",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":110,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["extracts",{"_index":803,"title":{},"body":{"components/ProductCard.html":{}}}],["failed",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fails",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["failure",{"_index":891,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["false",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fb",{"_index":1068,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["fera",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["ferme",{"_index":1529,"title":{},"body":{"components/UpdateForm.html":{}}}],["fetch('/api/health",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["fetch(this.apiurlservice.get_current_user",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch(this.apiurlservice.login",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch(this.apiurlservice.register",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetched",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["fetches",{"_index":904,"title":{},"body":{"injectables/ProductService.html":{}}}],["fetching",{"_index":948,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fichier",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["fichiers",{"_index":1015,"title":{},"body":{"injectables/ProductService.html":{}}}],["fields",{"_index":1100,"title":{},"body":{"components/SignIn.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["file.name",{"_index":1018,"title":{},"body":{"injectables/ProductService.html":{}}}],["file.size",{"_index":1179,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["file.type.startswith('image",{"_index":1186,"title":{},"body":{"components/SignIn.html":{}}}],["filereader",{"_index":1196,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["files",{"_index":884,"title":{},"body":{"injectables/ProductService.html":{},"index.html":{}}}],["fill",{"_index":1246,"title":{},"body":{"components/SignIn.html":{}}}],["final",{"_index":1447,"title":{},"body":{"components/ToastError.html":{}}}],["finally",{"_index":1276,"title":{},"body":{"components/SignIn.html":{}}}],["first",{"_index":933,"title":{},"body":{"injectables/ProductService.html":{}}}],["firstvaluefrom",{"_index":941,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["following",{"_index":1808,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":1352,"title":{},"body":{"components/SignIn.html":{}}}],["form",{"_index":169,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["form.css",{"_index":1473,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.html",{"_index":1472,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts",{"_index":1463,"title":{},"body":{"components/UpdateForm.html":{},"coverage.html":{}}}],["form.ts:104",{"_index":1488,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:30",{"_index":1499,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:31",{"_index":1498,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:32",{"_index":1497,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:33",{"_index":1485,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:36",{"_index":1496,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:38",{"_index":1495,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:56",{"_index":1487,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:65",{"_index":1490,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:77",{"_index":1492,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:81",{"_index":1491,"title":{},"body":{"components/UpdateForm.html":{}}}],["form/update",{"_index":1462,"title":{},"body":{"components/UpdateForm.html":{},"coverage.html":{}}}],["format",{"_index":1297,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["formats",{"_index":796,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["formatted",{"_index":901,"title":{},"body":{"injectables/ProductService.html":{}}}],["formbuilder",{"_index":1066,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["formcontrol",{"_index":1125,"title":{},"body":{"components/SignIn.html":{}}}],["formdata",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["formdata.append('avatar",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["formdata.append('data",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{}}}],["formdata.entries",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["formdata.length",{"_index":1033,"title":{},"body":{"injectables/ProductService.html":{}}}],["formgroup",{"_index":1091,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["formproduct",{"_index":168,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["forms",{"_index":1161,"title":{},"body":{"components/SignIn.html":{}}}],["formsmodule",{"_index":1466,"title":{},"body":{"components/UpdateForm.html":{}}}],["formulaire",{"_index":1243,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["found",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":1815,"title":{},"body":{"index.html":{}}}],["french",{"_index":799,"title":{},"body":{"components/ProductCard.html":{}}}],["friendly",{"_index":1754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["full",{"_index":1330,"title":{},"body":{"components/SignIn.html":{}}}],["function",{"_index":926,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["functions",{"_index":1751,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1784,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1760,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gestion",{"_index":1165,"title":{},"body":{"components/SignIn.html":{}}}],["get_all_products",{"_index":19,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_all_users",{"_index":20,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_current_user",{"_index":21,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_my_all_product",{"_index":22,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_product_by_id",{"_index":23,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_user_by_email",{"_index":24,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_user_by_id",{"_index":25,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_user_by_name",{"_index":26,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["getauthheaders",{"_index":1559,"title":{},"body":{"injectables/UserService.html":{}}}],["getbadgeclass",{"_index":784,"title":{},"body":{"components/ProductCard.html":{}}}],["getbadgetext",{"_index":778,"title":{},"body":{"components/ProductCard.html":{}}}],["getcurrentuser",{"_index":1560,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1561,"title":{},"body":{"injectables/UserService.html":{}}}],["getheadertoken",{"_index":866,"title":{},"body":{"injectables/ProductService.html":{}}}],["getinitials",{"_index":1477,"title":{},"body":{"components/UpdateForm.html":{}}}],["getinitials(name",{"_index":1486,"title":{},"body":{"components/UpdateForm.html":{}}}],["getmyproduct",{"_index":867,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductbyid",{"_index":868,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductbyid(id",{"_index":906,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductimageurls",{"_index":801,"title":{},"body":{"components/ProductCard.html":{}}}],["getproductprice",{"_index":794,"title":{},"body":{"components/ProductCard.html":{}}}],["getproducts",{"_index":869,"title":{},"body":{"injectables/ProductService.html":{}}}],["getprofile",{"_index":1562,"title":{},"body":{"injectables/UserService.html":{}}}],["getprofileasync",{"_index":1563,"title":{},"body":{"injectables/UserService.html":{}}}],["getstockstatusclass",{"_index":792,"title":{},"body":{"components/ProductCard.html":{}}}],["getstockstatustext",{"_index":787,"title":{},"body":{"components/ProductCard.html":{}}}],["getting",{"_index":1756,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{}}}],["gif",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":1031,"title":{},"body":{"injectables/ProductService.html":{}}}],["gotomyproduct",{"_index":495,"title":{},"body":{"components/Dashboard.html":{}}}],["gotoupdateproduct",{"_index":717,"title":{},"body":{"components/ProductCard.html":{}}}],["gotoupdateproduct(event",{"_index":770,"title":{},"body":{"components/ProductCard.html":{}}}],["gsap",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["guard",{"_index":628,"title":{},"body":{"injectables/GuardService.html":{}}}],["guards",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["guardservice",{"_index":611,"title":{"injectables/GuardService.html":{}},"body":{"injectables/GuardService.html":{},"coverage.html":{}}}],["génère",{"_index":1574,"title":{},"body":{"injectables/UserService.html":{}}}],["générique",{"_index":1310,"title":{},"body":{"components/SignIn.html":{}}}],["gérer",{"_index":564,"title":{},"body":{"components/Dashboard.html":{}}}],["handleautherror",{"_index":1059,"title":{},"body":{"components/SignIn.html":{}}}],["handleautherror(error",{"_index":1093,"title":{},"body":{"components/SignIn.html":{}}}],["handled",{"_index":1006,"title":{},"body":{"injectables/ProductService.html":{}}}],["handlehttperror",{"_index":944,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlehttperror(error",{"_index":955,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["handlehttperror(error).message",{"_index":1010,"title":{},"body":{"injectables/ProductService.html":{}}}],["handlers",{"_index":755,"title":{},"body":{"components/ProductCard.html":{}}}],["handles",{"_index":810,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["handling",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasmessage",{"_index":1386,"title":{},"body":{"components/ToastError.html":{}}}],["head",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["header",{"_index":902,"title":{},"body":{"injectables/ProductService.html":{}}}],["headers",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["helpbuilding",{"_index":1791,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":762,"title":{},"body":{"components/ProductCard.html":{}}}],["home",{"_index":1175,"title":{},"body":{"components/SignIn.html":{}}}],["html",{"_index":157,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["htmlelement).classlist.add('active",{"_index":701,"title":{},"body":{"components/Navbar.html":{}}}],["htmlinputelement",{"_index":1219,"title":{},"body":{"components/SignIn.html":{}}}],["http",{"_index":873,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1774,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":874,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["httperrorresponse",{"_index":938,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["httpheaders",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{}}}],["httpresponse",{"_index":939,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpresponse.body",{"_index":987,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpresponse.ok",{"_index":986,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpresponse.status",{"_index":996,"title":{},"body":{"injectables/ProductService.html":{}}}],["https://localhost:8443",{"_index":49,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["human",{"_index":789,"title":{},"body":{"components/ProductCard.html":{}}}],["ici",{"_index":1256,"title":{},"body":{"components/SignIn.html":{}}}],["icon",{"_index":1435,"title":{},"body":{"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["icon'},{'name",{"_index":187,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["id",{"_index":43,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/CircularImage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["identifier",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["if(!issignup",{"_index":1350,"title":{},"body":{"components/SignIn.html":{}}}],["if(issignup",{"_index":1326,"title":{},"body":{"components/SignIn.html":{}}}],["if(loading",{"_index":1353,"title":{},"body":{"components/SignIn.html":{}}}],["if(this.hasmessage",{"_index":1445,"title":{},"body":{"components/ToastError.html":{}}}],["image",{"_index":41,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["image'},{'name",{"_index":165,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["image(s",{"_index":1034,"title":{},"body":{"injectables/ProductService.html":{}}}],["image.css",{"_index":466,"title":{},"body":{"components/CircularImage.html":{}}}],["image.html",{"_index":465,"title":{},"body":{"components/CircularImage.html":{}}}],["image.imagepath",{"_index":837,"title":{},"body":{"components/ProductCard.html":{}}}],["image.ts",{"_index":452,"title":{},"body":{"components/CircularImage.html":{},"coverage.html":{}}}],["image.ts:24",{"_index":471,"title":{},"body":{"components/CircularImage.html":{}}}],["image.ts:25",{"_index":470,"title":{},"body":{"components/CircularImage.html":{}}}],["image.ts:28",{"_index":472,"title":{},"body":{"components/CircularImage.html":{}}}],["image/carroussel.config.ts",{"_index":434,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"coverage.html":{}}}],["image/carroussel.config.ts:10",{"_index":444,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/carroussel.config.ts:12",{"_index":446,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/carroussel.config.ts:6",{"_index":440,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/carroussel.config.ts:8",{"_index":441,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/circular",{"_index":451,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"coverage.html":{}}}],["image/gif",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["image/jpeg",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["image/jpg",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["image/png",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["image/webp",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["imagepath",{"_index":216,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["images",{"_index":816,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["imageurls",{"_index":211,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["immediate",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["immediately",{"_index":1084,"title":{},"body":{"components/SignIn.html":{}}}],["implement",{"_index":909,"title":{},"body":{"injectables/ProductService.html":{}}}],["implementation",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":631,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["implémenter",{"_index":962,"title":{},"body":{"injectables/ProductService.html":{}}}],["import",{"_index":98,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["imports",{"_index":141,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["in'},{'name",{"_index":181,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["in.css",{"_index":1047,"title":{},"body":{"components/SignIn.html":{}}}],["in.html",{"_index":1046,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts",{"_index":1044,"title":{},"body":{"components/SignIn.html":{},"coverage.html":{}}}],["in.ts:101",{"_index":1087,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:115",{"_index":1069,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:139",{"_index":1128,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:153",{"_index":1136,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:175",{"_index":1121,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:189",{"_index":1114,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:19",{"_index":1141,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:20",{"_index":1147,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:21",{"_index":1148,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:22",{"_index":1143,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:23",{"_index":1157,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:24",{"_index":1145,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:244",{"_index":1094,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:27",{"_index":1146,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:28",{"_index":1158,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:280",{"_index":1098,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:291",{"_index":1079,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:31",{"_index":1156,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:37",{"_index":1152,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:39",{"_index":1067,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:49",{"_index":1104,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:63",{"_index":1106,"title":{},"body":{"components/SignIn.html":{}}}],["in/sign",{"_index":1043,"title":{},"body":{"components/SignIn.html":{},"coverage.html":{}}}],["includes",{"_index":1781,"title":{},"body":{"index.html":{}}}],["including",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":749,"title":{},"body":{"components/ProductCard.html":{}}}],["indicating",{"_index":625,"title":{},"body":{"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["indisponible",{"_index":853,"title":{},"body":{"components/ProductCard.html":{}}}],["individual",{"_index":887,"title":{},"body":{"injectables/ProductService.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["information",{"_index":1283,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{},"index.html":{}}}],["informations",{"_index":1548,"title":{},"body":{"components/UpdateForm.html":{}}}],["inférieur",{"_index":558,"title":{},"body":{"components/Dashboard.html":{}}}],["initialized",{"_index":1092,"title":{},"body":{"components/SignIn.html":{}}}],["initializes",{"_index":1088,"title":{},"body":{"components/SignIn.html":{}}}],["inject",{"_index":1500,"title":{},"body":{"components/UpdateForm.html":{}}}],["inject(mat_dialog_data",{"_index":1494,"title":{},"body":{"components/UpdateForm.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injection",{"_index":1506,"title":{},"body":{"components/UpdateForm.html":{}}}],["input",{"_index":477,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["inputs",{"_index":468,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/ToastError.html":{}}}],["inscription",{"_index":1253,"title":{},"body":{"components/SignIn.html":{}}}],["instanceof",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["interacting",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":1162,"title":{},"body":{"components/SignIn.html":{}}}],["interactions",{"_index":812,"title":{},"body":{"components/ProductCard.html":{}}}],["interacts",{"_index":1118,"title":{},"body":{"components/SignIn.html":{}}}],["interface",{"_index":191,"title":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["interfaces",{"_index":193,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"overview.html":{},"interfaces/productImage.html":{}}}],["interval",{"_index":438,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["invalid",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["isauthenticatedsync",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["isseller",{"_index":657,"title":{},"body":{"components/Navbar.html":{}}}],["isseller():boolean",{"_index":685,"title":{},"body":{"components/Navbar.html":{}}}],["issignin",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{}}}],["issignup",{"_index":1050,"title":{},"body":{"components/SignIn.html":{}}}],["isvalid",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["janvier",{"_index":547,"title":{},"body":{"components/Dashboard.html":{}}}],["jd",{"_index":543,"title":{},"body":{"components/Dashboard.html":{}}}],["jean",{"_index":544,"title":{},"body":{"components/Dashboard.html":{}}}],["jeu",{"_index":578,"title":{},"body":{"components/Dashboard.html":{}}}],["join",{"_index":1322,"title":{},"body":{"components/SignIn.html":{}}}],["jour",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["jours",{"_index":571,"title":{},"body":{"components/Dashboard.html":{}}}],["jpeg",{"_index":1546,"title":{},"body":{"components/UpdateForm.html":{}}}],["jpg",{"_index":1299,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["json",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(data_form",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1805,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["key",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["l'avatar",{"_index":1072,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["l'icône",{"_index":1443,"title":{},"body":{"components/ToastError.html":{}}}],["l'id",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["l'input",{"_index":1216,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{}}}],["l'inscription",{"_index":1258,"title":{},"body":{"components/SignIn.html":{}}}],["l'objet",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["l'utilisateur",{"_index":1262,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["la",{"_index":690,"title":{},"body":{"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["large",{"_index":1184,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["last",{"_index":923,"title":{},"body":{"injectables/ProductService.html":{}}}],["lasterror",{"_index":1040,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["later",{"_index":1304,"title":{},"body":{"components/SignIn.html":{}}}],["le",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["legend",{"_index":156,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["les",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["lien",{"_index":698,"title":{},"body":{"components/Navbar.html":{}}}],["liens",{"_index":693,"title":{},"body":{"components/Navbar.html":{}}}],["limit",{"_index":821,"title":{},"body":{"components/ProductCard.html":{}}}],["limited",{"_index":834,"title":{},"body":{"components/ProductCard.html":{}}}],["link').foreach(link",{"_index":695,"title":{},"body":{"components/Navbar.html":{}}}],["link.classlist.remove('active",{"_index":696,"title":{},"body":{"components/Navbar.html":{}}}],["list",{"_index":1786,"title":{},"body":{"index.html":{}}}],["list'},{'name",{"_index":175,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["list.ts",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["list/product",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["liste",{"_index":596,"title":{},"body":{"components/Dashboard.html":{}}}],["literal",{"_index":1484,"title":{},"body":{"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["livr",{"_index":542,"title":{},"body":{"components/Dashboard.html":{}}}],["liés",{"_index":1077,"title":{},"body":{"components/SignIn.html":{}}}],["load",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["loaded",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["loading",{"_index":1051,"title":{},"body":{"components/SignIn.html":{}}}],["local",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"index.html":{}}}],["locale",{"_index":800,"title":{},"body":{"components/ProductCard.html":{}}}],["locales",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.clear",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('token",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["location",{"_index":107,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["location.pathname",{"_index":841,"title":{},"body":{"components/ProductCard.html":{}}}],["lock",{"_index":1551,"title":{},"body":{"components/UpdateForm.html":{}}}],["log",{"_index":967,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["logger",{"_index":1167,"title":{},"body":{"components/SignIn.html":{}}}],["logic",{"_index":911,"title":{},"body":{"injectables/ProductService.html":{}}}],["login",{"_index":27,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{}}}],["logique",{"_index":964,"title":{},"body":{"injectables/ProductService.html":{}}}],["logout",{"_index":707,"title":{},"body":{"components/Navbar.html":{},"injectables/UserService.html":{}}}],["lors",{"_index":1229,"title":{},"body":{"components/SignIn.html":{}}}],["lun",{"_index":575,"title":{},"body":{"components/Dashboard.html":{}}}],["maintenant",{"_index":1438,"title":{},"body":{"components/ToastError.html":{}}}],["management",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductManagement.html":{},"injectables/UserService.html":{}}}],["management'},{'name",{"_index":177,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["management.css",{"_index":858,"title":{},"body":{"components/ProductManagement.html":{}}}],["management.html",{"_index":857,"title":{},"body":{"components/ProductManagement.html":{}}}],["management.ts",{"_index":856,"title":{},"body":{"components/ProductManagement.html":{},"coverage.html":{}}}],["management/product",{"_index":855,"title":{},"body":{"components/ProductManagement.html":{},"coverage.html":{}}}],["manages",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["managing",{"_index":103,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["map",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["map((httpresponse",{"_index":985,"title":{},"body":{"injectables/ProductService.html":{}}}],["mar",{"_index":576,"title":{},"body":{"components/Dashboard.html":{}}}],["markallfieldsastouched",{"_index":1060,"title":{},"body":{"components/SignIn.html":{}}}],["marketplace",{"_index":1323,"title":{},"body":{"components/SignIn.html":{}}}],["marks",{"_index":1099,"title":{},"body":{"components/SignIn.html":{}}}],["marquer",{"_index":1201,"title":{},"body":{"components/SignIn.html":{}}}],["martin",{"_index":553,"title":{},"body":{"components/Dashboard.html":{}}}],["mat_dialog_data",{"_index":1501,"title":{},"body":{"components/UpdateForm.html":{}}}],["matbuttonmodule",{"_index":1470,"title":{},"body":{"components/UpdateForm.html":{}}}],["matbuttontogglemodule",{"_index":463,"title":{},"body":{"components/CircularImage.html":{}}}],["match",{"_index":1124,"title":{},"body":{"components/SignIn.html":{}}}],["matching",{"_index":131,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/productImage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdialogactions",{"_index":1464,"title":{},"body":{"components/UpdateForm.html":{}}}],["matdialogmodule",{"_index":1465,"title":{},"body":{"components/UpdateForm.html":{}}}],["matdialogref",{"_index":1483,"title":{},"body":{"components/UpdateForm.html":{}}}],["math.floor",{"_index":824,"title":{},"body":{"components/ProductCard.html":{}}}],["maticon",{"_index":1471,"title":{},"body":{"components/UpdateForm.html":{}}}],["maticonmodule",{"_index":464,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{}}}],["matinputmodule",{"_index":1467,"title":{},"body":{"components/UpdateForm.html":{}}}],["matoptionmodule",{"_index":1469,"title":{},"body":{"components/UpdateForm.html":{}}}],["matselectmodule",{"_index":1468,"title":{},"body":{"components/UpdateForm.html":{}}}],["max",{"_index":1182,"title":{},"body":{"components/SignIn.html":{}}}],["maximum",{"_index":927,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["maxretries",{"_index":913,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["maxsize",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["media",{"_index":57,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["mediafile",{"_index":218,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["mediaitem",{"_index":204,"title":{"interfaces/MediaItem.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["mer",{"_index":577,"title":{},"body":{"components/Dashboard.html":{}}}],["message",{"_index":231,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["messageloggereffect",{"_index":1052,"title":{},"body":{"components/SignIn.html":{}}}],["messages",{"_index":1081,"title":{},"body":{"components/SignIn.html":{}}}],["messagestatus",{"_index":1053,"title":{},"body":{"components/SignIn.html":{}}}],["messagetype",{"_index":1387,"title":{},"body":{"components/ToastError.html":{}}}],["met",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":139,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["method",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["mettre",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["milliseconds",{"_index":931,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["miscellaneous",{"_index":1750,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1242,"title":{},"body":{"components/SignIn.html":{}}}],["mock",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["mode",{"_index":1225,"title":{},"body":{"components/SignIn.html":{}}}],["model",{"_index":478,"title":{},"body":{"components/CircularImage.html":{}}}],["models/interfaces",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["modes",{"_index":1138,"title":{},"body":{"components/SignIn.html":{}}}],["modify",{"_index":1779,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1826,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mois",{"_index":520,"title":{},"body":{"components/Dashboard.html":{}}}],["more",{"_index":881,"title":{},"body":{"injectables/ProductService.html":{},"index.html":{}}}],["moyen",{"_index":590,"title":{},"body":{"components/Dashboard.html":{}}}],["ms",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["myprofile",{"_index":658,"title":{},"body":{"components/Navbar.html":{}}}],["méthode",{"_index":641,"title":{},"body":{"injectables/GuardService.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["n'est",{"_index":991,"title":{},"body":{"injectables/ProductService.html":{}}}],["name",{"_index":45,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["name.split",{"_index":1517,"title":{},"body":{"components/UpdateForm.html":{}}}],["namefor",{"_index":1785,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":143,"title":{"components/Navbar.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["navbar'},{'name",{"_index":171,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["navbar.css",{"_index":656,"title":{},"body":{"components/Navbar.html":{}}}],["navbar.html",{"_index":655,"title":{},"body":{"components/Navbar.html":{}}}],["navbar/navbar",{"_index":154,"title":{},"body":{"components/App.html":{}}}],["navigate",{"_index":683,"title":{},"body":{"components/Navbar.html":{},"index.html":{}}}],["navigateandsetactive",{"_index":659,"title":{},"body":{"components/Navbar.html":{}}}],["navigateandsetactive(route",{"_index":666,"title":{},"body":{"components/Navbar.html":{}}}],["navigates",{"_index":772,"title":{},"body":{"components/ProductCard.html":{}}}],["navigateur",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["navigation",{"_index":844,"title":{},"body":{"components/ProductCard.html":{}}}],["naviguer",{"_index":702,"title":{},"body":{"components/Navbar.html":{}}}],["ne",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["needs",{"_index":1818,"title":{},"body":{"index.html":{}}}],["nettoie",{"_index":1070,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["nettoyer",{"_index":1214,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["networkerror",{"_index":1306,"title":{},"body":{"components/SignIn.html":{}}}],["new",{"_index":54,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":442,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["ng",{"_index":1770,"title":{},"body":{"index.html":{}}}],["ngneat/tailwind",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":467,"title":{},"body":{"components/CircularImage.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["nombre",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["notification",{"_index":1406,"title":{},"body":{"components/ToastError.html":{}}}],["notification.error",{"_index":1423,"title":{},"body":{"components/ToastError.html":{}}}],["notification.error.length",{"_index":1408,"title":{},"body":{"components/ToastError.html":{}}}],["notification.success",{"_index":1424,"title":{},"body":{"components/ToastError.html":{}}}],["notification.success.length",{"_index":1409,"title":{},"body":{"components/ToastError.html":{}}}],["notification?.error.length",{"_index":1411,"title":{},"body":{"components/ToastError.html":{}}}],["notification?.success.length",{"_index":1412,"title":{},"body":{"components/ToastError.html":{}}}],["notre",{"_index":1450,"title":{},"body":{"components/ToastError.html":{}}}],["nouveau",{"_index":505,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{},"components/SignIn.html":{}}}],["nouvelle",{"_index":592,"title":{},"body":{"components/Dashboard.html":{}}}],["nouvelles",{"_index":1163,"title":{},"body":{"components/SignIn.html":{}}}],["null",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["number",{"_index":119,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/CarouselCustomConfig.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["o",{"_index":999,"title":{},"body":{"injectables/ProductService.html":{}}}],["object",{"_index":738,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["object.keys(this.authform.controls).foreach(key",{"_index":1318,"title":{},"body":{"components/SignIn.html":{}}}],["objects",{"_index":805,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["observable",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":979,"title":{},"body":{"injectables/ProductService.html":{}}}],["obtient",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["occurred",{"_index":1314,"title":{},"body":{"components/SignIn.html":{}}}],["onavatarselected",{"_index":1061,"title":{},"body":{"components/SignIn.html":{}}}],["onavatarselected(event",{"_index":1105,"title":{},"body":{"components/SignIn.html":{}}}],["oncancel",{"_index":1478,"title":{},"body":{"components/UpdateForm.html":{}}}],["one",{"_index":880,"title":{},"body":{"injectables/ProductService.html":{},"index.html":{}}}],["onfileselected",{"_index":1479,"title":{},"body":{"components/UpdateForm.html":{}}}],["onfileselected(event",{"_index":1489,"title":{},"body":{"components/UpdateForm.html":{}}}],["oninit",{"_index":654,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["onnewproductclick",{"_index":496,"title":{},"body":{"components/Dashboard.html":{}}}],["onsave",{"_index":1480,"title":{},"body":{"components/UpdateForm.html":{}}}],["onsignin",{"_index":660,"title":{},"body":{"components/Navbar.html":{}}}],["onsignout",{"_index":661,"title":{},"body":{"components/Navbar.html":{}}}],["onsubmit",{"_index":1062,"title":{},"body":{"components/SignIn.html":{}}}],["ontimerchange",{"_index":1394,"title":{},"body":{"components/ToastError.html":{}}}],["ontimerchange($event",{"_index":1401,"title":{},"body":{"components/ToastError.html":{}}}],["onupload",{"_index":1481,"title":{},"body":{"components/UpdateForm.html":{}}}],["onvisiblechange",{"_index":1395,"title":{},"body":{"components/ToastError.html":{}}}],["onvisiblechange($event",{"_index":1403,"title":{},"body":{"components/ToastError.html":{}}}],["open",{"_index":1773,"title":{},"body":{"index.html":{}}}],["operation",{"_index":919,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["operations",{"_index":947,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["optimizes",{"_index":1799,"title":{},"body":{"index.html":{}}}],["optional",{"_index":195,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["optionnel",{"_index":1169,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["opération",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["original",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["otherwise",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{},"components/SignIn.html":{}}}],["ou",{"_index":650,"title":{},"body":{"injectables/GuardService.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["out",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["output",{"_index":806,"title":{},"body":{"components/ProductCard.html":{},"components/UpdateForm.html":{}}}],["outputs",{"_index":719,"title":{},"body":{"components/ProductCard.html":{}}}],["ouvrir/fermer",{"_index":1452,"title":{},"body":{"components/ToastError.html":{}}}],["overall",{"_index":888,"title":{},"body":{"injectables/ProductService.html":{}}}],["overview",{"_index":1824,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned",{"_index":76,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{}}}],["package",{"_index":1721,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":648,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"index.html":{}}}],["panier",{"_index":589,"title":{},"body":{"components/Dashboard.html":{}}}],["par",{"_index":113,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ToastError.html":{}}}],["param",{"_index":118,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["parts",{"_index":1516,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts.length",{"_index":1518,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts[0].charat(0",{"_index":1520,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts[0].charat(0).touppercase",{"_index":1519,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts[parts.length",{"_index":1521,"title":{},"body":{"components/UpdateForm.html":{}}}],["pas",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["passe",{"_index":1224,"title":{},"body":{"components/SignIn.html":{}}}],["passing",{"_index":773,"title":{},"body":{"components/ProductCard.html":{}}}],["password",{"_index":197,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["passwordmatchvalidator",{"_index":1063,"title":{},"body":{"components/SignIn.html":{}}}],["passwordmatchvalidator(control",{"_index":1120,"title":{},"body":{"components/SignIn.html":{}}}],["passwords",{"_index":1126,"title":{},"body":{"components/SignIn.html":{}}}],["passées",{"_index":1508,"title":{},"body":{"components/UpdateForm.html":{}}}],["path",{"_index":763,"title":{},"body":{"components/ProductCard.html":{}}}],["percentage",{"_index":1388,"title":{},"body":{"components/ToastError.html":{}}}],["performance",{"_index":1800,"title":{},"body":{"index.html":{}}}],["performances",{"_index":515,"title":{},"body":{"components/Dashboard.html":{}}}],["performs",{"_index":1108,"title":{},"body":{"components/SignIn.html":{}}}],["person",{"_index":1550,"title":{},"body":{"components/UpdateForm.html":{}}}],["person_outline",{"_index":1547,"title":{},"body":{"components/UpdateForm.html":{}}}],["personnelles",{"_index":1549,"title":{},"body":{"components/UpdateForm.html":{}}}],["petit",{"_index":1261,"title":{},"body":{"components/SignIn.html":{}}}],["physiquement",{"_index":1215,"title":{},"body":{"components/SignIn.html":{}}}],["picture",{"_index":1327,"title":{},"body":{"components/SignIn.html":{}}}],["pipe",{"_index":959,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["pipes",{"_index":1790,"title":{},"body":{"index.html":{}}}],["plage",{"_index":993,"title":{},"body":{"injectables/ProductService.html":{}}}],["please",{"_index":966,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["plus",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{}}}],["png",{"_index":1300,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["position",{"_index":1389,"title":{},"body":{"components/ToastError.html":{}}}],["post",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["pour",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["powerful",{"_index":1782,"title":{},"body":{"index.html":{}}}],["premium",{"_index":561,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["prev",{"_index":443,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["prevents",{"_index":750,"title":{},"body":{"components/ProductCard.html":{}}}],["preview",{"_index":1111,"title":{},"body":{"components/SignIn.html":{}}}],["previewurl",{"_index":1475,"title":{},"body":{"components/UpdateForm.html":{}}}],["price",{"_index":208,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["primarily",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["primeng",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["primeuix/themes",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":13,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["process",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["processes",{"_index":883,"title":{},"body":{"injectables/ProductService.html":{}}}],["product",{"_index":42,"title":{"interfaces/Product.html":{}},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["product's",{"_index":791,"title":{},"body":{"components/ProductCard.html":{}}}],["product'},{'name",{"_index":170,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["product.category",{"_index":848,"title":{},"body":{"components/ProductCard.html":{}}}],["product.description",{"_index":850,"title":{},"body":{"components/ProductCard.html":{}}}],["product.imageurls",{"_index":846,"title":{},"body":{"components/ProductCard.html":{}}}],["product.imageurls.length",{"_index":847,"title":{},"body":{"components/ProductCard.html":{}}}],["product.name",{"_index":849,"title":{},"body":{"components/ProductCard.html":{}}}],["product.sellername",{"_index":851,"title":{},"body":{"components/ProductCard.html":{}}}],["product.ts",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["product/form",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["productcard",{"_index":172,"title":{"components/ProductCard.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["productformdata",{"_index":219,"title":{"interfaces/ProductFormData.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["productid",{"_index":217,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["productidevent",{"_index":721,"title":{},"body":{"components/ProductCard.html":{}}}],["productimage",{"_index":212,"title":{"interfaces/productImage.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["productimageurls",{"_index":729,"title":{},"body":{"components/ProductCard.html":{}}}],["productimg",{"_index":469,"title":{},"body":{"components/CircularImage.html":{}}}],["production",{"_index":116,"title":{},"body":{"injectables/ApiUrlService.html":{},"index.html":{}}}],["productlist",{"_index":174,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["productmanagement",{"_index":176,"title":{"components/ProductManagement.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["productprice",{"_index":728,"title":{},"body":{"components/ProductCard.html":{}}}],["products",{"_index":64,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["products/myproduct",{"_index":764,"title":{},"body":{"components/ProductCard.html":{}}}],["productservice",{"_index":860,"title":{"injectables/ProductService.html":{}},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["produit",{"_index":506,"title":{},"body":{"components/Dashboard.html":{}}}],["produits",{"_index":516,"title":{},"body":{"components/Dashboard.html":{}}}],["profil",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["profile",{"_index":73,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":178,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["progress",{"_index":221,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["progresscomponent",{"_index":1379,"title":{},"body":{"components/ToastError.html":{}}}],["project",{"_index":1759,"title":{},"body":{"index.html":{}}}],["promise",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["promo",{"_index":822,"title":{},"body":{"components/ProductCard.html":{}}}],["propagation",{"_index":751,"title":{},"body":{"components/ProductCard.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{},"properties.html":{}}}],["propriét",{"_index":1191,"title":{},"body":{"components/SignIn.html":{}}}],["propriétés",{"_index":1164,"title":{},"body":{"components/SignIn.html":{}}}],["protect",{"_index":629,"title":{},"body":{"injectables/GuardService.html":{}}}],["protected",{"_index":148,"title":{},"body":{"components/App.html":{}}}],["provide",{"_index":454,"title":{},"body":{"components/CircularImage.html":{}}}],["provideanimations",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["providedin",{"_index":100,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":453,"title":{},"body":{"components/CircularImage.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":105,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{}}}],["providezonechangedetection",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["présent",{"_index":1441,"title":{},"body":{"components/ToastError.html":{}}}],["prévisualisation",{"_index":1194,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["public",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["qu'il",{"_index":1003,"title":{},"body":{"injectables/ProductService.html":{}}}],["quand",{"_index":1223,"title":{},"body":{"components/SignIn.html":{}}}],["quantity",{"_index":210,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["que",{"_index":640,"title":{},"body":{"injectables/GuardService.html":{},"components/ProductCard.html":{},"components/SignIn.html":{}}}],["queryparams",{"_index":635,"title":{},"body":{"injectables/GuardService.html":{}}}],["rapports",{"_index":597,"title":{},"body":{"components/Dashboard.html":{}}}],["reactiveformsmodule",{"_index":1045,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["readable",{"_index":790,"title":{},"body":{"components/ProductCard.html":{}}}],["reader",{"_index":1195,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["reader.onload",{"_index":1197,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["reader.readasdataurl(file",{"_index":1200,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["readonly",{"_index":11,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["received",{"_index":1097,"title":{},"body":{"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["recevra",{"_index":1437,"title":{},"body":{"components/ToastError.html":{}}}],["redirect",{"_index":1174,"title":{},"body":{"components/SignIn.html":{}}}],["redirecting",{"_index":1271,"title":{},"body":{"components/SignIn.html":{}}}],["rediriger",{"_index":646,"title":{},"body":{"injectables/GuardService.html":{}}}],["reference",{"_index":1825,"title":{},"body":{"index.html":{}}}],["references",{"_index":1822,"title":{},"body":{"index.html":{}}}],["register",{"_index":28,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["registers",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":91,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{}}}],["rejects",{"_index":922,"title":{},"body":{"injectables/ProductService.html":{}}}],["related",{"_index":946,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["reload",{"_index":1777,"title":{},"body":{"index.html":{}}}],["remember",{"_index":1351,"title":{},"body":{"components/SignIn.html":{}}}],["remet",{"_index":1074,"title":{},"body":{"components/SignIn.html":{}}}],["removeitem('token",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["remplacer",{"_index":112,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["renvoie",{"_index":1531,"title":{},"body":{"components/UpdateForm.html":{}}}],["renvoyer",{"_index":1539,"title":{},"body":{"components/UpdateForm.html":{}}}],["reports",{"_index":886,"title":{},"body":{"injectables/ProductService.html":{}}}],["representing",{"_index":820,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["request",{"_index":767,"title":{},"body":{"components/ProductCard.html":{},"miscellaneous/functions.html":{}}}],["requested",{"_index":744,"title":{},"body":{"components/ProductCard.html":{}}}],["require",{"_index":1134,"title":{},"body":{"components/SignIn.html":{}}}],["required",{"_index":1247,"title":{},"body":{"components/SignIn.html":{}}}],["requires",{"_index":905,"title":{},"body":{"injectables/ProductService.html":{}}}],["res",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.json",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.ok",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.status",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.token",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetting",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolves",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["resources",{"_index":1820,"title":{},"body":{"index.html":{}}}],["response",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["response.json",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.ok",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["restants",{"_index":562,"title":{},"body":{"components/Dashboard.html":{}}}],["result",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["results",{"_index":130,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/productImage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":1035,"title":{},"body":{"injectables/ProductService.html":{}}}],["results.length}/${formdata.length",{"_index":1036,"title":{},"body":{"injectables/ProductService.html":{}}}],["results.push",{"_index":1019,"title":{},"body":{"injectables/ProductService.html":{}}}],["retourner",{"_index":651,"title":{},"body":{"injectables/GuardService.html":{}}}],["retries",{"_index":924,"title":{},"body":{"injectables/ProductService.html":{}}}],["retrieve",{"_index":82,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{}}}],["retrieves",{"_index":900,"title":{},"body":{"injectables/ProductService.html":{}}}],["retry",{"_index":917,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["retryoperation",{"_index":870,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["retryoperation(operation",{"_index":912,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":636,"title":{},"body":{"injectables/GuardService.html":{}}}],["revenus",{"_index":528,"title":{},"body":{"components/Dashboard.html":{}}}],["role",{"_index":198,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["root",{"_index":101,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":162,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["route",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{}}}],["router",{"_index":498,"title":{},"body":{"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{}}}],["routerlink",{"_index":462,"title":{},"body":{"components/CircularImage.html":{}}}],["routeroutlet",{"_index":142,"title":{},"body":{"components/App.html":{}}}],["routeroutlet,navbar",{"_index":155,"title":{},"body":{"components/App.html":{}}}],["routerstatesnapshot",{"_index":618,"title":{},"body":{"injectables/GuardService.html":{}}}],["routes",{"_index":630,"title":{},"body":{"injectables/GuardService.html":{}}}],["run",{"_index":1768,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1807,"title":{},"body":{"index.html":{}}}],["running",{"_index":1772,"title":{},"body":{"index.html":{}}}],["rupture",{"_index":556,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["rxjs",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["réactifs",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["récentes",{"_index":536,"title":{},"body":{"components/Dashboard.html":{}}}],["récupère",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["réinitialiser",{"_index":1209,"title":{},"body":{"components/SignIn.html":{}}}],["réponses",{"_index":981,"title":{},"body":{"injectables/ProductService.html":{}}}],["réseau",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["résultat",{"_index":1030,"title":{},"body":{"injectables/ProductService.html":{}}}],["réussi",{"_index":1259,"title":{},"body":{"components/SignIn.html":{}}}],["réussies",{"_index":982,"title":{},"body":{"injectables/ProductService.html":{}}}],["sam",{"_index":580,"title":{},"body":{"components/Dashboard.html":{}}}],["sample",{"_index":186,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["sans",{"_index":1538,"title":{},"body":{"components/UpdateForm.html":{}}}],["save",{"_index":1554,"title":{},"body":{"components/UpdateForm.html":{}}}],["scaffolding",{"_index":1780,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1788,"title":{},"body":{"index.html":{}}}],["secondes",{"_index":1316,"title":{},"body":{"components/SignIn.html":{}}}],["select",{"_index":1188,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["selected",{"_index":1112,"title":{},"body":{"components/SignIn.html":{}}}],["selectedavatarfile",{"_index":1054,"title":{},"body":{"components/SignIn.html":{}}}],["selectedfile",{"_index":1476,"title":{},"body":{"components/UpdateForm.html":{}}}],["selection",{"_index":1107,"title":{},"body":{"components/SignIn.html":{}}}],["selector",{"_index":140,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["seller",{"_index":200,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["seller&#64;demo.com",{"_index":1357,"title":{},"body":{"components/SignIn.html":{}}}],["seller's",{"_index":817,"title":{},"body":{"components/ProductCard.html":{}}}],["seller@demo.com",{"_index":1375,"title":{},"body":{"components/SignIn.html":{}}}],["selleravatar",{"_index":214,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["sellername",{"_index":213,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["selon",{"_index":1280,"title":{},"body":{"components/SignIn.html":{}}}],["semaine",{"_index":526,"title":{},"body":{"components/Dashboard.html":{}}}],["sending",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["sequentially",{"_index":885,"title":{},"body":{"injectables/ProductService.html":{}}}],["serveonce",{"_index":1771,"title":{},"body":{"index.html":{}}}],["server",{"_index":1766,"title":{},"body":{"index.html":{}}}],["serveur",{"_index":1311,"title":{},"body":{"components/SignIn.html":{}}}],["service",{"_index":102,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["service.ts",{"_index":8,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["service.ts:11",{"_index":50,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/DataService.html":{}}}],["service.ts:121",{"_index":936,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:127",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:14",{"_index":615,"title":{},"body":{"injectables/GuardService.html":{}}}],["service.ts:15",{"_index":90,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:157",{"_index":895,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:17",{"_index":88,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/UserService.html":{}}}],["service.ts:18",{"_index":875,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["service.ts:21",{"_index":66,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:221",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:223",{"_index":878,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:231",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:239",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:24",{"_index":619,"title":{},"body":{"injectables/GuardService.html":{}}}],["service.ts:247",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:256",{"_index":1573,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:26",{"_index":59,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{}}}],["service.ts:272",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:281",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:29",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:302",{"_index":898,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:316",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:33",{"_index":97,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:347",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:35",{"_index":93,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:371",{"_index":915,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:40",{"_index":83,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:41",{"_index":903,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:45",{"_index":84,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/UserService.html":{}}}],["service.ts:47",{"_index":69,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:52",{"_index":79,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:59",{"_index":78,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:61",{"_index":907,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:64",{"_index":96,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:66",{"_index":52,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:68",{"_index":63,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:70",{"_index":75,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:71",{"_index":899,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:75",{"_index":55,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:8",{"_index":609,"title":{},"body":{"injectables/DataService.html":{}}}],["service.ts:80",{"_index":58,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:82",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:84",{"_index":893,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:86",{"_index":34,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:9",{"_index":607,"title":{},"body":{"injectables/DataService.html":{}}}],["serviceresponse",{"_index":227,"title":{"interfaces/ServiceResponse.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["services/auth.service",{"_index":674,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["services/data",{"_index":807,"title":{},"body":{"components/ProductCard.html":{}}}],["session",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["settimeout",{"_index":1265,"title":{},"body":{"components/SignIn.html":{}}}],["settimeout(resolve",{"_index":1027,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["setting",{"_index":1095,"title":{},"body":{"components/SignIn.html":{}}}],["shirt",{"_index":560,"title":{},"body":{"components/Dashboard.html":{}}}],["showtoast",{"_index":1390,"title":{},"body":{"components/ToastError.html":{}}}],["si",{"_index":989,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["side",{"_index":1109,"title":{},"body":{"components/SignIn.html":{}}}],["sign",{"_index":180,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["signal",{"_index":201,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["signal(0",{"_index":1415,"title":{},"body":{"components/ToastError.html":{}}}],["signal(false",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["signal(null",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/UpdateForm.html":{}}}],["signal(true",{"_index":1144,"title":{},"body":{"components/SignIn.html":{}}}],["signal(undefined",{"_index":1398,"title":{},"body":{"components/ToastError.html":{}}}],["signals",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["signed",{"_index":1173,"title":{},"body":{"components/SignIn.html":{}}}],["signin",{"_index":179,"title":{"components/SignIn.html":{}},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["signin(data_form",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["signing",{"_index":1355,"title":{},"body":{"components/SignIn.html":{}}}],["signout",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(data_form",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["simulate",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["single",{"_index":809,"title":{},"body":{"components/ProductCard.html":{}}}],["size",{"_index":206,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["slide",{"_index":489,"title":{},"body":{"components/CircularImage.html":{}}}],["slide.src",{"_index":491,"title":{},"body":{"components/CircularImage.html":{}}}],["slides",{"_index":448,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{}}}],["sm",{"_index":551,"title":{},"body":{"components/Dashboard.html":{}}}],["smaller",{"_index":1295,"title":{},"body":{"components/SignIn.html":{}}}],["snapshot",{"_index":623,"title":{},"body":{"injectables/GuardService.html":{}}}],["something",{"_index":1427,"title":{},"body":{"components/ToastError.html":{}}}],["sont",{"_index":1507,"title":{},"body":{"components/UpdateForm.html":{}}}],["sophie",{"_index":552,"title":{},"body":{"components/Dashboard.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"interfaces/productImage.html":{}}}],["spam",{"_index":1026,"title":{},"body":{"injectables/ProductService.html":{}}}],["specified",{"_index":1082,"title":{},"body":{"components/SignIn.html":{}}}],["speed",{"_index":1801,"title":{},"body":{"index.html":{}}}],["spécifique",{"_index":1273,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{}}}],["src",{"_index":475,"title":{},"body":{"components/CircularImage.html":{}}}],["src/.../app.config.ts",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.config.ts",{"_index":1676,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":138,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:12",{"_index":152,"title":{},"body":{"components/App.html":{}}}],["src/app/auth/sign",{"_index":1042,"title":{},"body":{"components/SignIn.html":{},"coverage.html":{}}}],["src/app/error/toast",{"_index":1377,"title":{},"body":{"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["src/app/models/interfaces.ts",{"_index":194,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["src/app/navbar/navbar.ts",{"_index":653,"title":{},"body":{"components/Navbar.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.ts:13",{"_index":672,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:14",{"_index":663,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:25",{"_index":669,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:32",{"_index":670,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:36",{"_index":665,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:42",{"_index":664,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:47",{"_index":671,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:51",{"_index":668,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/products/circular",{"_index":433,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"coverage.html":{}}}],["src/app/products/product",{"_index":708,"title":{},"body":{"components/ProductCard.html":{},"coverage.html":{}}}],["src/app/profile/profile.ts",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["src/app/profile/update",{"_index":1461,"title":{},"body":{"components/UpdateForm.html":{},"coverage.html":{}}}],["src/app/seller/dashboard/dashboard.ts",{"_index":492,"title":{},"body":{"components/Dashboard.html":{},"coverage.html":{}}}],["src/app/seller/dashboard/dashboard.ts:10",{"_index":499,"title":{},"body":{"components/Dashboard.html":{}}}],["src/app/seller/dashboard/dashboard.ts:13",{"_index":500,"title":{},"body":{"components/Dashboard.html":{}}}],["src/app/seller/dashboard/dashboard.ts:18",{"_index":501,"title":{},"body":{"components/Dashboard.html":{}}}],["src/app/seller/form",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["src/app/seller/product",{"_index":854,"title":{},"body":{"components/ProductManagement.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":6,"title":{},"body":{"injectables/ApiUrlService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:120",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:133",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:164",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:31",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:60",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/data",{"_index":602,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/services/guard",{"_index":612,"title":{},"body":{"injectables/GuardService.html":{},"coverage.html":{}}}],["src/app/services/product",{"_index":861,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":1557,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/utils/utils.ts",{"_index":1717,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":1460,"title":{},"body":{"components/ToastSampleIconComponent.html":{}}}],["start",{"_index":1767,"title":{},"body":{"index.html":{}}}],["started",{"_index":1757,"title":{"index.html":{}},"body":{}}],["state",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/SignIn.html":{}}}],["state.url",{"_index":637,"title":{},"body":{"injectables/GuardService.html":{}}}],["statements",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["statistiques",{"_index":535,"title":{},"body":{"components/Dashboard.html":{}}}],["status",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["statut",{"_index":990,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["stock",{"_index":557,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["stocker",{"_index":1190,"title":{},"body":{"components/SignIn.html":{}}}],["stockstatusclass",{"_index":727,"title":{},"body":{"components/ProductCard.html":{}}}],["stockstatustext",{"_index":726,"title":{},"body":{"components/ProductCard.html":{}}}],["storage",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["store",{"_index":1795,"title":{},"body":{"index.html":{}}}],["stored",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["stores",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["stricte",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":48,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/CircularImage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["structure",{"_index":1279,"title":{},"body":{"components/SignIn.html":{}}}],["style",{"_index":1444,"title":{},"body":{"components/ToastError.html":{}}}],["styleurl",{"_index":146,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["submission",{"_index":1115,"title":{},"body":{"components/SignIn.html":{}}}],["subtitle",{"_index":476,"title":{},"body":{"components/CircularImage.html":{}}}],["success",{"_index":228,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["success/failure",{"_index":889,"title":{},"body":{"injectables/ProductService.html":{}}}],["successful",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["successfully",{"_index":972,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["successmessage",{"_index":1055,"title":{},"body":{"components/SignIn.html":{}}}],["succès",{"_index":1264,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{}}}],["such",{"_index":1789,"title":{},"body":{"index.html":{}}}],["suffit",{"_index":1537,"title":{},"body":{"components/UpdateForm.html":{}}}],["suits",{"_index":1817,"title":{},"body":{"index.html":{}}}],["support",{"_index":1289,"title":{},"body":{"components/SignIn.html":{}}}],["supposons",{"_index":639,"title":{},"body":{"injectables/GuardService.html":{}}}],["suppression",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["supprime",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["supprimer",{"_index":689,"title":{},"body":{"components/Navbar.html":{}}}],["supprimez",{"_index":1533,"title":{},"body":{"components/UpdateForm.html":{}}}],["sur",{"_index":568,"title":{},"body":{"components/Dashboard.html":{}}}],["switch",{"_index":831,"title":{},"body":{"components/ProductCard.html":{}}}],["switching",{"_index":1132,"title":{},"body":{"components/SignIn.html":{}}}],["switchmap",{"_index":627,"title":{},"body":{"injectables/GuardService.html":{}}}],["synchronously",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["sélectionner",{"_index":1544,"title":{},"body":{"components/UpdateForm.html":{}}}],["séparée",{"_index":1192,"title":{},"body":{"components/SignIn.html":{}}}],["séquentiel",{"_index":1014,"title":{},"body":{"injectables/ProductService.html":{}}}],["t",{"_index":230,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/Dashboard.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["table",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":507,"title":{},"body":{"components/Dashboard.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["taille",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["tailwindcss/postcss",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["tap",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["tap((user:any",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["tats",{"_index":1076,"title":{},"body":{"components/SignIn.html":{}}}],["template",{"_index":135,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["templateurl",{"_index":144,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["tentatives",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["test",{"_index":1806,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1812,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1810,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1803,"title":{},"body":{"index.html":{}}}],["text",{"_index":782,"title":{},"body":{"components/ProductCard.html":{}}}],["then((res",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._issignin.asreadonly",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._issignin.set(false",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._issignin.set(true",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addtocartevent.emit(this.product",{"_index":840,"title":{},"body":{"components/ProductCard.html":{}}}],["this.apiurl.add_img_by_product_id(id",{"_index":1012,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.delete_img_by_media_id(id",{"_index":977,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.delete_product_by_id(id",{"_index":1038,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.get_all_products",{"_index":951,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.get_my_all_product",{"_index":956,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.authform",{"_index":1170,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["this.authform.get('avatar')?.markaspristine",{"_index":1213,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('avatar')?.markastouched",{"_index":1204,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('avatar')?.markasuntouched",{"_index":1212,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('avatar')?.setvalue(null",{"_index":1211,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('confirmpassword')?.clearvalidators",{"_index":1237,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('confirmpassword')?.setvalidators([validators.required",{"_index":1234,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('confirmpassword')?.updatevalueandvalidity",{"_index":1239,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('email')?.value",{"_index":1526,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get('name')?.clearvalidators",{"_index":1236,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('name')?.setvalidators([validators.required",{"_index":1233,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('name')?.updatevalueandvalidity",{"_index":1238,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('name')?.value",{"_index":1525,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get('password')?.value",{"_index":1528,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get('role')?.value",{"_index":1527,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get(key)?.markastouched",{"_index":1319,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.invalid",{"_index":1244,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["this.authform.value",{"_index":1252,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform?.get('password')?.value",{"_index":1240,"title":{},"body":{"components/SignIn.html":{}}}],["this.authservice.checkauth",{"_index":678,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.authservice.checkauth().then(authenticated",{"_index":633,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.authservice.currentuser",{"_index":638,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{}}}],["this.authservice.issignin",{"_index":680,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.authservice.signin(formdata",{"_index":1269,"title":{},"body":{"components/SignIn.html":{}}}],["this.authservice.signout",{"_index":687,"title":{},"body":{"components/Navbar.html":{}}}],["this.authservice.signup(formdata",{"_index":1254,"title":{},"body":{"components/SignIn.html":{}}}],["this.avatarpreview",{"_index":1198,"title":{},"body":{"components/SignIn.html":{}}}],["this.badgetext",{"_index":832,"title":{},"body":{"components/ProductCard.html":{}}}],["this.baseurl}/api/admin/users/all",{"_index":65,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/admin/users/del/${id",{"_index":120,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/auth/login",{"_index":87,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/auth/register",{"_index":89,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/media/add/${id",{"_index":129,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/media/delete/${id",{"_index":127,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/${id",{"_index":125,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/all",{"_index":62,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/create",{"_index":51,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/delete/${id",{"_index":128,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/myproducts",{"_index":74,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/update/${id",{"_index":126,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/email/${email",{"_index":124,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/me",{"_index":68,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/name/${userid",{"_index":123,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/profile/${id",{"_index":122,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/update/${id",{"_index":121,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/update/avatar",{"_index":92,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.cancel.emit",{"_index":1541,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.canhide.set(false",{"_index":1226,"title":{},"body":{"components/SignIn.html":{}}}],["this.canhide.set(true",{"_index":1222,"title":{},"body":{"components/SignIn.html":{}}}],["this.checkauth",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cleanavatarinput",{"_index":1227,"title":{},"body":{"components/SignIn.html":{}}}],["this.clearmessages(0",{"_index":1231,"title":{},"body":{"components/SignIn.html":{}}}],["this.clearmessages(3000",{"_index":1185,"title":{},"body":{"components/SignIn.html":{}}}],["this.clearmessages(5000",{"_index":1317,"title":{},"body":{"components/SignIn.html":{}}}],["this.createform",{"_index":1171,"title":{},"body":{"components/SignIn.html":{}}}],["this.currentnotification",{"_index":1407,"title":{},"body":{"components/ToastError.html":{}}}],["this.currentuser",{"_index":686,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentuser.set(null",{"_index":676,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentuser.set(this.authservice.currentuser",{"_index":681,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentuser.set(user",{"_index":675,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentusersubject.asobservable",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.asreadonly",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(updateduser",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(user",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.set(user",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.value",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["this.datasharedservice.updatedata(this.product",{"_index":842,"title":{},"body":{"components/ProductCard.html":{}}}],["this.datasubject.asobservable",{"_index":606,"title":{},"body":{"injectables/DataService.html":{}}}],["this.datasubject.next(data",{"_index":610,"title":{},"body":{"injectables/DataService.html":{}}}],["this.dialogref.close",{"_index":1540,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.dialogref.close(formdata",{"_index":1532,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.dialogref.close(this.selectedfile",{"_index":1524,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.errormessage",{"_index":1154,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set",{"_index":1250,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('account",{"_index":1286,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('an",{"_index":1291,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('avatar",{"_index":1294,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('file",{"_index":1183,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('invalid",{"_index":1282,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('network",{"_index":1307,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('please",{"_index":1187,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('server",{"_index":1303,"title":{},"body":{"components/SignIn.html":{}}}],["this.fb.group",{"_index":1205,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["this.getauthheaders",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuser",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getheadertoken",{"_index":958,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.gettoken",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["this.handleautherror(error",{"_index":1275,"title":{},"body":{"components/SignIn.html":{}}}],["this.hasmessage",{"_index":1421,"title":{},"body":{"components/ToastError.html":{}}}],["this.http.delete(this.apiurl.delete_img_by_media_id(id",{"_index":978,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(this.apiurl.delete_product_by_id(id",{"_index":1039,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(this.apiurl.delete_user",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.apiurl.get_all_products).pipe",{"_index":952,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(this.apiurl.get_current_user",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.apiurl.get_my_all_product",{"_index":957,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.post(this.apiurl.create_product",{"_index":969,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.put(`${this.apiurl.update_product(id",{"_index":975,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.put(this.apiurl.update_avatar",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(this.apiurl.update_user(userid",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["this.issignin",{"_index":679,"title":{},"body":{"components/Navbar.html":{}}}],["this.issignup",{"_index":1232,"title":{},"body":{"components/SignIn.html":{}}}],["this.issignup.set(!this.issignup",{"_index":1228,"title":{},"body":{"components/SignIn.html":{}}}],["this.loading.set(false",{"_index":1277,"title":{},"body":{"components/SignIn.html":{}}}],["this.loading.set(true",{"_index":1249,"title":{},"body":{"components/SignIn.html":{}}}],["this.logout",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["this.markallfieldsastouched",{"_index":1245,"title":{},"body":{"components/SignIn.html":{}}}],["this.messagestatus",{"_index":1151,"title":{},"body":{"components/SignIn.html":{}}}],["this.oncancel",{"_index":1534,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.passwordmatchvalidator.bind(this",{"_index":1235,"title":{},"body":{"components/SignIn.html":{}}}],["this.percentage",{"_index":1456,"title":{},"body":{"components/ToastError.html":{}}}],["this.percentage.set($event",{"_index":1457,"title":{},"body":{"components/ToastError.html":{}}}],["this.percentage.set(this.visible",{"_index":1455,"title":{},"body":{"components/ToastError.html":{}}}],["this.previewurl",{"_index":1515,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.product.quantity",{"_index":836,"title":{},"body":{"components/ProductCard.html":{}}}],["this.productidevent.emit(this.product.id",{"_index":819,"title":{},"body":{"components/ProductCard.html":{}}}],["this.productimg.foreach((valu",{"_index":486,"title":{},"body":{"components/CircularImage.html":{}}}],["this.route.navigate(['auth",{"_index":682,"title":{},"body":{"components/Navbar.html":{}}}],["this.route.navigate(['profil",{"_index":684,"title":{},"body":{"components/Navbar.html":{}}}],["this.route.navigate([route",{"_index":703,"title":{},"body":{"components/Navbar.html":{}}}],["this.router.createurltree",{"_index":652,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.router.createurltree(['/auth",{"_index":634,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.router.navigate",{"_index":1176,"title":{},"body":{"components/SignIn.html":{}}}],["this.router.navigate([\"/products/update",{"_index":845,"title":{},"body":{"components/ProductCard.html":{}}}],["this.router.navigate(['/products/myproduct",{"_index":503,"title":{},"body":{"components/Dashboard.html":{}}}],["this.router.navigate(['/products/new",{"_index":504,"title":{},"body":{"components/Dashboard.html":{}}}],["this.selectedavatarfile",{"_index":1193,"title":{},"body":{"components/SignIn.html":{}}}],["this.selectedfile",{"_index":1523,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.slides[index",{"_index":487,"title":{},"body":{"components/CircularImage.html":{}}}],["this.successmessage",{"_index":1155,"title":{},"body":{"components/SignIn.html":{}}}],["this.successmessage.set",{"_index":1251,"title":{},"body":{"components/SignIn.html":{}}}],["this.successmessage.set('account",{"_index":1260,"title":{},"body":{"components/SignIn.html":{}}}],["this.successmessage.set('sign",{"_index":1270,"title":{},"body":{"components/SignIn.html":{}}}],["this.togglemode",{"_index":1266,"title":{},"body":{"components/SignIn.html":{}}}],["this.user.set(data.user",{"_index":1513,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.validateimagefile(file",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.viewdetails.emit(productid",{"_index":838,"title":{},"body":{"components/ProductCard.html":{}}}],["this.visible",{"_index":1420,"title":{},"body":{"components/ToastError.html":{}}}],["this.visible.set($event",{"_index":1454,"title":{},"body":{"components/ToastError.html":{}}}],["this.visible.set(true",{"_index":1446,"title":{},"body":{"components/ToastError.html":{}}}],["this.visible.update((value",{"_index":1453,"title":{},"body":{"components/ToastError.html":{}}}],["throw",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["throwerror",{"_index":943,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["throws",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["time",{"_index":1085,"title":{},"body":{"components/SignIn.html":{}}}],["title",{"_index":149,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{}}}],["titre",{"_index":1430,"title":{},"body":{"components/ToastError.html":{}}}],["toast",{"_index":183,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["toastbodycomponent",{"_index":1383,"title":{},"body":{"components/ToastError.html":{}}}],["toastcomponent",{"_index":1381,"title":{},"body":{"components/ToastError.html":{}}}],["toastdetail",{"_index":1391,"title":{},"body":{"components/ToastError.html":{}}}],["toastercomponent",{"_index":1380,"title":{},"body":{"components/ToastError.html":{}}}],["toasterror",{"_index":182,"title":{"components/ToastError.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["toastheadercomponent",{"_index":1382,"title":{},"body":{"components/ToastError.html":{}}}],["toastsampleiconcomponent",{"_index":185,"title":{"components/ToastSampleIconComponent.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["toasttitle",{"_index":1392,"title":{},"body":{"components/ToastError.html":{}}}],["today",{"_index":1324,"title":{},"body":{"components/SignIn.html":{}}}],["todo",{"_index":908,"title":{},"body":{"injectables/ProductService.html":{}}}],["toggle",{"_index":484,"title":{},"body":{"components/CircularImage.html":{},"components/SignIn.html":{}}}],["toggle(even",{"_index":1127,"title":{},"body":{"components/SignIn.html":{}}}],["togglemode",{"_index":1064,"title":{},"body":{"components/SignIn.html":{}}}],["toggles",{"_index":1129,"title":{},"body":{"components/SignIn.html":{}}}],["toggletoast",{"_index":1396,"title":{},"body":{"components/ToastError.html":{}}}],["token",{"_index":226,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["token's",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["tools",{"_index":1783,"title":{},"body":{"index.html":{}}}],["top",{"_index":1417,"title":{},"body":{"components/ToastError.html":{}}}],["tort",{"_index":1002,"title":{},"body":{"injectables/ProductService.html":{}}}],["total",{"_index":583,"title":{},"body":{"components/Dashboard.html":{}}}],["touch",{"_index":1203,"title":{},"body":{"components/SignIn.html":{}}}],["touched",{"_index":1101,"title":{},"body":{"components/SignIn.html":{}}}],["tous",{"_index":521,"title":{},"body":{"components/Dashboard.html":{},"components/Navbar.html":{},"components/SignIn.html":{}}}],["toutes",{"_index":527,"title":{},"body":{"components/Dashboard.html":{}}}],["track",{"_index":490,"title":{},"body":{"components/CircularImage.html":{}}}],["traitement",{"_index":980,"title":{},"body":{"injectables/ProductService.html":{}}}],["transactions",{"_index":586,"title":{},"body":{"components/Dashboard.html":{}}}],["transition",{"_index":447,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["tree",{"_index":137,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["trigger",{"_index":1102,"title":{},"body":{"components/SignIn.html":{}}}],["triggered",{"_index":741,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["triggering",{"_index":753,"title":{},"body":{"components/ProductCard.html":{}}}],["true",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastSampleIconComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":47,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["têtes",{"_index":1575,"title":{},"body":{"injectables/UserService.html":{}}}],["ui",{"_index":1119,"title":{},"body":{"components/SignIn.html":{}}}],["un",{"_index":512,"title":{},"body":{"components/Dashboard.html":{},"components/ToastError.html":{}}}],["undefined",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["une",{"_index":594,"title":{},"body":{"components/Dashboard.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["unexpected",{"_index":994,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["unit",{"_index":1802,"title":{},"body":{"index.html":{}}}],["unités",{"_index":559,"title":{},"body":{"components/Dashboard.html":{}}}],["up",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["update",{"_index":94,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["update/delete",{"_index":760,"title":{},"body":{"components/ProductCard.html":{}}}],["update_avatar",{"_index":29,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["update_product",{"_index":30,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["update_user",{"_index":31,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["updateavatar",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavatar(file",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":937,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":215,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["updatedata",{"_index":604,"title":{},"body":{"injectables/DataService.html":{}}}],["updatedata(data",{"_index":605,"title":{},"body":{"injectables/DataService.html":{}}}],["updateduser",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":188,"title":{"components/UpdateForm.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["updateproduct",{"_index":871,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct(id",{"_index":935,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateprofile",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile(user",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["updates",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["updating",{"_index":949,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["uploaded",{"_index":890,"title":{},"body":{"injectables/ProductService.html":{}}}],["uploadedat",{"_index":207,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["uploading",{"_index":1017,"title":{},"body":{"injectables/ProductService.html":{}}}],["uploadprogress",{"_index":220,"title":{"interfaces/UploadProgress.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["url",{"_index":7,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["urls",{"_index":104,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{}}}],["urltree",{"_index":624,"title":{},"body":{"injectables/GuardService.html":{}}}],["use",{"_index":1298,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{},"index.html":{}}}],["useclass",{"_index":456,"title":{},"body":{"components/CircularImage.html":{}}}],["used",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":60,"title":{"interfaces/User.html":{}},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["user's",{"_index":72,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user().role",{"_index":1542,"title":{},"body":{"components/UpdateForm.html":{}}}],["user?.role",{"_index":644,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{}}}],["userdata",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{}}}],["userid",{"_index":86,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["username",{"_index":85,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["users",{"_index":67,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["userservice",{"_index":1556,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":1761,"title":{},"body":{"index.html":{}}}],["utilisateur",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["utilitaire",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["utility",{"_index":916,"title":{},"body":{"injectables/ProductService.html":{}}}],["utils/utils",{"_index":945,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["valeur",{"_index":1210,"title":{},"body":{"components/SignIn.html":{}}}],["valid",{"_index":1189,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["validateimagefile",{"_index":1568,"title":{},"body":{"injectables/UserService.html":{}}}],["validateimagefile(file",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["validates",{"_index":1117,"title":{},"body":{"components/SignIn.html":{}}}],["validation",{"_index":1103,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["validationresult",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["validationresult.error",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["validationresult.isvalid",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["validator",{"_index":1123,"title":{},"body":{"components/SignIn.html":{}}}],["validators",{"_index":1090,"title":{},"body":{"components/SignIn.html":{}}}],["validators.email",{"_index":1207,"title":{},"body":{"components/SignIn.html":{}}}],["validators.minlength(6",{"_index":1208,"title":{},"body":{"components/SignIn.html":{}}}],["validators.required",{"_index":1206,"title":{},"body":{"components/SignIn.html":{}}}],["valide",{"_index":1545,"title":{},"body":{"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["valider",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["validity",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["valu",{"_index":488,"title":{},"body":{"components/CircularImage.html":{}}}],["valuation",{"_index":1029,"title":{},"body":{"injectables/ProductService.html":{}}}],["value",{"_index":36,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":160,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["variable",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1831,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ven",{"_index":579,"title":{},"body":{"components/Dashboard.html":{}}}],["ventes",{"_index":566,"title":{},"body":{"components/Dashboard.html":{}}}],["verifying",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["vers",{"_index":647,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{}}}],["version",{"_index":1763,"title":{},"body":{"index.html":{},"properties.html":{}}}],["veuillez",{"_index":1543,"title":{},"body":{"components/UpdateForm.html":{}}}],["video",{"_index":205,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["view",{"_index":746,"title":{},"body":{"components/ProductCard.html":{}}}],["viewdetails",{"_index":722,"title":{},"body":{"components/ProductCard.html":{}}}],["viewed",{"_index":777,"title":{},"body":{"components/ProductCard.html":{}}}],["viewing",{"_index":813,"title":{},"body":{"components/ProductCard.html":{}}}],["viewproductdetails",{"_index":718,"title":{},"body":{"components/ProductCard.html":{}}}],["viewproductdetails(productid",{"_index":774,"title":{},"body":{"components/ProductCard.html":{}}}],["visibilit",{"_index":1449,"title":{},"body":{"components/ToastError.html":{}}}],["visibility",{"_index":1130,"title":{},"body":{"components/SignIn.html":{}}}],["visible",{"_index":1393,"title":{},"body":{"components/ToastError.html":{}}}],["visit",{"_index":1823,"title":{},"body":{"index.html":{}}}],["visiteurs",{"_index":531,"title":{},"body":{"components/Dashboard.html":{}}}],["voici",{"_index":511,"title":{},"body":{"components/Dashboard.html":{}}}],["void",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["voie",{"_index":1263,"title":{},"body":{"components/SignIn.html":{}}}],["voir",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{}}}],["volution",{"_index":567,"title":{},"body":{"components/Dashboard.html":{}}}],["vos",{"_index":514,"title":{},"body":{"components/Dashboard.html":{}}}],["vrai",{"_index":1451,"title":{},"body":{"components/ToastError.html":{}}}],["vraie",{"_index":963,"title":{},"body":{"injectables/ProductService.html":{}}}],["vérification",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["vérifie",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["vérifier",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["webp",{"_index":1301,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["welcome",{"_index":1320,"title":{},"body":{"components/SignIn.html":{}}}],["went",{"_index":1428,"title":{},"body":{"components/ToastError.html":{}}}],["whenever",{"_index":1778,"title":{},"body":{"index.html":{}}}],["whose",{"_index":776,"title":{},"body":{"components/ProductCard.html":{}}}],["works",{"_index":859,"title":{},"body":{"components/ProductManagement.html":{}}}],["wrong",{"_index":1429,"title":{},"body":{"components/ToastError.html":{}}}],["x",{"_index":835,"title":{},"body":{"components/ProductCard.html":{}}}],["y",{"_index":1004,"title":{},"body":{"injectables/ProductService.html":{}}}],["yes",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["zone.js",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["zéro",{"_index":1075,"title":{},"body":{"components/SignIn.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiUrlService.html":{"url":"injectables/ApiUrlService.html","title":"injectable - ApiUrlService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiUrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-url-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ADD_IMG_BY_PRODUCT_ID\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Readonly\n                                CREATE_PRODUCT\n                            \n                            \n                                    Readonly\n                                DELETE_IMG_BY_Media_ID\n                            \n                            \n                                    Readonly\n                                DELETE_PRODUCT_BY_ID\n                            \n                            \n                                    Readonly\n                                DELETE_USER\n                            \n                            \n                                    Readonly\n                                GET_ALL_PRODUCTS\n                            \n                            \n                                    Readonly\n                                GET_ALL_USERS\n                            \n                            \n                                    Readonly\n                                GET_CURRENT_USER\n                            \n                            \n                                    Readonly\n                                GET_MY_ALL_PRODUCT\n                            \n                            \n                                    Readonly\n                                GET_PRODUCT_BY_ID\n                            \n                            \n                                    Readonly\n                                GET_USER_BY_EMAIL\n                            \n                            \n                                    Readonly\n                                GET_USER_BY_ID\n                            \n                            \n                                    Readonly\n                                GET_USER_BY_NAME\n                            \n                            \n                                    Readonly\n                                LOGIN\n                            \n                            \n                                    Readonly\n                                REGISTER\n                            \n                            \n                                    Readonly\n                                UPDATE_AVATAR\n                            \n                            \n                                    Readonly\n                                UPDATE_PRODUCT\n                            \n                            \n                                    Readonly\n                                UPDATE_USER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-url-service.ts:86\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ADD_IMG_BY_PRODUCT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:86\n                        \n                    \n\n            \n                \n                    API endpoint to add an image to a product by Product ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the product to add the image to.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:8443'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        CREATE_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/products/create`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:66\n                        \n                    \n\n            \n                \n                    API endpoint to create a new product.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        DELETE_IMG_BY_Media_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:75\n                        \n                    \n\n            \n                \n                    API endpoint to delete an image by its Media ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The Media ID of the image to delete.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        DELETE_PRODUCT_BY_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:80\n                        \n                    \n\n            \n                \n                    API endpoint to delete a product by ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the product to delete.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        DELETE_USER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:26\n                        \n                    \n\n            \n                \n                    API endpoint to delete a user by ID (admin only).\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the user to delete.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_ALL_PRODUCTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/products/all`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:68\n                        \n                    \n\n            \n                \n                    API endpoint to get all products.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_ALL_USERS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/admin/users/all`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:21\n                        \n                    \n\n            \n                \n                    API endpoint to get all users (admin only).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_CURRENT_USER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/users/me`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:47\n                        \n                    \n\n            \n                \n                    API endpoint to get the currently authenticated user's profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_MY_ALL_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/products/myproducts`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:70\n                        \n                    \n\n            \n                \n                    API endpoint to get all products owned by the current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_PRODUCT_BY_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:59\n                        \n                    \n\n            \n                \n                    API endpoint to get a product by ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_USER_BY_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:52\n                        \n                    \n\n            \n                \n                    API endpoint to get a user by email address.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    email\n                                                    \n                                                            The email address of the user to retrieve.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_USER_BY_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:40\n                        \n                    \n\n            \n                \n                    API endpoint to get a user by ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the user to retrieve.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_USER_BY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:45\n                        \n                    \n\n            \n                \n                    API endpoint to get a user by username.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    userId\n                                                    \n                                                            The username of the user to retrieve.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/auth/login`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:17\n                        \n                    \n\n            \n                \n                    API endpoint for user login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        REGISTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/auth/register`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:15\n                        \n                    \n\n            \n                \n                    API endpoint for user registration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UPDATE_AVATAR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/users/update/avatar`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:35\n                        \n                    \n\n            \n                \n                    API endpoint to update the current user's avatar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UPDATE_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:64\n                        \n                    \n\n            \n                \n                    API endpoint to update a product by ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the product to update.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UPDATE_USER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:33\n                        \n                    \n\n            \n                \n                    API endpoint to update a user by ID.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for managing API URLs.\n * Provides a centralized location for all backend API endpoints.\n */\nexport class ApiUrlService {\n private readonly baseUrl = 'https://localhost:8443'; // À remplacer par environment.apiUrl en production\n\n /** Auth Endpoints */\n /** API endpoint for user registration. */\n readonly REGISTER = `${this.baseUrl}/api/auth/register`;\n /** API endpoint for user login. */\n readonly LOGIN = `${this.baseUrl}/api/auth/login`;\n\n  /** Admin Endpoints */\n  /** API endpoint to get all users (admin only). */\n  readonly GET_ALL_USERS = `${this.baseUrl}/api/admin/users/all`;\n  /**\n   * API endpoint to delete a user by ID (admin only).\n   * @param id The ID of the user to delete.\n   */\n  readonly DELETE_USER = (id: number) => `${this.baseUrl}/api/admin/users/del/${id}`;\n\n  /** User Endpoints */\n  /**\n   * API endpoint to update a user by ID.\n   * @param id The ID of the user to update.\n   */\n  readonly UPDATE_USER = (id: string) => `${this.baseUrl}/api/users/update/${id}`;\n  /** API endpoint to update the current user's avatar. */\n  readonly UPDATE_AVATAR = `${this.baseUrl}/api/users/update/avatar`;\n  /**\n   * API endpoint to get a user by ID.\n   * @param id The ID of the user to retrieve.\n   */\n  readonly GET_USER_BY_ID = (id: number) => `${this.baseUrl}/api/users/profile/${id}`;\n  /**\n   * API endpoint to get a user by username.\n   * @param userId The username of the user to retrieve.\n   */\n  readonly GET_USER_BY_NAME = (userId: string) => `${this.baseUrl}/api/users/name/${userId}`;\n  /** API endpoint to get the currently authenticated user's profile. */\n  readonly GET_CURRENT_USER = `${this.baseUrl}/api/users/me`;\n  /**\n   * API endpoint to get a user by email address.\n   * @param email The email address of the user to retrieve.\n   */\n  readonly GET_USER_BY_EMAIL = (email: string) => `${this.baseUrl}/api/users/email/${email}`;\n\n  /** Product Endpoints */\n  /**\n   * API endpoint to get a product by ID.\n   * @param id The ID of the product to retrieve.\n   */\n  readonly GET_PRODUCT_BY_ID = (id: number) => `${this.baseUrl}/api/products/${id}`;\n  /**\n   * API endpoint to update a product by ID.\n   * @param id The ID of the product to update.\n   */\n  readonly UPDATE_PRODUCT = (id: string) => `${this.baseUrl}/api/products/update/${id}`;\n  /** API endpoint to create a new product. */\n  readonly CREATE_PRODUCT = `${this.baseUrl}/api/products/create`;\n  /** API endpoint to get all products. */\n  readonly GET_ALL_PRODUCTS = `${this.baseUrl}/api/products/all`;\n  /** API endpoint to get all products owned by the current user. */\n  readonly GET_MY_ALL_PRODUCT = `${this.baseUrl}/api/products/myproducts`\n  /**\n   * API endpoint to delete an image by its Media ID.\n   * @param id The Media ID of the image to delete.\n   */\n  readonly DELETE_IMG_BY_Media_ID = (id: string) => `${this.baseUrl}/api/media/delete/${id}`\n  /**\n   * API endpoint to delete a product by ID.\n   * @param id The ID of the product to delete.\n   */\n  readonly DELETE_PRODUCT_BY_ID = (id: string) => `${this.baseUrl}/api/products/delete/${id}`\n\n  /**\n   * API endpoint to add an image to a product by Product ID.\n   * @param id The ID of the product to add the image to.\n   */\n  readonly ADD_IMG_BY_PRODUCT_ID = (id : string) => `${this.baseUrl}/api/media/add/${id}`\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                Navbar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'e-comerce'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Navbar } from './navbar/navbar';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,Navbar],\n  templateUrl: './app.html',\n  styleUrl: './app.css'\n})\nexport class App {\n  protected title = 'e-comerce';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthFormData.html":{"url":"interfaces/AuthFormData.html","title":"interface - AuthFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"CLIENT\" | \"SELLER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"CLIENT\" | \"SELLER\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isSignIn\n                            \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Public\n                                isSignIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuth\n                            \n                            \n                                isAuthenticatedSync\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiUrlService: ApiUrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrlService\n                                                  \n                                                        \n                                                                        ApiUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Checks the current authentication status by verifying the stored token with the backend.\nUpdates the currentUserSubject and _isSignIn signals based on the token's validity.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the user is authenticated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticatedSync\n                        \n                    \n                \n            \n            \n                \nisAuthenticatedSync()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Synchronously checks if an authentication token exists in local storage.\nThis method is primarily used by route guards for immediate authentication checks.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if a token is found, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(data_form: AuthFormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Authenticates a user by sending their credentials to the login API.\nOn successful login, stores the authentication token and updates the user's sign-in status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data_form\n                                            \n                                                            AuthFormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The authentication form data containing email and password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if sign-in is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Signs out the current user by clearing local storage and resetting authentication states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(data_form: AuthFormData, avatarFile?: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Registers a new user by sending their registration data and an optional avatar file to the sign-up API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data_form\n                                            \n                                                            AuthFormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registration form data containing user details.\n\n                                            \n                                        \n                                        \n                                                avatarFile\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Optional. The avatar image file to upload for the new user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the sign-up process is complete.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isSignIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSignIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._isSignIn.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { User, AuthFormData, AuthResponse } from '../models/interfaces';\nimport { ApiUrlService } from './api-url-service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for handling user authentication, including sign-in, sign-up, and session management.\n * Manages the current user's authentication state and provides methods for interacting with the authentication API.\n */\nexport class AuthService {\n  private currentUserSubject = signal(null);\n  public currentUser$ = this.currentUserSubject.asReadonly();\n  private _isSignIn = signal(false);\n  public isSignIn$ = this._isSignIn.asReadonly();\n\n  constructor(private apiUrlService: ApiUrlService) {\n    // Check for stored user\n    this.checkAuth();\n  }\n\n  /**\n   * Authenticates a user by sending their credentials to the login API.\n   * On successful login, stores the authentication token and updates the user's sign-in status.\n   * @param data_form The authentication form data containing email and password.\n   * @returns A Promise that resolves to `true` if sign-in is successful, `false` otherwise.\n   */\n  async signIn(data_form: AuthFormData): Promise {\n    // Mock authentication - simulate API call\n    console.log('Signing in with data:', data_form);\n    try {\n      let res = await fetch(this.apiUrlService.LOGIN, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data_form)\n      }).then((res) => res.json());\n      console.log('Login response:', res);\n      this._isSignIn.set(true);\n      localStorage.setItem('token', res.token);\n      await this.checkAuth();\n    } catch (error: any) {\n     alert('Login failed: ' + error.error);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Registers a new user by sending their registration data and an optional avatar file to the sign-up API.\n   * @param data_form The registration form data containing user details.\n   * @param avatarFile Optional. The avatar image file to upload for the new user.\n   * @returns A Promise that resolves when the sign-up process is complete.\n   * @throws Error if registration fails or an invalid avatar file type is provided.\n   */\n  async signUp(data_form: AuthFormData, avatarFile?: File): Promise {\n    const formData = new FormData();\n    const file : File | Blob | null = avatarFile || null;\n    // Créer l'objet JSON pour les données utilisateur\n    const userData = {\n      email: data_form.email,\n      password: data_form.password,\n      name: data_form.name,\n      role: data_form.role\n    };\n\n    // Ajouter les données JSON comme Blob avec le bon Content-Type\n    formData.append('data', new Blob([JSON.stringify(userData)], {\n      type: 'application/json'\n    }));\n  // Vérification plus stricte du fichier\n  if (avatarFile) {\n    if (avatarFile instanceof File) {\n      console.log('Valid avatar file:', avatarFile.name, avatarFile.type);\n      formData.append('avatar', avatarFile);\n    } else if (file instanceof Blob) {\n      console.log('Avatar is a Blob, converting...');\n      formData.append('avatar', file, 'avatar.jpg');\n    } else {\n     alert('Invalid avatar file type: ' + typeof avatarFile + ', ' + avatarFile);\n      throw new Error('Invalid avatar file');\n    }\n  }\n\n    console.log('Sending form data:', userData);\n\n    // Debug: voir le contenu du FormData\n    for (let [key, value] of formData.entries()) {\n      console.log(`${key}:`, value);\n    }\n\n    try {\n      let res = await fetch(this.apiUrlService.REGISTER, {\n        method: 'POST',\n        body: formData\n        // Ne pas définir Content-Type, le navigateur le fera automatiquement\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const result = await res.json();\n      console.log('Registration success:', result);\n      return result;\n\n    } catch (error: any) {\n     alert('Registration failed: ' + error);\n      throw new Error(error.error || 'Registration failed');\n    }\n  }\n\n  /**\n   * Signs out the current user by clearing local storage and resetting authentication states.\n   */\n  signOut(): void {\n    localStorage.removeItem('currentUser');\n    localStorage\n      .removeItem('token');\n    this._isSignIn.set(false);\n    localStorage.clear();\n  }\n\n  /**\n   * Checks the current authentication status by verifying the stored token with the backend.\n   * Updates the `currentUserSubject` and `_isSignIn` signals based on the token's validity.\n   * @returns A Promise that resolves to `true` if the user is authenticated, `false` otherwise.\n   */\n  async checkAuth(): Promise {\n    const token = localStorage.getItem('token');\n    if (!token || token == undefined) {\n      this._isSignIn.set(false);\n      return false;\n    }\n\n    try {\n      const response = await fetch(this.apiUrlService.GET_CURRENT_USER, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n\n      if (response.ok) {\n        const user = await response.json();\n        this.currentUserSubject.set(user);\n        this._isSignIn.set(true);\n        return true;\n      }\n    } catch (error : any) {\n     alert('Auth check failed: ' + error.error);\n    }\n\n    this._isSignIn.set(false);\n    return false;\n  }\n\n  /**\n   * Synchronously checks if an authentication token exists in local storage.\n   * This method is primarily used by route guards for immediate authentication checks.\n   * @returns `true` if a token is found, `false` otherwise.\n   */\n  isAuthenticatedSync(): boolean {\n    return !!localStorage.getItem('token');\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarouselCustomConfig.html":{"url":"injectables/CarouselCustomConfig.html","title":"injectable - CarouselCustomConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CarouselCustomConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/products/circular-image/carroussel.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeIndex\n                            \n                            \n                                animate\n                            \n                            \n                                direction\n                            \n                            \n                                    Optional\n                                interval\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"next\" | \"prev\"\n\n                    \n                \n                \n                    \n                        Default value : 'next'\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3000\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CarouselCustomConfig {\n  /* Animate transition of slides */\n  activeIndex = 0;\n  /* Animate transition of slides */\n  animate = true;\n  /* Default direction of auto changing of slides */\n  direction: 'next' | 'prev' = 'next';\n  /* Default interval of auto changing of slides */\n  interval? = 3000;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircularImage.html":{"url":"components/CircularImage.html","title":"component - CircularImage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CircularImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/products/circular-image/circular-image.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: CarouselConfig, useClass: CarouselCustomConfig }\n                \n            \n\n\n            \n                selector\n                app-circular-image\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            CarouselComponent\n                            CarouselInnerComponent\n                            CarouselItemComponent\n                            CarouselControlComponent\n                            RouterLink\n                            MatButtonToggleModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./circular-image.html\n            \n\n\n\n            \n                styleUrl\n                ./circular-image.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                productimg\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/products/circular-image/circular-image.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        productimg\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/circular-image/circular-image.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/circular-image/circular-image.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : new Array(3).fill({ id: -1, src: '', title: '', subtitle: '' })\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/circular-image.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, model } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport {\n  CarouselComponent,\n  CarouselConfig,\n  CarouselControlComponent,\n  CarouselIndicatorsComponent,\n  CarouselInnerComponent,\n  CarouselItemComponent\n} from '@coreui/angular';\nimport { CarouselCustomConfig } from './carroussel.config';\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n    selector: 'app-circular-image',\n    imports: [CommonModule, CarouselComponent, CarouselInnerComponent, CarouselItemComponent, CarouselControlComponent, RouterLink, MatButtonToggleModule, MatIconModule],\n    templateUrl: './circular-image.html',\n    styleUrl: './circular-image.css',\n    providers: [{ provide: CarouselConfig, useClass: CarouselCustomConfig }]\n})\nexport class CircularImage {\n    @Input() productimg!: string[];\n    slides: any[] = new Array(3).fill({ id: -1, src: '', title: '', subtitle: '' });\n    constructor() { }\n\n    ngOnInit() {\n        this.productimg.forEach((valu, index) => {\n            this.slides[index] = {\n                src: valu\n            };\n        })\n    }\n}\n\n    \n\n    \n        \n  \n    @for (slide of slides; track slide.src) {\n    \n      \n    \n    }\n  \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (slide of slides; track slide.src) {                  }      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CircularImage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Dashboard.html":{"url":"components/Dashboard.html","title":"component - Dashboard","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Dashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/seller/dashboard/dashboard.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToMyProduct\n                            \n                            \n                                onNewProductClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/seller/dashboard/dashboard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToMyProduct\n                        \n                    \n                \n            \n            \n                \ngoToMyProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/seller/dashboard/dashboard.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNewProductClick\n                        \n                    \n                \n            \n            \n                \nonNewProductClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/seller/dashboard/dashboard.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  imports: [],\n  templateUrl: './dashboard.html',\n  styleUrl: './dashboard.css'\n})\nexport class Dashboard {\n  constructor(private router: Router) {}\n\n  goToMyProduct(){\n     console.log('Navigating to new product form');\n    this.router.navigate(['/products/myproduct']);\n  }\n\n  onNewProductClick(): void {\n    console.log('Navigating to new product form');\n    this.router.navigate(['/products/new']);\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    \n                \n            \n            Nouveau Produit\n        \n\n        \n        \n            \n                \n                    \n                        \n                            Tableau de bord\n                        Bienvenue ! Voici un aperçu de vos performances.\n                    \n                \n\n                \n                    \n                    \n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Produits\n                                            24\n                                            +2 ce mois\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir tous\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Commandes\n                                            12\n                                            +18% cette semaine\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir toutes\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Revenus\n                                            1,240.50 €\n                                            +12% ce mois\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir détails\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                                \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Visiteurs\n                                            1,024\n                                            +8% aujourd'hui\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir statistiques\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n\n                    \n                    \n                        \n                        \n                            \n                                \n                                    \n                                        Commandes récentes\n                                        Les 5 dernières commandes de vos produits\n                                        \n                                    \n                                    \n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        \n                                            \n                                                CMD-2023-0012\n                                                \n                                                    Livré\n                                                \n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            JD\n                                                        \n                                                        Jean Dupont\n                                                    \n                                                \n                                                \n                                                    \n                                                        \n                                                        \n                                                    \n                                                    23 Janvier 2023\n                                                \n                                            \n                                            \n                                                2 produits\n                                                89.90 €\n                                            \n                                        \n                                    \n                                    \n                                        \n                                            \n                                                CMD-2023-0011\n                                                \n                                                    En cours\n                                                \n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            SM\n                                                        \n                                                        Sophie Martin\n                                                    \n                                                \n                                                \n                                                    \n                                                        \n                                                        \n                                                    \n                                                    22 Janvier 2023\n                                                \n                                            \n                                            \n                                                1 produit\n                                                45.00 €\n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir toutes les commandes\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        Produits en rupture\n                                        Produits avec un stock inférieur à 5\n                                            unités\n                                    \n                                    \n                                        \n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        \n                                            \n                                                T-shirt Premium\n                                                \n                                                    2 restants\n                                                \n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                        \n                                                    \n                                                    19.99 €\n                                                \n                                                \n                                                    \n                                                    \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Gérer le stock\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n\n                    \n                    \n                        \n                            \n                                \n                                    Performances des ventes\n                                    Évolution des ventes sur les 30 derniers jours\n                                    \n                                \n                                \n                                    7j\n                                    30j\n                                    3m\n                                \n                            \n                        \n                        \n                            \n                                \n                                \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                \n                                \n                                \n                                    Lun\n                                    Mar\n                                    Mer\n                                    Jeu\n                                    Ven\n                                    Sam\n                                    Dim\n                                    Lun\n                                    Mar\n                                    Mer\n                                \n                            \n                            \n                                \n                                    €1,847\n                                    Total des ventes\n                                    +12.5%\n                                \n                                \n                                    47\n                                    Transactions\n                                    +8.2%\n                                \n                                \n                                    €39.3\n                                    Panier moyen\n                                    +3.8%\n                                \n                            \n                        \n                    \n\n                    \n                    \n                        \n                            \n                                \n                                    \n                                \n                            \n                            Ajouter un produit\n                            Créer un nouveau produit\n                        \n\n                        \n                            \n                                \n                                    \n                                    \n                                \n                            \n                            Nouvelle commande\n                            Créer une commande\n                        \n\n                        \n                            \n                                \n                                    \n                                \n                            \n                            Gérer clients\n                            Liste des clients\n                        \n\n                        \n                            \n                                \n                                    \n                                    \n                                \n                            \n                            Rapports\n                            Analyses détaillées\n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nouveau Produit                                                                                                                            Tableau de bord                        Bienvenue ! Voici un aperçu de vos performancesroduits                                            24                                            +2 ce mois                                                                                                                                                                                                                        Voir tousommandes                                            12                                            +18% cette semaine                                                                                                                                                                                                                        Voir toutes                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Revenus                                            1,240.50 €                                            +12% ce mois                                                                                                                                                                                                                        Voir détailsisiteurs                                            1,024                                            +8% aujourd\\'hui                                                                                                                                                                                                                        Voir statistiques                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Commandes récentes                                        Les 5 dernières commandes de vos produitsivré                                                                                                                                                                                                                                                                                                                                                                JD                                                                                                                Jean Dupont                                                                                                                                                                                                                                                                                                                                                                                                                                23 Janvier 2023                                                                                                                                                                                        2 produits                                                89.90 €                                                                                                                                                                                                                                                                                                CMD-2023-0011                                                                                                    En cours                                                                                                                                                                                                                                                                                                                                                                SM                                                                                                                Sophie Martin                                                                                                                                                                                                                                                                                                                                                                                                                                22 Janvier 2023                                                                                                                                                                                        1 produit                                                45.00 €                                                                                                                                                                                                                                                                    Voir toutes les commandes                                                                                                                                                                                                                                                                                                                                                                                                                                            Produits en rupture                                        Produits avec un stock inférieur à 5                                            unitésshirt Premium                                                                                                    2 restants                                                                                                                                                                                                                                                                                                                                                                                                                                                                    19.99 €érer le stock                                                                                                                                                                                                                                                                                                                                                                                                                                        Performances des ventes                                    Évolution des ventes sur les 30 derniers jours                                                                                                                                        7j                                    30j                                    3m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Lun                                    Mar                                    Mer                                    Jeu                                    Ven                                    Sam                                    Dim                                    Lun                                    Mar                                    Mer                                                                                                                                                            €1,847                                    Total des ventes                                    +12.5%                                                                                                    47                                    Transactions                                    +8.2%                                                                                                    €39.3                                    Panier moyen                                    +3.8%                                                                                                                                                                                                                                                                                                                                                                Ajouter un produit                            Créer un nouveau produit                                                                                                                                                                                                                                                                            Nouvelle commande                            Créer une commande                                                                                                                                                                                                                                        Gérer clients                            Liste des clients                                                                                                                                                                                                                                                                            Rapports                            Analyses détaillées                                                                                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Dashboard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/data-service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private dataSubject =  new BehaviorSubject(null);\n  public data$ = this.dataSubject.asObservable();\n\n  updateData(data: any) {\n    this.dataSubject.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuardService.html":{"url":"injectables/GuardService.html","title":"injectable - GuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guard-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guard-service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guard-service.ts:24\n                        \n                    \n\n\n            \n                \n                        Determines if a route can be activated.\nChecks user authentication and role-based access.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The activated route snapshot.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The router state snapshot.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                A boolean, UrlTree, Observable, or Promise indicating if the route can be activated.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable, of, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Guard service to protect routes based on user authentication status and role.\n * Implements the `CanActivate` interface to control access to routes.\n */\nexport class GuardService {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  /**\n   * Determines if a route can be activated.\n   * Checks user authentication and role-based access.\n   * @param route The activated route snapshot.\n   * @param state The router state snapshot.\n   * @returns A boolean, UrlTree, Observable, or Promise indicating if the route can be activated.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return this.authService.checkAuth().then(authenticated => {\n      if (!authenticated) {\n        return this.router.createUrlTree(['/auth'], {\n          queryParams: { returnUrl: state.url }\n        });\n      }\n\n      const user = this.authService.currentUser$(); // Supposons que cette méthode existe\n      const allowedRoutesForClient = ['/', '/profile'];\n\n      if (user?.role === 'CLIENT' && !allowedRoutesForClient.includes(state.url)) {\n        // Rediriger vers une page autorisée ou retourner false\n        return this.router.createUrlTree(['/']); // Ou return false;\n      }\n\n      return true;\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            uploadedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploadedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uploadedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaItem.html":{"url":"interfaces/MediaItem.html","title":"interface - MediaItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            uploadedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"image\" | \"video\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"image\" | \"video\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploadedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uploadedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Navbar.html":{"url":"components/Navbar.html","title":"component - Navbar","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Navbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./navbar.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                isSignIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSeller\n                            \n                            \n                                myProfile\n                            \n                            \n                                navigateAndSetActive\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSignIn\n                            \n                            \n                                onSignOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isSeller\n                        \n                    \n                \n            \n            \n                \nisSeller()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myProfile\n                        \n                    \n                \n            \n            \n                \nmyProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndSetActive\n                        \n                    \n                \n            \n            \n                \nnavigateAndSetActive(route: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSignIn\n                        \n                    \n                \n            \n            \n                \nonSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSignOut\n                        \n                    \n                \n            \n            \n                \nonSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSignIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, OnInit, signal, Signal } from '@angular/core';\nimport { User } from '../models/interfaces';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [],\n  templateUrl: './navbar.html',\n  styleUrl: './navbar.css'\n})\nexport class Navbar implements OnInit {\n  public currentUser = signal(null);\n  public isSignIn: Signal = signal(false);\n  constructor(private route: Router, private authService: AuthService) {\n    effect(() => {\n      const user = this.authService.currentUser$();\n      if (user) {\n        this.currentUser.set(user);\n      } else {\n        this.currentUser.set(null);\n      }\n    });\n  }\n  async ngOnInit() {\n    // Claim  the current user on authservice  signal\n    await this.authService.checkAuth()\n    this.isSignIn = this.authService.isSignIn$;\n    this.currentUser.set(this.authService.currentUser$());\n\n  }\n  onSignIn() {\n    this.route.navigate(['auth']);\n  }\n\n  myProfile() {\n    console.log('Navigating to profile');\n    // Navigate to the profile page\n    this.route.navigate(['profil']);\n  }\n\n  isSeller():boolean {\n    const user = this.currentUser();\n    return user?.role == 'SELLER'\n  }\n\n  onSignOut() {\n    this.authService.signOut();\n    this.route.navigate(['auth']);\n  }\n  navigateAndSetActive(route: string, event: Event) {\n    event.preventDefault();\n\n    // Supprimer la classe active de tous les liens\n    document.querySelectorAll('.navbar-link').forEach(link => {\n      link.classList.remove('active');\n    });\n\n    // Ajouter la classe active au lien cliqué\n    (event.target as HTMLElement).classList.add('active');\n\n    // Naviguer vers la route\n    this.route.navigate([route]);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n            \n        \n\n        \n        \n            \n                Catalogue\n            \n            @if (isSeller()) {\n            \n                Dashboard\n            \n            }\n        \n\n        \n        \n            \n            \n                ♡\n            \n\n            \n            \n                🛒\n                3\n            \n\n            \n            @if (!isSignIn()) {\n            \n                Sign In\n            \n            }@else {\n            \n                {{\n                    currentUser()?.name }}\n                \n                    Logout\n                \n            \n            }\n        \n\n        \n        \n            \n            \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Catalogue                        @if (isSeller()) {                            Dashboard                        }                                                                ♡                                                    🛒                3                                    @if (!isSignIn()) {                            Sign In                        }@else {                            {{                    currentUser()?.name }}                                    Logout                                        }                                                                        '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Navbar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrls\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sellerAvatar\n                                        \n                                \n                                \n                                        \n                                            sellerName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrls:         productImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         productImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductCard.html":{"url":"components/ProductCard.html","title":"component - ProductCard","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/products/product-card/product-card.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-card\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                CircularImage\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-card.html\n            \n\n\n\n            \n                styleUrl\n                ./product-card.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imageurls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                canHide\n                            \n                            \n                                deleteImage\n                            \n                            \n                                    Async\n                                goToUpdateProduct\n                            \n                            \n                                viewProductDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartEvent\n                            \n                            \n                                productIdEvent\n                            \n                            \n                                viewDetails\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    badgeText\n                                \n                                \n                                    badgeClass\n                                \n                                \n                                    stockStatusText\n                                \n                                \n                                    stockStatusClass\n                                \n                                \n                                    productPrice\n                                \n                                \n                                    productImageUrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(datasharedService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/products/product-card/product-card.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasharedService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        product\n                    \n                \n                \n                    \n                        Type :         Product\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:22\n                            \n                        \n                \n                    \n                        The product data to be displayed in the card.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addToCartEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:26\n                            \n                        \n                \n                    \n                        Emits the product object when the \"add to cart\" action is triggered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        productIdEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:28\n                            \n                        \n                \n                    \n                        Emits the product ID when an image deletion is requested.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewDetails\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:24\n                            \n                        \n                \n                    \n                        Emits the product ID when the \"view details\" action is triggered.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:124\n                        \n                    \n\n\n            \n                \n                        Emits the product object to indicate that the user wants to add it to the cart.\nPrevents event propagation to avoid triggering other click handlers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canHide\n                        \n                    \n                \n            \n            \n                \ncanHide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:132\n                        \n                    \n\n\n            \n                \n                        Determines if certain elements (e.g., update/delete buttons) should be hidden based on the current route.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the current path is '/products/myproduct', false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteImage\n                        \n                    \n                \n            \n            \n                \ndeleteImage(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:37\n                        \n                    \n\n\n            \n                \n                        Emits the product ID to signal a request to delete an image associated with the product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the image to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToUpdateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToUpdateProduct(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:141\n                        \n                    \n\n\n            \n                \n                        Navigates to the product update page, passing the current product data.\nPrevents event propagation to avoid triggering other click handlers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewProductDetails\n                        \n                    \n                \n            \n            \n                \nviewProductDetails(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:115\n                        \n                    \n\n\n            \n                \n                        Emits the product ID to indicate that the user wants to view product details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product whose details are to be viewed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imageurls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/products/product-card/product-card.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        badgeText\n                    \n                \n\n                \n                    \n                        getbadgeText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:46\n                                \n                            \n                    \n                        \n                                Computes a badge text based on product properties like creation date, quantity, and price.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        badgeClass\n                    \n                \n\n                \n                    \n                        getbadgeClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:62\n                                \n                            \n                    \n                        \n                                Computes the CSS class for the product badge based on its text.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stockStatusText\n                    \n                \n\n                \n                    \n                        getstockStatusText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:76\n                                \n                            \n                    \n                        \n                                Computes a human-readable stock status message based on the product's quantity.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stockStatusClass\n                    \n                \n\n                \n                    \n                        getstockStatusClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:86\n                                \n                            \n                    \n                        \n                                Computes the CSS class for the stock status based on the product's quantity.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        productPrice\n                    \n                \n\n                \n                    \n                        getproductPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:96\n                                \n                            \n                    \n                        \n                                Formats the product's price into a currency string (EUR, French locale).\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        productImageUrls\n                    \n                \n\n                \n                    \n                        getproductImageUrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:107\n                                \n                            \n                    \n                        \n                                Extracts an array of image URLs from the product's image objects.\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Product } from '../../models/interfaces';\nimport { CommonModule } from '@angular/common';\nimport { CircularImage } from \"../circular-image/circular-image\";\nimport { DataService } from '../../services/data-service';\nimport { Router } from '@angular/router';\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n  selector: 'app-product-card',\n  imports: [CommonModule, CircularImage, MatIconModule],\n  templateUrl: './product-card.html',\n  styleUrl: './product-card.css'\n})\n/**\n * Component for displaying a single product as a card.\n * Handles displaying product details, badges, stock status, and user interactions like\n * viewing details, adding to cart, and deleting images (for seller's own products).\n */\nexport class ProductCard {\n  /** The product data to be displayed in the card. */\n  @Input() product!: Product;\n  /** Emits the product ID when the \"view details\" action is triggered. */\n  @Output() viewDetails = new EventEmitter();\n  /** Emits the product object when the \"add to cart\" action is triggered. */\n  @Output() addToCartEvent = new EventEmitter();\n  /** Emits the product ID when an image deletion is requested. */\n  @Output() productIdEvent = new EventEmitter();\n  imageurls: string[] = [];\n\n  constructor(private datasharedService: DataService, private router: Router) { }\n\n  /**\n   * Emits the product ID to signal a request to delete an image associated with the product.\n   * @param id The ID of the image to be deleted.\n   */\n  deleteImage(id: string) {\n    console.log(\"emission du product id \",id)\n    this.productIdEvent.emit(this.product.id);\n  }\n\n  /**\n   * Computes a badge text based on product properties like creation date, quantity, and price.\n   * @returns A string representing the badge (e.g., 'Nouveau', 'Stock Limité', 'Promo', 'Premium').\n   */\n  get badgeText(): string {\n    const daysSinceCreation = Math.floor(\n      (new Date().getTime() - new Date(this.product.createdAt || 0).getTime()) / (1000 * 60 * 60 * 24)\n    );\n\n    if (daysSinceCreation  300) return 'Premium';\n    return '';\n  }\n\n  /**\n   * Computes the CSS class for the product badge based on its text.\n   * @returns A string representing the CSS class.\n   */\n  get badgeClass(): string {\n    switch (this.badgeText) {\n      case 'Nouveau': return 'badge-new';\n      case 'Stock Limité': return 'badge-limited';\n      case 'Promo': return 'badge-promo';\n      case 'Premium': return 'badge-premium';\n      default: return '';\n    }\n  }\n\n  /**\n   * Computes a human-readable stock status message based on the product's quantity.\n   * @returns A string indicating the stock status (e.g., 'Rupture de stock', 'Plus que X en stock', 'En stock').\n   */\n  get stockStatusText(): string {\n    if (this.product.quantity === 0) return 'Rupture de stock';\n    if (this.product.quantity  image.imagePath);\n  }\n\n  /**\n   * Emits the product ID to indicate that the user wants to view product details.\n   * @param productId The ID of the product whose details are to be viewed.\n   */\n  viewProductDetails(productId: string) {\n    this.viewDetails.emit(productId);\n  }\n\n  /**\n   * Emits the product object to indicate that the user wants to add it to the cart.\n   * Prevents event propagation to avoid triggering other click handlers.\n   * @param event The DOM event.\n   */\n  addToCart(event: Event) {\n    event.stopPropagation();\n    this.addToCartEvent.emit(this.product);\n  }\n  /**\n   * Determines if certain elements (e.g., update/delete buttons) should be hidden based on the current route.\n   * @returns True if the current path is '/products/myproduct', false otherwise.\n   */\n  canHide(): boolean {\n    return location.pathname === \"/products/myproduct\";\n  }\n\n  /**\n   * Navigates to the product update page, passing the current product data.\n   * Prevents event propagation to avoid triggering other click handlers.\n   * @param event The DOM event.\n   */\n  async goToUpdateProduct(event: Event) {\n    event.stopPropagation();\n    this.datasharedService.updateData(this.product);\n    // Correction de la navigation\n    await this.router.navigate([\"/products/update\"]);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    @if (product.imageUrls && product.imageUrls.length > 0) {\n    @if (product.imageUrls.length > 1) {\n     -->\n    \n     -->\n    } @else if (product.imageUrls.length === 1) {\n    \n    }\n    } @else {\n    \n    }\n    \n      {{ badgeText }}\n    \n  \n\n\n  \n  \n    {{ product.category }}\n    {{ product.name }}\n    {{ product.description }}\n\n    \n    \n      \n      {{ product.sellerName }}\n    \n\n    \n    \n      {{ stockStatusText }}\n    \n\n    \n    \n      {{ productPrice }}\n      @if (!canHide()) {\n      \n         0\">Ajouter\n        Indisponible\n      \n      } @else {\n      \n        View\n      \n      \n        Delete\n      \n\n      }\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        @if (product.imageUrls && product.imageUrls.length > 0) {    @if (product.imageUrls.length > 1) {     -->         -->    } @else if (product.imageUrls.length === 1) {        }    } @else {        }          {{ badgeText }}              {{ product.category }}    {{ product.name }}    {{ product.description }}                    {{ product.sellerName }}                  {{ stockStatusText }}                  {{ productPrice }}      @if (!canHide()) {               0\">Ajouter        Indisponible            } @else {              View                    Delete            }      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductCard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductFormData.html":{"url":"interfaces/ProductFormData.html","title":"interface - ProductFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            imageUrls\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sellerName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrls:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductManagement.html":{"url":"components/ProductManagement.html","title":"component - ProductManagement","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductManagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/seller/product-management/product-management.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-management\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./product-management.html\n            \n\n\n\n            \n                styleUrl\n                ./product-management.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-product-management',\n  imports: [],\n  templateUrl: './product-management.html',\n  styleUrl: './product-management.css'\n})\nexport class ProductManagement {\n\n}\n\n    \n\n    \n        product-management works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'product-management works!'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductManagement'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/product-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addImageInProduct\n                            \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                deleteImageInProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Private\n                                getHeaderToken\n                            \n                            \n                                getMyProduct\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                    Async\n                                retryOperation\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiUrl: ApiUrlService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/product-service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        ApiUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addImageInProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    addImageInProduct(id: string, formdata: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:223\n                        \n                    \n\n\n            \n                \n                        Adds one or more images to an existing product on the backend.\nProcesses files sequentially and reports individual and overall success/failure.\n         including details about uploaded and failed images.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to add images to.\n\n                                            \n                                        \n                                        \n                                                formdata\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    An array of File objects representing the images to upload.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure,\nincluding details about uploaded and failed images.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    addProduct(product: FormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:84\n                        \n                    \n\n\n            \n                \n                        Adds a new product to the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                        FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The FormData object containing product details and images.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteImageInProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteImageInProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:157\n                        \n                    \n\n\n            \n                \n                        Deletes an image associated with a product from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the image to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:302\n                        \n                    \n\n\n            \n                \n                        Deletes a product from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaderToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaderToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:71\n                        \n                    \n\n\n            \n                \n                        Retrieves the authentication token from local storage and formats it for HTTP headers.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The formatted authorization header string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyProduct\n                        \n                    \n                \n            \n            \n                \ngetMyProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:41\n                        \n                    \n\n\n            \n                \n                        Fetches products owned by the current authenticated user from the backend.\nRequires an authentication token.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Product objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:61\n                        \n                    \n\n\n            \n                \n                        Retrieves a product by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the product (TODO: Implement actual logic to return Product object).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:26\n                        \n                    \n\n\n            \n                \n                        Fetches all products from the backend.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Product objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        retryOperation\n                        \n                    \n                \n            \n            \n                \n                        \n                    retryOperation(operation: () => void, maxRetries: number, baseDelay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:371\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Utility method to retry an asynchronous operation with exponential backoff.\n         or rejects with the last error after all retries are exhausted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The asynchronous function to retry.\n\n                                            \n                                        \n                                        \n                                                maxRetries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    The maximum number of retry attempts. Defaults to 3.\n\n                                            \n                                        \n                                        \n                                                baseDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                            \n                                                    The base delay in milliseconds before the first retry. Defaults to 1000ms.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves with the result of the operation if successful,\nor rejects with the last error after all retries are exhausted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:121\n                        \n                    \n\n\n            \n                \n                        Updates an existing product on the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to update.\n\n                                            \n                                        \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Product object containing the updated details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiUrlService } from './api-url-service';\nimport { Product, ServiceResponse } from '../models/interfaces';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable, firstValueFrom, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { handleHttpError } from '../utils/utils';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for managing product-related operations, including fetching, adding, updating,\n * and deleting products and their associated images.\n */\nexport class ProductService {\n\n  constructor(private apiUrl: ApiUrlService, private http: HttpClient) { }\n\n  /**\n   * Fetches all products from the backend.\n   * @returns An Observable that emits an array of Product objects.\n   */\n  getProducts(): Observable {\n    console.log('Fetching products from:', this.apiUrl.GET_ALL_PRODUCTS);\n    return this.http.get(this.apiUrl.GET_ALL_PRODUCTS).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.error('Error fetching products:', error);\n        return throwError(() => handleHttpError(error));\n      })\n    );\n  }\n\n  /**\n   * Fetches products owned by the current authenticated user from the backend.\n   * Requires an authentication token.\n   * @returns An Observable that emits an array of Product objects.\n   */\n  getMyProduct(): Observable {\n    console.log('Fetching products from:', this.apiUrl.GET_MY_ALL_PRODUCT);\n    return this.http.get(this.apiUrl.GET_MY_ALL_PRODUCT, {\n      headers: {\n        'Authorization': this.getHeaderToken()\n      }\n    }).pipe(\n      catchError((error: HttpErrorResponse) => {\n        // const err  = error.error;\n        console.error('Test Error fetching my products:', error);\n        return throwError(() => handleHttpError(error));\n      })\n    );\n  }\n\n  /**\n   * Retrieves a product by its ID.\n   * @param id The ID of the product to retrieve.\n   * @returns A string representing the product (TODO: Implement actual logic to return Product object).\n   */\n  getProductById(id: number): string {\n    // TODO: Implémenter la vraie logique\n    return `Product ${id}`;\n  }\n\n  /**\n   * Retrieves the authentication token from local storage and formats it for HTTP headers.\n   * @returns The formatted authorization header string.\n   * @throws Error if no authentication token is found.\n   */\n  private getHeaderToken(): string {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found. Please log in again.');\n    }\n    return `Bearer ${token}`;\n  }\n\n  /**\n   * Adds a new product to the backend.\n   * @param product The FormData object containing product details and images.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async addProduct(product: FormData): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.http.post(this.apiUrl.CREATE_PRODUCT, product, {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          }\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error adding product:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Product added successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Product created successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in addProduct:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to create product'\n      };\n    }\n  }\n\n  /**\n   * Updates an existing product on the backend.\n   * @param id The ID of the product to update.\n   * @param product The Product object containing the updated details.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async updateProduct(id: string, product: Product): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.http.put(`${this.apiUrl.UPDATE_PRODUCT(id)}`, product, {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          }\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error updating product:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Product updated successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Product updated successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in updateProduct:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to update product'\n      };\n    }\n  }\n\n  /**\n   * Deletes an image associated with a product from the backend.\n   * @param id The ID of the image to delete.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async deleteImageInProduct(id: string): Promise {\n    try {\n      console.log('Deleting image:', this.apiUrl.DELETE_IMG_BY_Media_ID(id));\n\n      const response = await firstValueFrom(\n        this.http.delete(this.apiUrl.DELETE_IMG_BY_Media_ID(id), {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          },\n          observe: 'response'\n        }).pipe(\n          // Traitement des réponses réussies (200-299)\n          map((httpResponse: HttpResponse) => {\n            if (httpResponse.ok) {\n              return {\n                success: true,\n                data: httpResponse.body,\n                message: 'Image deleted successfully!'\n              };\n            }\n            console.log(\"effac\")\n            // Si le statut n'est pas dans la plage 200-299\n            return {\n              success: false,\n              error: `Unexpected status code: ${httpResponse.status}`,\n              status: httpResponse.status\n            };\n          }),\n          catchError((error: HttpErrorResponse) => {\n            if (error.status === 200) {\n              // cas où Angular considère à tort qu'il y a une erreur\n              return of({\n                success: true,\n                data: null,\n                message: 'Image deleted successfully (handled)'\n              });\n            }\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Image deleted successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Image deleted successfully!'\n      };\n\n    } catch (error: any) {\n      // Pour les autres erreurs\n      return {\n        success: false,\n        error: handleHttpError(error).message,\n      };\n    }\n  }\n\n  /**\n   * Adds one or more images to an existing product on the backend.\n   * Processes files sequentially and reports individual and overall success/failure.\n   * @param id The ID of the product to add images to.\n   * @param formdata An array of File objects representing the images to upload.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure,\n   *          including details about uploaded and failed images.\n   */\n  async addImageInProduct(id: string, formdata: File[]): Promise {\n    try {\n      console.log('Adding images to product:', this.apiUrl.ADD_IMG_BY_PRODUCT_ID(id));\n\n      const results: any[] = [];\n      const errors: string[] = [];\n\n      // Traitement séquentiel des fichiers\n      for (let index = 0; index  {\n                console.error(`Error uploading file ${file.name}:`, error);\n                return throwError(() => handleHttpError(error));\n              })\n            )\n          );\n\n          results.push({ file: file.name, response });\n          console.log(`Image ${file.name} uploaded successfully`);\n\n        } catch (error: any) {\n          const errorMsg = `Failed to upload ${file.name}: ${error.message}`;\n          errors.push(errorMsg);\n          console.error(errorMsg);\n        }\n\n        // Délai anti-spam\n        if (index  setTimeout(resolve, 100));\n        }\n      }\n\n      // Évaluation du résultat global\n      if (errors.length === 0) {\n        return {\n          success: true,\n          data: results,\n          message: `All ${formdata.length} image(s) uploaded successfully!`\n        };\n      } else if (results.length > 0) {\n        return {\n          success: false,\n          data: { uploaded: results, errors },\n          error: `${results.length}/${formdata.length} images uploaded. ${errors.length} failed: ${errors.join(', ')}`\n        };\n      } else {\n        return {\n          success: false,\n          error: `Failed to upload all images: ${errors.join(', ')}`\n        };\n      }\n\n    } catch (error: any) {\n      console.error('Error in addImageInProduct:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to upload images'\n      };\n    }\n  }\n\n\n\n\n  /**\n   * Deletes a product from the backend.\n   * @param id The ID of the product to delete.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async deleteProduct(id: string): Promise {\n    try {\n      console.log('Deleting image:', this.apiUrl.DELETE_PRODUCT_BY_ID(id));\n\n      const response = await firstValueFrom(\n        this.http.delete(this.apiUrl.DELETE_PRODUCT_BY_ID(id), {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          },\n          observe: 'response'\n        }).pipe(\n          // Traitement des réponses réussies (200-299)\n          map((httpResponse: HttpResponse) => {\n            if (httpResponse.ok) {\n              return {\n                success: true,\n                data: httpResponse.body,\n                message: 'Image deleted successfully!'\n              };\n            }\n            console.log(\"effac\")\n            // Si le statut n'est pas dans la plage 200-299\n            return {\n              success: false,\n              error: `Unexpected status code: ${httpResponse.status}`,\n              status: httpResponse.status\n            };\n          }),\n          catchError((error: HttpErrorResponse) => {\n            if (error.status === 200) {\n              // cas où Angular considère à tort qu'il y a une erreur\n              return of({\n                success: true,\n                data: null,\n                message: 'Image deleted successfully (handled)'\n              });\n            }\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Image deleted successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Image deleted successfully!'\n      };\n\n    } catch (error: any) {\n      // Pour les autres erreurs\n      return {\n        success: false,\n        error: handleHttpError(error).message,\n      };\n    }\n  }\n\n\n\n  /**\n   * Utility method to retry an asynchronous operation with exponential backoff.\n   * @template T The return type of the operation.\n   * @param operation The asynchronous function to retry.\n   * @param maxRetries The maximum number of retry attempts. Defaults to 3.\n   * @param baseDelay The base delay in milliseconds before the first retry. Defaults to 1000ms.\n   * @returns A Promise that resolves with the result of the operation if successful,\n   *          or rejects with the last error after all retries are exhausted.\n   */\n  async retryOperation(\n    operation: () => Promise,\n    maxRetries: number = 3,\n    baseDelay: number = 1000\n  ): Promise {\n    let lastError: any;\n\n    for (let attempt = 1; attempt  setTimeout(resolve, delay));\n      }\n    }\n\n    throw lastError;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceResponse.html":{"url":"interfaces/ServiceResponse.html","title":"interface - ServiceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignIn.html":{"url":"components/SignIn.html","title":"component - SignIn","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-in/sign-in.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-in\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                ToastError\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                avatarPreview\n                            \n                            \n                                canHide\n                            \n                            \n                                errorMessage\n                            \n                            \n                                isSignUp\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                messageLoggerEffect\n                            \n                            \n                                messageStatus\n                            \n                            \n                                selectedAvatarFile\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanAvatarInput\n                            \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Private\n                                handleAuthError\n                            \n                            \n                                    Private\n                                markAllFieldsAsTouched\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onAvatarSelected\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Private\n                                passwordMatchValidator\n                            \n                            \n                                toggle\n                            \n                            \n                                toggleMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-in/sign-in.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cleanAvatarInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    cleanAvatarInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:115\n                        \n                    \n\n\n            \n                \n                        Nettoie complètement l'avatar input et remet à zéro tous les états liés\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages(delay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:291\n                        \n                    \n\n\n            \n                \n                        Clears success and error messages after a specified delay.\nIf delay is 0, messages are cleared immediately.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    The time in milliseconds after which to clear the messages. Defaults to 0.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    createForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:101\n                        \n                    \n\n\n            \n                \n                        Initializes and returns the authentication form with its controls and validators.\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                The initialized FormGroup for the authentication form.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleAuthError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAuthError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:244\n                        \n                    \n\n\n            \n                \n                        Handles authentication errors by setting appropriate error messages based on the error status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The error object received from the authentication service.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markAllFieldsAsTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAllFieldsAsTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:280\n                        \n                    \n\n\n            \n                \n                        Marks all form fields as touched to trigger validation messages.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAvatarSelected\n                        \n                    \n                \n            \n            \n                \nonAvatarSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:63\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an avatar file.\nPerforms client-side validation and displays a preview of the selected image.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event triggered by the file input change.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:189\n                        \n                    \n\n\n            \n                \n                        Handles the form submission for both sign-in and sign-up.\nValidates the form, interacts with the authentication service, and manages UI state.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatchValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:175\n                        \n                    \n\n\n            \n                \n                        Custom validator to check if the 'password' and 'confirmPassword' fields match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The FormControl for 'confirmPassword'.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A validation error object if passwords do not match, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(even?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:139\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the avatar input based on the selected role.\nCleans the avatar input if switching to a role that doesn't require it (e.g., CLIENT).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                even\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Optional string indicating the role to toggle to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMode\n                        \n                    \n                \n            \n            \n                \ntoggleMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:153\n                        \n                    \n\n\n            \n                \n                        Toggles between sign-in and sign-up modes.\nAdjusts form validators and clears messages accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarPreview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | ArrayBuffer | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canHide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSignUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageLoggerEffect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : effect(() => {\n    console.log('DEBUG - Nouveau statut des messages d\\'authentification :', this.messageStatus());\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    error: this.errorMessage(),\n    success: this.successMessage()\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAvatarFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal, computed, effect } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { ToastError } from \"../../error/toast-error/toast-error\";\n\n@Component({\n  selector: 'app-sign-in',\n  imports: [CommonModule, ReactiveFormsModule, ToastError],\n  templateUrl: './sign-in.html',\n  styleUrl: './sign-in.css'\n})\n/**\n * Component for user sign-in and sign-up.\n * Manages authentication forms, user input, and interaction with the authentication service.\n */\nexport class SignIn implements OnInit {\n  authForm: FormGroup;\n  isSignUp = signal(false);\n  loading = signal(false);\n  avatarPreview: string | ArrayBuffer | null = null;\n  selectedAvatarFile!: File;\n  canHide = signal(true);\n\n  // Nouvelles propriétés pour la gestion d'état des messages\n  errorMessage = signal('');\n  successMessage = signal('');\n\n  // Computed pour créer l'objet de statut des messages\n  messageStatus = computed(() => ({\n    error: this.errorMessage(),\n    success: this.successMessage()\n  }));\n\n  // Effect pour logger les changements de messages (optionnel)\n  private messageLoggerEffect = effect(() => {\n    console.log('DEBUG - Nouveau statut des messages d\\'authentification :', this.messageStatus());\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.authForm = this.createForm();\n  }\n\n  async ngOnInit(): Promise {\n    // If the user is already signed in, redirect to home page\n    await this.authService.checkAuth();\n    if (this.authService.isSignIn$()) {\n      this.router.navigate(['/']);\n      return;\n    }\n  }\n\n  /**\n   * Handles the selection of an avatar file.\n   * Performs client-side validation and displays a preview of the selected image.\n   * @param event The DOM event triggered by the file input change.\n   */\n  onAvatarSelected(event: any) {\n    const file = event.target.files[0];\n\n    if (file && file instanceof File) {\n      console.log('Avatar input changed:', file);\n\n      // Validation\n      if (file.size > 5 * 1024 * 1024) { // 5MB max\n        this.errorMessage.set('File too large. Maximum size is 5MB.');\n        this.clearMessages(3000);\n        return;\n      }\n\n      if (!file.type.startsWith('image/')) {\n        this.errorMessage.set('Please select a valid image file.');\n        this.clearMessages(3000);\n        return;\n      }\n\n      // Stocker le fichier dans une propriété séparée\n      this.selectedAvatarFile = file;\n\n      // Prévisualisation\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.avatarPreview = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n\n      // Marquer le champ comme touché pour la validation\n      this.authForm.get('avatar')?.markAsTouched();\n    }\n  }\n\n  /**\n   * Initializes and returns the authentication form with its controls and validators.\n   * @returns The initialized FormGroup for the authentication form.\n   */\n  private createForm(): FormGroup {\n    return this.fb.group({\n      name: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: [''],\n      role: ['CLIENT', Validators.required],\n      avatar: [null]\n    });\n  }\n\n  /**\n   * Nettoie complètement l'avatar input et remet à zéro tous les états liés\n   */\n  private cleanAvatarInput(): void {\n    // Réinitialiser la valeur du FormControl\n    this.authForm.get('avatar')?.setValue(null);\n    this.authForm.get('avatar')?.markAsUntouched();\n    this.authForm.get('avatar')?.markAsPristine();\n\n    // Nettoyer les propriétés de prévisualisation\n    this.avatarPreview = null;\n    this.selectedAvatarFile = null as any;\n\n    // Optionnel : Nettoyer physiquement l'input file dans le DOM\n    const avatarInput = document.querySelector('input[type=\"file\"][formControlName=\"avatar\"]') as HTMLInputElement;\n    if (avatarInput) {\n      avatarInput.value = '';\n    }\n\n    console.log('Avatar input cleaned');\n  }\n\n  /**\n   * Toggles the visibility of the avatar input based on the selected role.\n   * Cleans the avatar input if switching to a role that doesn't require it (e.g., CLIENT).\n   * @param even Optional string indicating the role to toggle to.\n   */\n  toggle(even?: string) {\n    if (even != \"SELLER\") {\n      this.canHide.set(true);\n      return;\n    }\n    // Nettoyer l'avatar quand on passe en mode CLIENT\n    this.canHide.set(false);\n    this.cleanAvatarInput();\n  }\n\n  /**\n   * Toggles between sign-in and sign-up modes.\n   * Adjusts form validators and clears messages accordingly.\n   */\n  toggleMode(): void {\n    this.isSignUp.set(!this.isSignUp());\n    // Nettoyer les messages lors du changement de mode\n    this.clearMessages(0);\n\n    if (this.isSignUp()) {\n      this.authForm.get('name')?.setValidators([Validators.required]);\n      this.authForm.get('confirmPassword')?.setValidators([Validators.required, this.passwordMatchValidator.bind(this)]);\n    } else {\n      this.authForm.get('name')?.clearValidators();\n      this.authForm.get('confirmPassword')?.clearValidators();\n    }\n\n    this.authForm.get('name')?.updateValueAndValidity();\n    this.authForm.get('confirmPassword')?.updateValueAndValidity();\n  }\n\n  /**\n   * Custom validator to check if the 'password' and 'confirmPassword' fields match.\n   * @param control The FormControl for 'confirmPassword'.\n   * @returns A validation error object if passwords do not match, otherwise null.\n   */\n  private passwordMatchValidator(control: any): any {\n    const password = this.authForm?.get('password')?.value;\n    const confirmPassword = control.value;\n\n    if (password !== confirmPassword) {\n      return { mismatch: true };\n    }\n    return null;\n  }\n\n  /**\n   * Handles the form submission for both sign-in and sign-up.\n   * Validates the form, interacts with the authentication service, and manages UI state.\n   */\n  async onSubmit(): Promise {\n    // Validation du formulaire\n    if (this.authForm.invalid) {\n      this.markAllFieldsAsTouched();\n      this.errorMessage.set('Please fill in all required fields correctly.');\n      return;\n    }\n\n    this.loading.set(true);\n    this.errorMessage.set('');\n    this.successMessage.set('');\n\n    try {\n      const formData = this.authForm.value;\n\n      if (this.isSignUp()) {\n        // Inscription\n        await this.authService.signUp(formData, this.selectedAvatarFile);\n        \n        // Si on arrive ici, c'est que l'inscription a réussi\n        this.successMessage.set('Account created successfully! Please sign in.');\n        \n        // Petit délai pour que l'utilisateur voie le message de succès\n        setTimeout(() => {\n          this.toggleMode();\n          this.successMessage.set('');\n        }, 1500);\n\n      } else {\n        // Connexion\n        await this.authService.signIn(formData);\n        \n        // Si on arrive ici, c'est que la connexion a réussi\n        this.successMessage.set('Sign in successful! Redirecting...');\n        \n        // Petit délai pour que l'utilisateur voie le message de succès\n        setTimeout(() => {\n          this.router.navigate(['/']);\n        }, 1000);\n      }\n    } catch (error: any) {\n      console.error('Authentication error:', error);\n      \n      // Gestion spécifique des erreurs d'authentification\n      this.handleAuthError(error);\n      \n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  /**\n   * Handles authentication errors by setting appropriate error messages based on the error status.\n   * @param error The error object received from the authentication service.\n   */\n  private handleAuthError(error: any): void {\n    console.log(\"Error structure:\", error);\n    \n    // Gestion spécifique des erreurs selon le code de statut\n    if (error.status === 400) {\n      this.errorMessage.set('Invalid credentials provided. Please check your information.');\n    } else if (error.status === 401) {\n      this.errorMessage.set('Invalid email or password. Please try again.');\n    } else if (error.status === 403) {\n      this.errorMessage.set('Account access denied. Please contact support.');\n    } else if (error.status === 409) {\n      this.errorMessage.set('An account with this email already exists.');\n    } else if (error.status === 413) {\n      this.errorMessage.set('Avatar file is too large. Please select a smaller image.');\n    } else if (error.status === 422) {\n      this.errorMessage.set('Invalid file format. Please use JPG, PNG, or WebP images.');\n    } else if (error.status === 500) {\n      this.errorMessage.set('Server error. Please try again later.');\n    } else if (error.name === 'NetworkError' || !error.status) {\n      this.errorMessage.set('Network error. Please check your connection and try again.');\n    } else {\n      // Message d'erreur générique ou spécifique du serveur\n      this.errorMessage.set(\n        error?.error?.message || \n        error?.message || \n        'An unexpected error occurred. Please try again.'\n      );\n    }\n\n    // Auto-clear du message d'erreur après 5 secondes\n    this.clearMessages(5000);\n  }\n\n  /**\n   * Marks all form fields as touched to trigger validation messages.\n   */\n  private markAllFieldsAsTouched(): void {\n    Object.keys(this.authForm.controls).forEach(key => {\n      this.authForm.get(key)?.markAsTouched();\n    });\n  }\n\n  /**\n   * Clears success and error messages after a specified delay.\n   * If delay is 0, messages are cleared immediately.\n   * @param delay The time in milliseconds after which to clear the messages. Defaults to 0.\n   */\n  private clearMessages(delay: number = 0): void {\n    if (delay === 0) {\n      this.errorMessage.set('');\n      this.successMessage.set('');\n    } else {\n      setTimeout(() => {\n        this.errorMessage.set('');\n        this.successMessage.set('');\n      }, delay);\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n    \n\n    \n      \n      \n        \n          Sign In\n        \n        \n          Sign Up\n        \n      \n\n      \n        \n        \n          \n            \n          \n          \n            {{isSignUp() ? 'Create your account' : 'Welcome back!'}}\n          \n          \n            {{isSignUp() ? 'Join our marketplace today' : 'Sign in to continue to your account'}}\n          \n        \n\n        \n        \n          \n          @if(isSignUp() && !canHide()) {\n          \n            Profile Picture\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                  \n                  \n                    \n                      \n                      \n                      \n                    \n                  \n                \n                \n              \n            \n            Click to upload a profile picture (optional)\n            @if (authForm.get('avatar')?.invalid && authForm.get('avatar')?.touched) {\n            \n              Please select a valid image file\n            \n            }\n          \n          }\n          \n          @if(isSignUp()) {\n          \n            Full Name\n            \n            @if (authForm.get('name')?.invalid && authForm.get('name')?.touched) {\n            \n              Name is required\n            \n            }\n          \n          }\n\n          \n          \n            Email Address\n            \n            @if (authForm.get('email')?.invalid && authForm.get('email')?.touched) {\n            \n              @if (authForm.get('email')?.errors?.['required']) {\n              Email is required\n              }\n              @if (authForm.get('email')?.errors?.['email']) {\n              Please enter a valid email\n              }\n            \n            }\n          \n\n          \n          \n            Password\n            \n              \n              \n                \n                  \n                  \n                  \n                \n              \n            \n            @if (authForm.get('password')?.invalid && authForm.get('password')?.touched) {\n            \n              @if (authForm.get('password')?.errors?.['required']) {\n              Password is required\n              }\n              @if (authForm.get('password')?.errors?.['minlength']) {\n              Password must be at least 6 characters\n              }\n            \n            }\n          \n\n          \n          @if(isSignUp()) {\n          \n            Confirm Password\n            \n              \n              \n                \n                  \n                  \n                  \n                \n              \n            \n            @if (authForm.get('confirmPassword')?.invalid && authForm.get('confirmPassword')?.touched) {\n            \n              @if (authForm.get('confirmPassword')?.errors?.['required']) {\n              Please confirm your password\n              }\n              @if (authForm.get('confirmPassword')?.errors?.['mismatch']) {\n              Passwords do not match\n              }\n            \n            }\n          \n          }\n\n          \n          @if(isSignUp()) {\n          \n            Account Type\n            \n              \n                \n                \n                  \n                    \n                  \n                  Buyer\n                \n              \n              \n                \n                \n                  \n                    \n                    \n                  \n                  Seller\n                \n              \n            \n          \n          }\n\n          \n          @if(!isSignUp()) {\n          \n            \n              \n              \n                Remember me\n              \n            \n            \n              \n                Forgot password?\n              \n            \n          \n          }\n\n          \n          \n\n            \n            @if(loading()) {\n            \n              \n                \n                \n                \n              \n              {{isSignUp() ? 'Creating Account...' : 'Signing In...'}}\n            \n            }\n            @else {\n            \n              \n              \n              {{isSignUp() ? 'Create Account' : 'Sign In'}}\n            \n            }\n          \n        \n\n        \n        \n          \n            \n              \n            \n            \n              \n                Or continue with\n              \n            \n          \n\n          \n            \n              \n                \n                  \n                \n              \n            \n            \n              \n                \n                  \n                  \n                \n              \n            \n          \n        \n\n        \n        \n          Demo Credentials:\n          Email: seller&#64;demo.com | Password: password\n          Email: buyer&#64;demo.com | Password: password\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Sign In                          Sign Up                                                                                          {{isSignUp() ? \\'Create your account\\' : \\'Welcome back!\\'}}                                {{isSignUp() ? \\'Join our marketplace today\\' : \\'Sign in to continue to your account\\'}}                                                      @if(isSignUp() && !canHide()) {                      Profile Picture                                                                                                                                                                                                                                                                                                                                                                                  Click to upload a profile picture (optional)            @if (authForm.get(\\'avatar\\')?.invalid && authForm.get(\\'avatar\\')?.touched) {                          Please select a valid image file                        }                    }                    @if(isSignUp()) {                      Full Name                        @if (authForm.get(\\'name\\')?.invalid && authForm.get(\\'name\\')?.touched) {                          Name is required                        }                    }                                Email Address                        @if (authForm.get(\\'email\\')?.invalid && authForm.get(\\'email\\')?.touched) {                          @if (authForm.get(\\'email\\')?.errors?.[\\'required\\']) {              Email is required              }              @if (authForm.get(\\'email\\')?.errors?.[\\'email\\']) {              Please enter a valid email              }                        }                                          Password                                                                                                                                                                    @if (authForm.get(\\'password\\')?.invalid && authForm.get(\\'password\\')?.touched) {                          @if (authForm.get(\\'password\\')?.errors?.[\\'required\\']) {              Password is required              }              @if (authForm.get(\\'password\\')?.errors?.[\\'minlength\\']) {              Password must be at least 6 characters              }                        }                              @if(isSignUp()) {                      Confirm Password                                                                                                                                                                    @if (authForm.get(\\'confirmPassword\\')?.invalid && authForm.get(\\'confirmPassword\\')?.touched) {                          @if (authForm.get(\\'confirmPassword\\')?.errors?.[\\'required\\']) {              Please confirm your password              }              @if (authForm.get(\\'confirmPassword\\')?.errors?.[\\'mismatch\\']) {              Passwords do not match              }                        }                    }                    @if(isSignUp()) {                      Account Type                                                                                                                                    Buyer                                                                                                                                                                          Seller                                                              }                    @if(!isSignUp()) {                                                                  Remember me                                                                    Forgot password?                                              }                                            @if(loading()) {                                                                                                      {{isSignUp() ? \\'Creating Account...\\' : \\'Signing In...\\'}}                        }            @else {                                                      {{isSignUp() ? \\'Create Account\\' : \\'Sign In\\'}}                        }                                                                                                                            Or continue with                                                                                                                                                                                                                                                                                                                        Demo Credentials:          Email: seller@demo.com | Password: password          Email: buyer@demo.com | Password: password                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignIn'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastError.html":{"url":"components/ToastError.html","title":"component - ToastError","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/toast-error/toast-error.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast-error\n            \n\n\n            \n                imports\n                \n                            ProgressComponent\n                            ToasterComponent\n                            ToastComponent\n                            ToastHeaderComponent\n                                ToastSampleIconComponent\n                            ToastBodyComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast-error.html\n            \n\n\n\n            \n                styleUrl\n                ./toast-error.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasMessage\n                            \n                            \n                                messageType\n                            \n                            \n                                percentage\n                            \n                            \n                                position\n                            \n                            \n                                showToast\n                            \n                            \n                                toastDetail\n                            \n                            \n                                toastTitle\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onTimerChange\n                            \n                            \n                                onVisibleChange\n                            \n                            \n                                toggleToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentNotification\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentNotification\n                    \n                \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                        \n                            \n                                    Defined in src/app/error/toast-error/toast-error.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTimerChange\n                        \n                    \n                \n            \n            \n                \nonTimerChange($event: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVisibleChange\n                        \n                    \n                \n            \n            \n                \nonVisibleChange($event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleToast\n                        \n                    \n                \n            \n            \n                \ntoggleToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    return !!notification && (notification.error.length > 0 || notification.success.length > 0);\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'error';\n    } else if (notification?.success.length) {\n      return 'success';\n    }\n    return 'info'; // Ou un type par défaut\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'top-end'\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.visible() && this.hasMessage())\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toastDetail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return notification.error;\n    } else if (notification?.success.length) {\n      return notification.success;\n    }\n    return 'Aucune information.';\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toastTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'Something went wrong';\n    } else if (notification?.success.length) {\n      return 'Succès';\n    }\n    return 'Notification'; // Titre par défaut si aucun message spécifique\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, input, Input, OnInit, Signal, signal } from '@angular/core';\nimport { ButtonDirective, ProgressComponent, ToasterComponent, ToastComponent, ToastHeaderComponent, ToastBodyComponent } from '@coreui/angular';\nimport { ToastSampleIconComponent } from './toast-sample-icon-compenant';\n\n@Component({\n  selector: 'app-toast-error',\n  imports: [\n    ProgressComponent,\n    ToasterComponent,\n    ToastComponent,\n    ToastHeaderComponent,\n    ToastSampleIconComponent,\n    ToastBodyComponent],\n  templateUrl: './toast-error.html',\n  styleUrl: './toast-error.css'\n})\nexport class ToastError implements OnInit {\n\n  // L'Input recevra maintenant l'objet { error: string, success: string }\n  @Input() currentNotification: Signal = signal(undefined);\n\n  position = 'top-end';\n  visible = signal(false);\n  percentage = signal(0);\n\n  // Computed pour déterminer si un message (erreur ou succès) est présent\n  hasMessage = computed(() => {\n    const notification = this.currentNotification();\n    return !!notification && (notification.error.length > 0 || notification.success.length > 0);\n  });\n\n  // Computed pour le titre du toast\n  toastTitle = computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'Something went wrong';\n    } else if (notification?.success.length) {\n      return 'Succès';\n    }\n    return 'Notification'; // Titre par défaut si aucun message spécifique\n  });\n\n  // Computed pour le détail/corps du toast\n  toastDetail = computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return notification.error;\n    } else if (notification?.success.length) {\n      return notification.success;\n    }\n    return 'Aucune information.';\n  });\n\n  // Computed pour déterminer le type de message (pour l'icône ou le style)\n  messageType = computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'error';\n    } else if (notification?.success.length) {\n      return 'success';\n    }\n    return 'info'; // Ou un type par défaut\n  });\n\n  ngOnInit(): void {\n    if(this.hasMessage()){\n    this.visible.set(true);\n\n    }\n  }\n\n  // Computed final pour contrôler la visibilité du toast\n  // Le toast est visible si notre signal `visible` est vrai ET si `hasMessage` est vrai\n  showToast = computed(() => this.visible() && this.hasMessage());\n\n\n  // Méthode pour ouvrir/fermer le toast\n  toggleToast() {\n    this.visible.update((value) => !value);\n  }\n\n  onVisibleChange($event: boolean) {\n    this.visible.set($event);\n    this.percentage.set(this.visible() ? this.percentage() : 0);\n  }\n\n  onTimerChange($event: number) {\n    this.percentage.set($event * 25);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{toastTitle()}}\n    \n    \n      {{toastDetail()}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{toastTitle()}}              {{toastDetail()}}            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastError'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastSampleIconComponent.html":{"url":"components/ToastSampleIconComponent.html","title":"component - ToastSampleIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastSampleIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/toast-error/toast-sample-icon-compenant.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toast-sample-icon\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n            \n                template\n                \n    \n  \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'toast-sample-icon',\n  template: `\n    \n  `,\n  standalone: true\n})\nexport class ToastSampleIconComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastSampleIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateForm.html":{"url":"components/UpdateForm.html","title":"component - UpdateForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/update-form/update-form.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-form\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogActions\n                            MatDialogModule\n                            FormsModule\n                            ReactiveFormsModule\n                            MatInputModule\n                            MatSelectModule\n                            MatOptionModule\n                            MatButtonModule\n                            MatIcon\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./update-form.html\n            \n\n\n\n            \n                styleUrl\n                ./update-form.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                previewUrl\n                            \n                            \n                                selectedFile\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitials\n                            \n                            \n                                onCancel\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                onSave\n                            \n                            \n                                onUpload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, fb: FormBuilder, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/update-form/update-form.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previewUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | ArrayBuffer | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Inject, Input, Output, signal } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogActions, MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { MatIcon } from '@angular/material/icon';\nimport { User } from '../../models/interfaces';\n\n@Component({\n  selector: 'app-update-form',\n  imports: [\n    CommonModule,\n    MatDialogActions,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatButtonModule,\n    MatIcon\n  ],\n  templateUrl: './update-form.html',\n  styleUrl: './update-form.css'\n})\nexport class UpdateForm {\n  user = signal(null);\n  selectedFile: File | null = null;\n  previewUrl: string | ArrayBuffer | null = null;\n  authForm: FormGroup;\n \n  constructor(\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: { user: User } // Injection des données\n  ) {\n    // Si des données utilisateur sont passées, les assigner au formulaire\n     this.authForm = this.fb.group({\n      avatar: [null],\n      name: [data.user?.name || ''],\n      email: [data.user?.email || ''],\n      password: [data.user?.password || '']\n    });\n    this.user.set(data.user);\n    // Prévisualisation de l'avatar\n    if (data.user.avatar) {\n      this.previewUrl = data.user.avatar;\n    }\n\n  }\n\n\n  getInitials(name: string): string {\n    if (!name) return '';\n    const parts = name.split(' ');\n    if (parts.length === 1) {\n      return parts[0].charAt(0).toUpperCase();\n    }\n    return (parts[0].charAt(0) + parts[parts.length - 1].charAt(0)).toUpperCase();\n  }\n\n  onFileSelected(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      this.selectedFile = file;\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  onUpload(): void {\n    this.dialogRef.close(this.selectedFile);\n  }\n\n  onSave(): void {\n    if (this.authForm.invalid) {\n      return;\n    }\n\n    const formData = new FormData();\n   let userData = {\n      name: this.authForm.get('name')?.value,\n      email: this.authForm.get('email')?.value,\n      role: this.authForm.get('role')?.value,\n      password: this.authForm.get('password')?.value\n    };\n    formData.append('data', new Blob([JSON.stringify(userData)], { type: 'application/json' }));\n\n    if (this.selectedFile) {\n      formData.append('avatar', this.selectedFile);\n    }\n\n    // Ferme le dialogue et renvoie les données\n    this.dialogRef.close(formData);\n    // Supprimez this.onCancel() car dialogRef.close() suffit\n  }\n\n  onCancel(): void {\n    // Ferme le dialogue sans renvoyer de données\n    this.dialogRef.close();\n    // Supprimez this.cancel.emit()\n  }\n}\n    \n\n    \n        \n    \n        \n       @if (user().role === 'SELLER') {\n         \n             \n                 \n                     \n                         \n                             \n                                 \n                                     \n                                 \n                             \n                             \n                         \n                         \n                     \n\n                     \n                         \n                             Veuillez sélectionner une image valide (JPEG, PNG)\n                         \n                     \n                 \n             \n         \n       }\n        \n        \n            \n                person_outline\n                Informations personnelles\n            \n            \n                \n                    \n                        \n                        person\n                    \n                \n\n                \n                    \n                        \n                        lock\n                    \n                \n            \n        \n\n    \n        close\n        Annuler\n    \n    \n        save\n        Enregistrer\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   @if (user().role === \\'SELLER\\') {                                                                                                                                                                                                                                                                                                                                                                                                                                     Veuillez sélectionner une image valide (JPEG, PNG)                                                                                            }                                            person_outline                Informations personnelles                                                                                                            person                                                                                                                        lock                                                                    close        Annuler                save        Enregistrer    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadProgress.html":{"url":"interfaces/UploadProgress.html","title":"interface - UploadProgress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadProgress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            progress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"CLIENT\" | \"SELLER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"CLIENT\" | \"SELLER\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkNetworkConnection\n                            \n                            \n                                    Private\n                                getAuthHeaders\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Private\n                                getCurrentUserId\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                getProfileAsync\n                            \n                            \n                                    Private\n                                getToken\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                retryOperation\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Private\n                                validateImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiUrl: ApiUrlService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        ApiUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkNetworkConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkNetworkConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:347\n                        \n                    \n\n\n            \n                \n                        Méthode utilitaire pour vérifier la connexion réseau\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:256\n                        \n                    \n\n\n            \n                \n                        Génère les en-têtes d'authentification\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                HttpHeaders\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:239\n                        \n                    \n\n\n            \n                \n                        Obtient l'utilisateur actuellement connecté\n\n\n                        \n                            Returns :         User | null\n\n                        \n                            \n                                User | null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:247\n                        \n                    \n\n\n            \n                \n                        Obtient l'ID de l'utilisateur actuel\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                string | null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:29\n                        \n                    \n\n\n            \n                \n                        Récupère le profil de l'utilisateur connecté (Observable - pour les composants réactifs)\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfileAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileAsync()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:45\n                        \n                    \n\n\n            \n                \n                        Récupère le profil de l'utilisateur connecté (Promise - pour les appels async/await)\n\n\n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                Promise>\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:272\n                        \n                    \n\n\n            \n                \n                        Récupère le token d'authentification\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                string | null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:231\n                        \n                    \n\n\n            \n                \n                        Vérifie si l'utilisateur est connecté\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:221\n                        \n                    \n\n\n            \n                \n                        Déconnecte l'utilisateur et nettoie les données\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        retryOperation\n                        \n                    \n                \n            \n            \n                \n                        \n                    retryOperation(operation: () => void, maxRetries: number, baseDelay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:316\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Méthode utilitaire pour retry avec backoff exponentiel\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOpération à retry\n\n\n                                            \n                                        \n                                        \n                                                maxRetries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nNombre maximum de tentatives\n\n\n                                            \n                                        \n                                        \n                                                baseDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                            \n                                                    \nDélai de base en ms\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAvatar(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:127\n                        \n                    \n\n\n            \n                \n                        Met à jour l'avatar de l'utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFichier image pour l'avatar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(user: Partial, userId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:82\n                        \n                    \n\n\n            \n                \n                        Met à jour le profil utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes données utilisateur à mettre à jour\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nID de l'utilisateur (optionnel)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                Promise>\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateImageFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateImageFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:281\n                        \n                    \n\n\n            \n                \n                        Valide le format et la taille du fichier image\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFichier à valider\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                : boolean, error?: string}\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError, firstValueFrom } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ApiUrlService } from './api-url-service';\nimport { User, ServiceResponse } from '../models/interfaces';\nimport { handleHttpError } from '../utils/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for managing user-related operations, including profile management,\n * authentication status, and avatar updates.\n */\nexport class UserService {\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n\n  constructor(\n    private apiUrl: ApiUrlService,\n    private http: HttpClient\n  ) {}\n\n  /**\n   * Récupère le profil de l'utilisateur connecté (Observable - pour les composants réactifs)\n   * @returns Observable\n   */\n  getProfile(): Observable {\n    return this.http.get(this.apiUrl.GET_CURRENT_USER, {\n      headers: this.getAuthHeaders()\n    }).pipe(\n      tap((user:any) => this.currentUserSubject.next(user)),\n      catchError((error: HttpErrorResponse) => {\n        console.error('Error fetching user profile:', error);\n        return throwError(() => handleHttpError(error));\n      })\n    );\n  }\n\n  /**\n   * Récupère le profil de l'utilisateur connecté (Promise - pour les appels async/await)\n   * @returns Promise>\n   */\n  async getProfileAsync(): Promise> {\n    try {\n      const user : any = await firstValueFrom(\n        this.http.get(this.apiUrl.GET_CURRENT_USER, {\n          headers: this.getAuthHeaders()\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error fetching user profile:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      this.currentUserSubject.next(user);\n      console.log('User profile fetched successfully:', user);\n      \n      return {\n        success: true,\n        data: user,\n        message: 'Profile loaded successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in getProfileAsync:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to load profile'\n      };\n    }\n  }\n\n  /**\n   * Met à jour le profil utilisateur\n   * @param user - Les données utilisateur à mettre à jour\n   * @param userId - ID de l'utilisateur (optionnel)\n   * @returns Promise>\n   */\n  async updateProfile(user: Partial, userId?: string): Promise> {\n    try {\n      const id = userId || this.getCurrentUserId();\n      \n      if (!id) {\n        return {\n          success: false,\n          error: 'User ID not found. Please log in again.'\n        };\n      }\n\n      const updatedUser :any = await firstValueFrom(\n        this.http.put(this.apiUrl.UPDATE_USER(userId!), user, {\n          headers: this.getAuthHeaders()\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error updating user profile:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      this.currentUserSubject.next(updatedUser);\n      console.log('User profile updated successfully:', updatedUser);\n      \n      return {\n        success: true,\n        data: updatedUser,\n        message: 'Profile updated successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in updateProfile:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to update profile'\n      };\n    }\n  }\n\n  /**\n   * Met à jour l'avatar de l'utilisateur\n   * @param file - Fichier image pour l'avatar\n   * @returns Promise\n   */\n  async updateAvatar(file: File): Promise {\n    try {\n      // Validation côté client\n      const validationResult = this.validateImageFile(file);\n      if (!validationResult.isValid) {\n        return {\n          success: false,\n          error: validationResult.error\n        };\n      }\n\n      const formData = new FormData();\n      formData.append('avatar', file);\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${this.getToken()}`\n      });\n\n      const response = await firstValueFrom(\n        this.http.put(this.apiUrl.UPDATE_AVATAR, formData, { headers }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error updating avatar:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Avatar updated successfully:', response);\n      \n      return {\n        success: true,\n        data: response,\n        message: 'Avatar updated successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in updateAvatar:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to update avatar'\n      };\n    }\n  }\n\n  /**\n   * Changes the user's password.\n   * @param currentPassword The user's current password.\n   * @param newPassword The new password to set.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  // This method is commented out in the original file, so I will keep it commented out.\n  // async changePassword(currentPassword: string, newPassword: string): Promise {\n  //   // Implementation for changing password\n  // }\n\n  // /**\n  //  * Supprime le compte utilisateur\n  //  * @returns Promise\n  //  */\n  // async deleteAccount(): Promise {\n  //   try {\n  //     const response = await firstValueFrom(\n  //       this.http.delete(this.apiUrl.DELETE_USER, {\n  //         headers: this.getAuthHeaders()\n  //       }).pipe(\n  //         catchError((error: HttpErrorResponse) => {\n  //           console.error('Error deleting account:', error);\n  //           return throwError(() => handleHttpError(error));\n  //         })\n  //       )\n  //     );\n\n  //     // Nettoyer les données locales après suppression\n  //     this.logout();\n  //     console.log('Account deleted successfully');\n      \n  //     return {\n  //       success: true,\n  //       data: response,\n  //       message: 'Account deleted successfully!'\n  //     };\n\n  //   } catch (error: any) {\n  //     console.error('Error in deleteAccount:', error);\n  //     return {\n  //       success: false,\n  //       error: error.message || 'Failed to delete account'\n  //     };\n  //   }\n  // }\n\n  /**\n   * Déconnecte l'utilisateur et nettoie les données\n   */\n  logout(): void {\n    this.currentUserSubject.next(null);\n    localStorage.removeItem('token');\n    console.log('User logged out successfully');\n  }\n\n  /**\n   * Vérifie si l'utilisateur est connecté\n   * @returns boolean\n   */\n  isLoggedIn(): boolean {\n    return !!this.getToken();\n  }\n\n  /**\n   * Obtient l'utilisateur actuellement connecté\n   * @returns User | null\n   */\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Obtient l'ID de l'utilisateur actuel\n   * @returns string | null\n   */\n  private getCurrentUserId(): string | null {\n    const currentUser = this.getCurrentUser();\n    return currentUser?.id || null;\n  }\n\n  /**\n   * Génère les en-têtes d'authentification\n   * @returns HttpHeaders\n   */\n  private getAuthHeaders(): HttpHeaders {\n    const token = this.getToken();\n    if (!token) {\n      throw new Error('No authentication token found. Please log in again.');\n    }\n    \n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  /**\n   * Récupère le token d'authentification\n   * @returns string | null\n   */\n  private getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  /**\n   * Valide le format et la taille du fichier image\n   * @param file - Fichier à valider\n   * @returns {isValid: boolean, error?: string}\n   */\n  private validateImageFile(file: File): {isValid: boolean, error?: string} {\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    \n    if (!allowedTypes.includes(file.type)) {\n      return {\n        isValid: false,\n        error: 'Invalid file format. Please use JPG, PNG, GIF, or WebP.'\n      };\n    }\n    \n    if (file.size > maxSize) {\n      return {\n        isValid: false,\n        error: 'File is too large. Maximum size is 5MB.'\n      };\n    }\n    \n    if (file.size === 0) {\n      return {\n        isValid: false,\n        error: 'File is empty. Please select a valid image.'\n      };\n    }\n    \n    return { isValid: true };\n  }\n\n  /**\n   * Méthode utilitaire pour retry avec backoff exponentiel\n   * @param operation - Opération à retry\n   * @param maxRetries - Nombre maximum de tentatives\n   * @param baseDelay - Délai de base en ms\n   * @returns Promise\n   */\n  async retryOperation(\n    operation: () => Promise, \n    maxRetries: number = 3, \n    baseDelay: number = 1000\n  ): Promise {\n    let lastError: any;\n    \n    for (let attempt = 1; attempt  setTimeout(resolve, delay));\n      }\n    }\n    \n    throw lastError;\n  }\n\n  /**\n   * Méthode utilitaire pour vérifier la connexion réseau\n   * @returns Promise\n   */\n  async checkNetworkConnection(): Promise {\n    try {\n      const response = await fetch('/api/health', { \n        method: 'HEAD',\n        cache: 'no-cache'\n      });\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/sign-in/sign-in.ts\n            \n            component\n            SignIn\n            \n                43 %\n                (10/23)\n            \n        \n        \n            \n                \n                src/app/error/toast-error/toast-error.ts\n            \n            component\n            ToastError\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/error/toast-error/toast-sample-icon-compenant.ts\n            \n            component\n            ToastSampleIconComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            AuthFormData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            MediaFile\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            MediaItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            ProductFormData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            productImage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            ServiceResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            UploadProgress\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.ts\n            \n            component\n            Navbar\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/products/circular-image/carroussel.config.ts\n            \n            injectable\n            CarouselCustomConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/products/circular-image/circular-image.ts\n            \n            component\n            CircularImage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/products/product-card/product-card.ts\n            \n            component\n            ProductCard\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/products/product-list/product-list.ts\n            \n            component\n            ProductList\n            \n                48 %\n                (17/35)\n            \n        \n        \n            \n                \n                src/app/profile/profile.ts\n            \n            component\n            Profile\n            \n                68 %\n                (17/25)\n            \n        \n        \n            \n                \n                src/app/profile/update-form/update-form.ts\n            \n            component\n            UpdateForm\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/seller/dashboard/dashboard.ts\n            \n            component\n            Dashboard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/seller/form-product/form-product.ts\n            \n            component\n            FormProduct\n            \n                42 %\n                (17/40)\n            \n        \n        \n            \n                \n                src/app/seller/product-management/product-management.ts\n            \n            component\n            ProductManagement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api-url-service.ts\n            \n            injectable\n            ApiUrlService\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/services/data-service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/guard-service.ts\n            \n            injectable\n            GuardService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/product-service.ts\n            \n            injectable\n            ProductService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/services/user-service.ts\n            \n            injectable\n            UserService\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                        src/app/utils/utils.ts\n            \n            function\n            handleHttpError\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.1.3\n        \n            @angular/common : 20.1.4\n        \n            @angular/compiler : 20.1.4\n        \n            @angular/core : 20.1.4\n        \n            @angular/forms : 20.1.4\n        \n            @angular/material : ^20.1.4\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @coreui/angular : ^5.5.6\n        \n            @coreui/coreui : ^5.4.1\n        \n            @coreui/icons-angular : ^5.5.6\n        \n            @ngneat/tailwind : ^7.0.3\n        \n            @primeuix/themes : ^1.2.3\n        \n            @tailwindcss/postcss : ^4.1.10\n        \n            gsap : ^3.13.0\n        \n            primeng : ^20.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleHttpError   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleHttpError\n                        \n                    \n                \n            \n            \n                \nhandleHttpError(error: HttpErrorResponse)\n                \n            \n\n\n\n\n            \n                \n                        Handles HTTP errors by generating a user-friendly error message based on the HTTP status code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HttpErrorResponse object received from an HTTP request.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Error\n\n                        \n                            \n                                An Error object containing a descriptive error message.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEComerce\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/productImage.html":{"url":"interfaces/productImage.html","title":"interface - productImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  productImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imagePath\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimationsAsync(),\n    provideAnimations(),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
