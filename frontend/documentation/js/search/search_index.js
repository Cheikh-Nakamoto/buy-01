var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiUrlService.html",[0,0.921,1,1.813]],["body/injectables/ApiUrlService.html",[0,0.947,1,1.865,2,1.041,3,0.2,4,0.176,5,0.176,6,5.427,7,1.664,8,1.227,9,0.176,10,0.421,11,6.85,12,4.13,13,1.643,14,4.13,15,4.13,16,4.13,17,4.13,18,4.13,19,4.13,20,4.13,21,4.13,22,4.13,23,4.13,24,4.13,25,4.13,26,4.13,27,4.178,28,4.13,29,4.13,30,4.13,31,4.13,32,1.527,33,1.78,34,3.414,35,1.771,36,1.903,37,0.029,38,4.441,39,6.707,40,3.404,41,1.155,42,0.792,43,1.762,44,1.792,45,0.498,46,1.155,47,0.176,48,1.01,49,3.414,50,1.891,51,3.414,52,2.246,53,2.519,54,1.175,55,2.246,56,3.976,57,4.613,58,2.246,59,1.891,60,0.976,61,4.962,62,3.414,63,2.246,64,3.404,65,3.414,66,2.246,67,3.414,68,3.414,69,2.246,70,3.414,71,2.254,72,3.404,73,1.093,74,3.414,75,2.246,76,2.875,77,2.52,78,2.246,79,2.246,80,1.507,81,3.884,82,5.431,83,2.246,84,1.891,85,4.613,86,1.322,87,3.414,88,1.891,89,3.414,90,2.246,91,2.875,92,3.414,93,2.246,94,1.835,95,0.881,96,2.246,97,2.246,98,0.2,99,0.176,100,1.227,101,1.128,102,1.041,103,1.658,104,1.891,105,1.891,106,2.246,107,2.246,108,1.658,109,4.962,110,0.2,111,0.539,112,2.246,113,1.658,114,2.246,115,1.227,116,1.891,117,1.891,118,2.934,119,0.819,120,2.246,121,2.246,122,2.246,123,2.246,124,2.246,125,2.246,126,2.246,127,2.246,128,2.246,129,2.246,130,0.014,131,0.014]],["title/components/App.html",[132,0.538,133,1.141]],["body/components/App.html",[3,0.375,4,0.33,5,0.33,9,0.33,10,0.653,33,1.17,35,1.17,36,1.257,37,0.028,42,0.714,45,0.471,47,0.33,48,0.743,73,1.35,94,1.35,98,0.515,99,0.33,101,2.658,110,0.375,111,1.012,130,0.022,131,0.022,132,0.938,133,2.356,134,1.821,135,1.559,136,1.678,137,1.678,138,3.55,139,1.678,140,2.706,141,2.271,142,5.294,143,1.991,144,2.271,145,5.294,146,2.271,147,5.294,148,5.787,149,4.872,150,3.906,151,5.294,152,4.217,153,1.954,154,4.217,155,4.217,156,1.678,157,2.107,158,2.107,159,1.678,160,2.415,161,1.678,162,1.678,163,1.451,164,1.678,165,1.678,166,1.451,167,1.678,168,1.559,169,1.958,170,1.678,171,1.678,172,1.451,173,1.678,174,1.559,175,1.678,176,1.451,177,1.678,178,1.678,179,1.35,180,1.559,181,1.678,182,1.451,183,2.107,184,1.678,185,1.451,186,1.559,187,1.678,188,1.451,189,1.559,190,1.678]],["title/interfaces/AuthFormData.html",[191,0.451,192,0.989]],["body/interfaces/AuthFormData.html",[3,0.338,4,0.298,5,0.432,7,1.278,9,0.298,10,0.611,37,0.028,41,0.784,42,0.469,43,1.563,45,0.577,46,1.022,47,0.495,48,1.229,60,0.819,80,1.68,86,1.216,95,0.98,98,0.338,99,0.298,110,0.586,119,1.517,130,0.02,131,0.02,191,0.895,192,1.476,193,1.306,194,1.306,195,1.185,196,2.008,197,1.68,198,1.68,199,1.74,200,1.74,201,0.911,202,1.831,203,2.083,204,1.216,205,1.404,206,1.585,207,1.831,208,1.703,209,1.831,210,1.703,211,1.703,212,1.585,213,1.831,214,1.404,215,1.404,216,1.404,217,1.306,218,1.216,219,1.216,220,1.216,221,1.404,222,1.404,223,1.188,224,1.227,225,1.132,226,1.132,227,0.911,228,1.188,229,0.846,230,0.98,231,0.911,232,1.054]],["title/interfaces/AuthResponse.html",[191,0.451,225,0.989]],["body/interfaces/AuthResponse.html",[3,0.351,4,0.309,5,0.439,7,1.309,9,0.309,10,0.626,37,0.028,41,0.814,42,0.486,43,1.581,45,0.558,46,1.047,47,0.464,48,1.228,60,0.961,80,1.407,86,1.262,95,1.017,98,0.351,99,0.309,110,0.59,119,1.53,130,0.021,131,0.021,191,0.9,192,1.175,193,1.356,194,1.356,195,0.968,196,1.356,197,1.407,198,1.407,199,1.512,200,1.512,201,0.946,202,1.876,203,2.107,204,1.262,205,1.458,206,1.624,207,1.876,208,1.745,209,1.876,210,1.745,211,1.745,212,1.624,213,1.876,214,1.458,215,1.458,216,1.458,217,1.356,218,1.262,219,1.262,220,1.262,221,1.458,222,1.458,223,1.217,224,1.249,225,1.512,226,1.765,227,0.946,228,1.217,229,0.878,230,1.017,231,0.946,232,1.094]],["title/injectables/AuthService.html",[0,0.921,233,1.813]],["body/injectables/AuthService.html",[0,0.922,1,2.816,2,1.005,3,0.193,4,0.17,5,0.488,7,0.56,9,0.17,10,0.41,13,2.135,27,3.814,32,0.802,33,1.574,35,1.257,36,1.536,37,0.029,38,3.541,41,0.686,44,1.294,45,0.403,46,0.686,47,0.434,54,1.845,60,0.925,71,2.194,72,2.982,77,2.669,80,1.121,91,4.113,95,1.385,98,0.477,99,0.17,100,1.185,101,1.089,102,1.872,105,1.826,108,2.453,110,0.193,111,0.52,117,1.826,118,2.029,130,0.014,131,0.014,169,1.806,179,1.064,180,2.142,192,1.599,195,1.024,197,1.121,198,0.602,201,0.52,223,0.52,224,1.347,225,0.647,226,1.726,227,0.97,228,1.361,229,1.29,233,1.816,234,1.826,235,4.885,236,3.082,237,2.982,238,4.113,239,3.403,240,1.39,241,3.1,242,4.53,243,4.53,244,3.324,245,2.169,246,3.403,247,2.475,248,3.324,249,2.169,250,3.814,251,3.657,252,2.475,253,3.324,254,4.041,255,3.343,256,3.324,257,1.988,258,3.324,259,3.324,260,1.772,261,3.574,262,3.803,263,2.434,264,3.574,265,3.604,266,3.324,267,2.169,268,3.324,269,4.53,270,2.799,271,2.99,272,3.324,273,4.885,274,3.343,275,2.169,276,3.324,277,2.799,278,3.324,279,2.982,280,3.403,281,3.324,282,3.324,283,3.324,284,5.534,285,2.169,286,3.324,287,4.113,288,2.453,289,1.6,290,2.453,291,3.324,292,2.799,293,2.194,294,2.169,295,3.324,296,2.169,297,2.453,298,2.169,299,3.324,300,1.6,301,1.432,302,1.185,303,1.432,304,1.826,305,1.6,306,1.089,307,1.297,308,1.6,309,2.169,310,1.432,311,2.169,312,1.6,313,1.826,314,1.6,315,2.169,316,1.185,317,2.799,318,3.324,319,2.169,320,2.169,321,2.169,322,2.169,323,2.668,324,3.403,325,2.816,326,2.169,327,2.982,328,3.324,329,2.453,330,3.403,331,2.453,332,3.324,333,2.169,334,2.169,335,3.324,336,3.324,337,2.453,338,3.324,339,3.324,340,2.527,341,3.324,342,2.169,343,2.668,344,2.799,345,1.826,346,2.169,347,1.826,348,2.169,349,2.301,350,2.709,351,4.53,352,1.988,353,1.6,354,1.6,355,3.324,356,1.185,357,1.669,358,2.453,359,1.6,360,2.799,361,2.169,362,2.169,363,2.169,364,2.169,365,1.6,366,1.826,367,1.432,368,2.099,369,2.169,370,1.826,371,1.826,372,2.169,373,1.826,374,2.169,375,1.816,376,1.6,377,2.799,378,2.169,379,2.169,380,2.169,381,2.453,382,1.6,383,2.169,384,2.169,385,1.6,386,2.169,387,2.169,388,2.169,389,1.826,390,2.169,391,2.169,392,2.169,393,2.169,394,2.169,395,2.169,396,1.826,397,2.169,398,2.169,399,2.169,400,2.169,401,2.799,402,2.169,403,3.324,404,3.324,405,2.169,406,2.169,407,2.169,408,2.169,409,2.169,410,4.041,411,2.169,412,2.453,413,2.169,414,2.169,415,1.6,416,1.6,417,1.826,418,2.169,419,2.169,420,2.169,421,1.6,422,2.169,423,2.169,424,1.6,425,2.169,426,2.169,427,2.169,428,2.169,429,1.432,430,2.169,431,2.169,432,1.6,433,2.169]],["title/injectables/CarouselCustomConfig.html",[0,0.921,434,2.19]],["body/injectables/CarouselCustomConfig.html",[0,1.535,2,2.097,3,0.403,4,0.355,5,0.355,9,0.355,10,0.683,33,1.726,35,1.801,36,1.855,37,0.029,47,0.468,98,0.403,99,0.355,110,0.403,111,1.086,119,1.327,130,0.023,131,0.023,195,1.056,263,2.373,434,3.651,435,4.709,436,3.811,437,5.974,438,6.382,439,6.223,440,6.223,441,2.777,442,4.527,443,4.527,444,6.223,445,5.532,446,4.527,447,5.532,448,4.527,449,5.532,450,5.239,451,5.532,452,4.657]],["title/components/CircularImage.html",[132,0.538,163,1.141]],["body/components/CircularImage.html",[3,0.311,4,0.274,5,0.274,9,0.367,10,0.579,32,1.956,33,1.568,35,0.971,36,1.043,37,0.029,41,0.968,42,0.653,43,1.21,45,0.417,47,0.367,48,0.826,54,1.613,73,1.12,94,1.12,98,0.552,99,0.274,110,0.311,111,0.839,130,0.019,131,0.019,132,0.858,133,2.289,134,1.613,135,1.294,136,1.392,137,1.392,139,1.392,140,2.647,141,2.011,143,1.204,144,2.011,146,2.011,149,3.949,153,1.621,156,1.392,157,1.866,158,1.866,159,1.392,160,2.249,161,1.392,162,1.392,163,1.944,164,2.466,165,1.392,166,1.204,167,1.392,168,1.294,169,1.734,170,1.392,171,1.392,172,1.204,173,1.392,174,1.294,175,1.392,176,1.204,177,1.392,178,1.392,179,1.12,180,1.294,181,1.392,182,1.204,183,1.866,184,1.392,185,1.204,186,1.294,187,1.392,188,1.204,189,1.294,190,1.392,240,1.613,260,1.12,434,3.492,435,4.349,450,4.962,453,4.349,454,2.946,455,3.949,456,4.69,457,5.29,458,4.69,459,3.492,460,5.29,461,5.29,462,5.29,463,5.29,464,5.29,465,5.29,466,4.454,467,4.69,468,4.69,469,3.731,470,3.46,471,5.29,472,4.69,473,3.499,474,3.499,475,1.392,476,4.69,477,2.562,478,5.29,479,4.69,480,2.804,481,3.499,482,2.092,483,3.499,484,2.581,485,3.499,486,2.946,487,2.946,488,2.581,489,3.499,490,3.499,491,3.499,492,4.69,493,4.69,494,5.652]],["title/components/Dashboard.html",[132,0.538,166,1.141]],["body/components/Dashboard.html",[3,0.254,4,0.224,5,0.224,9,0.224,32,1.055,33,1.318,37,0.028,42,0.676,44,0.914,45,0.423,47,0.224,54,1.401,73,0.914,94,0.914,98,0.363,99,0.224,110,0.254,111,0.685,115,2.83,130,0.017,131,0.017,132,0.77,133,2.225,134,1.401,135,1.055,136,1.136,137,1.136,139,1.136,140,2.574,141,1.224,143,0.982,144,1.747,146,1.747,153,1.322,156,1.136,157,1.621,158,1.621,159,1.136,160,2.061,161,1.136,162,1.136,163,0.982,164,1.136,165,1.136,166,1.959,167,1.136,168,1.055,169,1.915,170,1.136,171,1.136,172,0.982,173,1.136,174,1.055,175,1.136,176,0.982,177,1.136,178,1.136,179,0.914,180,1.055,181,1.136,182,0.982,183,1.621,184,1.136,185,0.982,186,1.055,187,1.136,188,0.982,189,1.055,190,1.136,195,0.545,230,1.051,240,1.401,260,1.304,316,1.559,353,3.821,357,2.859,365,3.005,367,2.688,368,1.887,389,5.21,475,1.89,477,2.225,495,2.403,496,4.073,497,4.073,498,5.179,499,5.179,500,2.854,501,3.406,502,2.854,503,2.854,504,2.854,505,3.429,506,2.854,507,2.854,508,3.419,509,5.046,510,3.429,511,2.859,512,4.073,513,4.073,514,4.073,515,3.956,516,4.073,517,5.179,518,5.179,519,6.188,520,3.429,521,5.695,522,5.179,523,5.179,524,3.005,525,5.993,526,5.179,527,4.073,528,3.429,529,4.073,530,5.179,531,4.073,532,4.073,533,4.073,534,4.073,535,4.073,536,4.073,537,2.854,538,4.073,539,4.073,540,4.361,541,4.073,542,5.179,543,5.993,544,4.073,545,4.073,546,4.073,547,4.073,548,4.073,549,4.073,550,5.179,551,4.073,552,4.073,553,4.073,554,4.073,555,4.073,556,4.073,557,4.073,558,4.073,559,3.429,560,4.361,561,4.073,562,4.073,563,4.073,564,3.429,565,4.073,566,4.073,567,5.179,568,3.956,569,5.695,570,4.073,571,4.073,572,4.073,573,4.073,574,4.073,575,4.073,576,4.073,577,4.073,578,5.179,579,5.179,580,5.179,581,4.073,582,4.073,583,4.073,584,4.073,585,4.073,586,4.073,587,4.073,588,4.073,589,4.073,590,4.073,591,4.073,592,4.073,593,4.073,594,4.073,595,4.073,596,5.179,597,2.225,598,5.179,599,4.073,600,4.073,601,4.073,602,4.073,603,2.854]],["title/injectables/DataService.html",[0,0.921,247,1.813]],["body/injectables/DataService.html",[0,1.574,2,2.186,3,0.42,4,0.37,5,0.37,8,2.577,9,0.37,10,0.7,13,2.42,33,1.688,35,1.574,36,1.691,37,0.028,44,1.511,45,0.42,47,0.37,50,3.972,54,1.951,98,0.505,99,0.37,100,2.577,101,2.368,110,0.42,111,1.132,130,0.023,131,0.023,195,0.901,229,1.405,236,3.637,240,1.951,247,3.099,260,1.511,300,3.481,302,2.577,475,1.877,604,5.313,605,6.082,606,5.672,607,5.672,608,5.672,609,4.718,610,4.776,611,4.718,612,4.718]],["title/interfaces/ErrorMessage.html",[191,0.451,232,0.921]],["body/interfaces/ErrorMessage.html",[3,0.352,4,0.31,5,0.44,7,1.311,9,0.31,10,0.627,37,0.028,41,0.816,42,0.488,43,1.582,45,0.558,46,1.049,47,0.464,48,1.229,60,0.835,80,1.41,86,1.265,95,1.02,98,0.352,99,0.31,110,0.59,119,1.531,130,0.021,131,0.021,191,0.9,192,1.178,193,1.359,194,1.359,196,1.359,197,1.41,198,1.41,199,1.514,200,1.514,201,0.948,202,1.879,203,2.109,204,1.265,205,1.461,206,1.627,207,1.879,208,1.748,209,1.879,210,1.748,211,1.748,212,1.627,213,1.879,214,1.461,215,1.461,216,1.461,217,1.359,218,1.265,219,1.265,220,1.265,221,1.461,222,1.461,223,1.219,224,1.397,225,1.178,226,1.178,227,0.948,228,1.471,229,0.88,230,1.02,231,0.948,232,1.41]],["title/injectables/GuardService.html",[0,0.921,613,2.448]],["body/injectables/GuardService.html",[0,1.368,2,1.749,3,0.336,4,0.296,5,0.296,8,2.062,9,0.296,13,1.502,32,1.396,33,1.368,37,0.029,44,1.579,45,0.439,46,0.779,47,0.386,60,0.866,71,2.491,98,0.518,99,0.296,100,2.062,101,1.895,102,1.749,110,0.336,111,0.905,118,2.476,130,0.02,131,0.02,153,1.749,191,0.513,195,0.942,198,1.524,199,1.125,223,1.397,233,3.386,240,1.696,250,4.152,251,3.284,252,2.062,257,3.284,260,1.579,261,3.483,263,1.619,264,2.949,301,3.988,302,2.062,314,4.573,316,2.062,340,2.592,349,2.115,429,4.274,501,3.872,528,3.178,597,2.062,613,3.638,614,4.624,615,5.824,616,3.774,617,3.774,618,3.774,619,5.824,620,5.824,621,3.774,622,4.152,623,6.197,624,5.492,625,5.824,626,6.042,627,2.949,628,3.774,629,3.774,630,3.774,631,3.774,632,3.638,633,2.491,634,3.178,635,3.774,636,3.774,637,3.774,638,3.774,639,3.774,640,3.178,641,3.774,642,2.785,643,2.785,644,3.774,645,3.774,646,3.178,647,3.178,648,3.774,649,3.774,650,3.178,651,2.257,652,3.774,653,3.638,654,3.774,655,3.774]],["title/interfaces/MediaFile.html",[191,0.451,218,1.062]],["body/interfaces/MediaFile.html",[3,0.336,4,0.296,5,0.431,7,1.56,9,0.296,10,0.609,37,0.028,41,0.78,42,0.466,43,1.653,45,0.576,46,1.019,47,0.519,48,1.23,60,0.817,80,1.369,86,1.866,95,0.975,98,0.336,99,0.296,110,0.586,119,1.554,130,0.02,131,0.02,191,0.894,192,1.126,193,1.3,194,1.3,196,1.3,197,1.369,198,1.369,199,1.471,200,1.471,201,0.907,202,1.825,203,2.172,204,1.21,205,1.397,206,1.935,207,2.235,208,1.698,209,1.825,210,1.698,211,1.698,212,1.58,213,1.825,214,1.397,215,1.397,216,1.397,217,1.3,218,1.58,219,1.21,220,1.21,221,1.397,222,1.397,223,1.184,224,1.224,225,1.126,226,1.126,227,0.907,228,1.184,229,0.842,230,0.975,231,0.907,232,1.048]],["title/interfaces/MediaItem.html",[191,0.451,204,1.062]],["body/interfaces/MediaItem.html",[3,0.338,4,0.297,5,0.431,7,1.562,9,0.297,10,0.611,37,0.028,41,1.136,42,0.468,43,1.654,45,0.577,46,1.021,47,0.516,48,1.228,60,0.819,80,1.373,86,1.214,95,0.979,98,0.338,99,0.297,110,0.586,119,1.555,130,0.02,131,0.02,191,0.894,192,1.131,193,1.305,194,1.305,196,1.305,197,1.373,198,1.373,199,1.475,200,1.475,201,0.91,202,1.829,203,2.174,204,1.584,205,2.036,206,1.938,207,2.238,208,1.702,209,1.829,210,1.702,211,1.702,212,1.584,213,1.829,214,1.403,215,1.403,216,1.403,217,1.305,218,1.214,219,1.214,220,1.214,221,1.403,222,1.403,223,1.187,224,1.226,225,1.131,226,1.131,227,0.91,228,1.187,229,0.845,230,0.979,231,0.91,232,1.052]],["title/components/Navbar.html",[132,0.538,143,1.141]],["body/components/Navbar.html",[3,0.253,4,0.222,5,0.222,9,0.222,10,0.501,13,1.614,32,1.049,33,1.753,35,1.516,36,1.629,37,0.029,42,0.584,44,1.299,45,0.46,47,0.371,48,0.834,60,0.813,73,1.516,77,1.55,94,0.909,98,0.506,99,0.222,102,1.315,110,0.253,111,0.681,130,0.017,131,0.017,132,0.768,133,2.223,134,1.395,135,1.049,136,1.129,137,1.129,139,1.129,140,2.572,141,1.74,143,1.955,144,1.74,146,1.74,153,1.315,156,1.129,157,1.614,158,1.614,159,1.129,160,2.056,161,1.129,162,1.129,163,0.976,164,1.129,165,1.129,166,1.629,167,1.129,168,1.049,169,1.5,170,1.129,171,1.129,172,0.976,173,1.129,174,1.049,175,1.129,176,0.976,177,1.129,178,1.129,179,0.909,180,1.751,181,1.129,182,1.777,183,1.614,184,1.129,185,0.976,186,1.049,187,1.129,188,0.976,189,1.049,190,1.129,195,0.775,200,0.846,201,1.461,223,0.973,224,1.054,228,0.973,229,0.903,232,1.314,233,3.269,236,3.399,237,3.493,239,4.601,240,1.395,241,2.586,246,3.986,247,2.986,260,1.82,271,1.873,293,2.678,297,2.993,306,1.425,316,1.55,325,1.55,340,1.217,349,1.74,356,1.55,357,2.037,365,2.094,429,3.41,469,3.41,475,2.056,501,3.089,505,2.389,511,1.425,524,2.094,633,2.678,640,2.389,647,2.389,650,2.389,651,1.697,656,2.389,657,3.493,658,4.056,659,4.056,660,3.986,661,3.986,662,5.684,663,5.166,664,4.056,665,5.166,666,5.166,667,2.838,668,2.838,669,2.838,670,2.838,671,4.056,672,3.399,673,2.838,674,2.838,675,2.838,676,2.838,677,2.838,678,2.838,679,2.838,680,3.493,681,3.415,682,3.415,683,2.838,684,2.838,685,3.415,686,2.389,687,2.389,688,2.426,689,2.389,690,2.389,691,2.822,692,2.389,693,2.389,694,2.838,695,2.838,696,2.838,697,2.389,698,2.838,699,2.389,700,2.094,701,2.389,702,2.389,703,2.389,704,2.389,705,2.838,706,2.838,707,2.094,708,2.838,709,2.838,710,2.838,711,2.389,712,2.838,713,4.056,714,2.389,715,2.838,716,2.838,717,2.838,718,2.838,719,2.838,720,4.056,721,4.056,722,2.838,723,2.838,724,2.838,725,2.838,726,2.389,727,2.838,728,2.838,729,2.838,730,2.838,731,2.838,732,2.838,733,4.056,734,2.993,735,4.056,736,3.415]],["title/interfaces/Product.html",[42,0.41,191,0.451]],["body/interfaces/Product.html",[3,0.322,4,0.283,5,0.421,7,1.237,9,0.283,10,0.592,37,0.028,41,0.746,42,0.592,43,1.637,45,0.572,46,1.23,47,0.518,48,1.229,60,0.8,80,1.33,86,1.158,95,0.933,98,0.322,99,0.283,110,0.582,119,1.568,130,0.02,131,0.02,191,0.888,192,1.078,193,1.244,194,1.244,195,1.211,196,1.244,197,1.33,198,1.33,199,1.429,200,1.429,201,0.867,202,2.204,203,2.209,204,1.158,205,1.337,206,1.535,207,1.773,208,2.05,209,2.204,210,2.05,211,2.05,212,1.834,213,2.204,214,2.118,215,2.118,216,1.337,217,1.244,218,1.158,219,1.158,220,1.158,221,1.337,222,1.337,223,1.15,224,1.198,225,1.078,226,1.078,227,0.867,228,1.15,229,0.805,230,0.933,231,0.867,232,1.003]],["title/components/ProductCard.html",[132,0.538,172,1.141]],["body/components/ProductCard.html",[3,0.169,4,0.149,5,0.149,9,0.149,10,0.521,13,0.758,32,0.704,33,1.699,35,0.833,36,0.567,37,0.029,40,3.116,41,1.126,42,0.828,43,1.567,44,1.472,45,0.455,46,0.872,47,0.437,48,1.109,54,1.68,56,2.788,60,0.683,64,1.405,73,0.61,77,2.668,94,1.191,98,0.455,99,0.149,102,0.882,104,1.603,110,0.169,111,1.103,115,1.641,118,2.12,130,0.012,131,0.012,132,0.685,133,2.069,134,1.033,135,0.704,136,1.829,137,0.758,139,0.758,140,2.393,141,1.288,143,0.655,144,1.288,146,1.288,153,0.882,156,0.758,157,1.195,158,1.195,159,0.758,160,1.681,161,0.758,162,0.758,163,1.453,164,1.195,165,0.758,166,0.655,167,0.758,168,0.704,169,1.111,170,0.758,171,0.758,172,1.453,173,0.758,174,0.704,175,0.758,176,0.655,177,0.758,178,0.758,179,0.61,180,0.704,181,0.758,182,0.655,183,1.195,184,0.758,185,0.655,186,0.704,187,0.758,188,0.655,189,0.704,190,0.758,195,0.878,201,0.72,203,1.033,208,1.279,210,1.581,211,1.279,217,1.033,223,0.72,229,0.94,231,0.72,240,1.033,241,2.032,247,2.307,252,2.511,257,3.261,260,1.926,263,1.288,264,1.796,265,2.216,288,3.91,306,0.956,316,1.04,325,1.04,340,2.339,349,0.817,373,1.603,375,1.04,429,1.982,441,1.867,453,1.405,459,2.455,466,3.132,470,2.216,475,1.48,477,2.307,480,1.796,482,1.138,488,1.405,501,3.058,508,1.982,511,1.867,520,1.603,559,2.529,560,4.795,564,3.556,622,2.529,627,1.138,642,1.405,651,1.796,672,3.691,687,1.603,691,1.04,737,5.197,738,5.197,739,1.603,740,4.596,741,3.003,742,3.003,743,3.003,744,4.112,745,3.003,746,3.003,747,3.003,748,3.003,749,3.719,750,3.719,751,3.719,752,3.003,753,4.596,754,3.719,755,4.596,756,3.003,757,4.223,758,3.003,759,1.904,760,3.003,761,3.003,762,1.904,763,3.003,764,4.305,765,1.904,766,4.876,767,2.788,768,4.596,769,4.223,770,3.556,771,1.904,772,3.003,773,3.003,774,1.904,775,4.884,776,3.003,777,1.904,778,4.223,779,4.223,780,4.223,781,4.223,782,4.223,783,3.556,784,4.223,785,1.904,786,3.003,787,3.003,788,3.556,789,3.003,790,3.003,791,3.003,792,3.003,793,3.719,794,3.003,795,1.904,796,2.529,797,2.529,798,2.216,799,3.003,800,1.904,801,3.003,802,3.003,803,3.003,804,1.904,805,3.003,806,3.003,807,1.904,808,1.904,809,5.113,810,5.453,811,4.223,812,3.003,813,1.904,814,1.904,815,4.223,816,1.904,817,1.904,818,3.003,819,3.003,820,4.596,821,1.904,822,1.904,823,1.904,824,1.904,825,1.603,826,1.904,827,1.904,828,1.904,829,1.904,830,1.904,831,1.904,832,1.904,833,1.603,834,1.603,835,3.556,836,3.003,837,1.904,838,1.405,839,1.904,840,1.904,841,1.904,842,1.603,843,1.405,844,1.603,845,1.904,846,1.904,847,1.904,848,2.529,849,3.003,850,3.719,851,3.003,852,1.904,853,1.904,854,1.904,855,1.904,856,1.257,857,3.003,858,1.904,859,1.904,860,1.904,861,4.223,862,1.904,863,1.904,864,3.003,865,1.904,866,1.904,867,3.003,868,1.904,869,1.904,870,1.904,871,1.904,872,1.904,873,1.904,874,3.003,875,4.884,876,3.003,877,3.003,878,3.003,879,3.003,880,3.003,881,3.003]],["title/interfaces/ProductFormData.html",[191,0.451,219,1.062]],["body/interfaces/ProductFormData.html",[3,0.335,4,0.295,5,0.43,7,1.272,9,0.295,10,0.608,37,0.028,41,0.778,42,0.465,43,1.559,45,0.576,46,1.247,47,0.507,48,1.23,60,0.816,80,1.367,86,1.207,95,0.973,98,0.335,99,0.295,110,0.586,119,1.579,130,0.02,131,0.02,191,0.894,192,1.124,193,1.297,194,1.297,195,0.941,196,1.297,197,1.367,198,1.367,199,1.469,200,1.469,201,0.904,202,1.822,203,2.078,204,1.207,205,1.394,206,1.578,207,1.822,208,2.078,209,2.234,210,2.078,211,2.078,212,1.578,213,2.234,214,1.394,215,1.394,216,1.394,217,1.297,218,1.207,219,1.578,220,1.207,221,1.394,222,1.394,223,1.182,224,1.222,225,1.124,226,1.124,227,0.904,228,1.182,229,0.839,230,0.973,231,0.904,232,1.046]],["title/components/ProductManagement.html",[132,0.538,176,1.141]],["body/components/ProductManagement.html",[3,0.387,4,0.341,5,0.341,37,0.028,42,0.83,45,0.48,73,1.393,94,1.393,98,0.387,99,0.341,110,0.387,111,1.044,130,0.022,131,0.022,132,0.952,133,2.347,134,1.857,135,1.609,136,1.731,137,1.731,139,1.731,140,2.715,141,1.866,143,1.497,144,2.315,146,2.315,156,1.731,157,2.148,158,2.148,159,1.731,160,2.442,161,1.731,162,1.731,163,1.497,164,1.731,165,1.731,166,1.497,167,1.731,168,1.609,169,1.996,170,1.731,171,1.731,172,1.497,173,1.731,174,1.609,175,1.731,176,2.111,177,1.731,178,1.731,179,1.393,180,1.609,181,1.731,182,1.497,183,2.148,184,1.731,185,1.497,186,1.609,187,1.731,188,1.497,189,1.609,190,1.731,312,4.528,882,3.663,883,3.663,884,3.663,885,5.398,886,5.398,887,5.398]],["title/injectables/ProductService.html",[0,0.921,888,2.448]],["body/injectables/ProductService.html",[0,0.664,1,1.956,2,0.666,3,0.128,4,0.113,5,0.373,7,0.371,8,0.785,9,0.28,13,1.424,32,0.532,33,1.452,35,0.399,36,0.429,37,0.029,38,0.949,40,1.765,41,1.02,42,0.811,43,1.545,44,1.583,45,0.424,46,0.939,47,0.399,48,1.047,53,1.061,54,1.056,56,2.363,59,1.21,60,0.356,64,3.647,71,1.579,76,2.014,77,1.307,94,0.983,98,0.424,99,0.113,100,0.785,101,0.722,102,1.108,103,1.061,108,4.209,110,0.128,111,0.345,113,1.765,118,2.627,119,1.142,130,0.016,131,0.01,135,0.532,195,0.909,224,1.405,226,1.474,227,1.255,228,1.508,229,1.166,230,0.617,231,1.186,240,0.823,241,3.27,251,2.565,252,1.956,255,1.765,260,1.902,261,3.743,262,3.948,263,2.187,264,3.049,271,1.579,274,2.641,279,1.765,280,2.014,288,3.355,290,2.641,301,3.263,302,1.307,303,2.027,304,1.21,305,1.061,306,0.722,307,0.86,308,1.061,310,2.363,316,0.785,323,2.832,325,2.171,327,1.765,329,3.514,337,4.258,340,2.715,343,3.002,344,2.586,345,1.21,349,2.187,350,2.956,352,1.43,356,1.307,357,1.201,367,1.579,368,1.987,375,1.678,385,1.765,396,2.014,401,2.014,412,1.061,415,3.514,416,1.061,421,3.514,424,3.514,432,1.765,441,1.542,475,0.572,477,0.785,509,3.612,515,1.579,568,2.027,597,2.344,627,3.049,653,1.765,691,1.307,700,2.641,707,3.514,734,2.641,766,3.014,767,2.363,797,2.586,798,3.514,825,2.014,833,3.612,834,3.612,842,2.014,843,1.061,844,4.802,848,2.014,856,1.579,888,1.765,889,4.505,890,3.071,891,3.071,892,2.392,893,2.392,894,3.58,895,3.58,896,2.392,897,3.58,898,2.586,899,3.071,900,1.21,901,2.932,902,3.014,903,1.21,904,2.014,905,2.392,906,1.438,907,3.58,908,2.014,909,2.014,910,3.58,911,2.392,912,2.014,913,2.392,914,2.392,915,2.392,916,2.392,917,2.392,918,4.547,919,4.293,920,2.392,921,1.438,922,2.392,923,1.438,924,3.58,925,2.392,926,1.438,927,1.438,928,2.392,929,2.392,930,2.392,931,1.438,932,3.58,933,2.392,934,2.392,935,1.438,936,2.014,937,2.392,938,2.392,939,2.014,940,2.392,941,2.392,942,2.392,943,3.014,944,1.21,945,3.014,946,3.014,947,1.438,948,2.392,949,3.58,950,2.392,951,2.014,952,3.071,953,3.071,954,3.071,955,3.071,956,2.266,957,1.765,958,2.392,959,3.014,960,2.014,961,2.014,962,2.392,963,2.392,964,2.392,965,2.392,966,1.438,967,3.514,968,3.071,969,1.21,970,3.612,971,1.21,972,4.162,973,1.21,974,1.21,975,3.014,976,2.014,977,2.392,978,1.438,979,1.438,980,3.829,981,3.829,982,3.514,983,1.438,984,1.438,985,4.29,986,3.612,987,1.21,988,1.438,989,1.438,990,1.438,991,1.21,992,1.061,993,1.21,994,1.061,995,1.438,996,3.071,997,1.438,998,4.67,999,1.438,1000,3.014,1001,1.438,1002,2.392,1003,1.438,1004,1.438,1005,2.392,1006,3.071,1007,2.392,1008,2.392,1009,4.29,1010,3.58,1011,2.392,1012,2.392,1013,2.392,1014,1.438,1015,1.43,1016,2.014,1017,2.392,1018,2.014,1019,2.392,1020,2.014,1021,1.765,1022,3.58,1023,2.392,1024,2.392,1025,2.392,1026,1.765,1027,2.392,1028,2.392,1029,2.392,1030,2.392,1031,2.392,1032,1.438,1033,2.392,1034,2.014,1035,1.438,1036,1.438,1037,2.014,1038,1.438,1039,1.438,1040,1.438,1041,1.438,1042,3.071,1043,1.438,1044,1.438,1045,1.438,1046,1.438,1047,1.438,1048,1.061,1049,1.438,1050,1.438,1051,2.014,1052,1.21,1053,1.438,1054,1.438,1055,1.438,1056,2.392,1057,1.438,1058,1.438,1059,1.438,1060,1.438,1061,1.438,1062,1.438,1063,1.438,1064,1.438,1065,2.014,1066,2.014]],["title/interfaces/ServiceResponse.html",[191,0.451,227,0.796]],["body/interfaces/ServiceResponse.html",[3,0.343,4,0.302,5,0.434,7,1.29,9,0.302,10,0.617,37,0.028,41,0.795,42,0.475,43,1.57,45,0.555,46,1.031,47,0.488,48,1.228,60,0.825,80,1.386,86,1.233,95,0.994,98,0.343,99,0.302,110,0.588,119,1.522,130,0.02,131,0.02,191,0.897,192,1.148,193,1.325,194,1.325,195,1.19,196,1.325,197,1.386,198,1.386,199,1.489,200,1.489,201,0.924,202,1.848,203,2.092,204,1.233,205,1.424,206,1.6,207,1.848,208,1.719,209,1.848,210,1.719,211,1.719,212,1.6,213,1.848,214,1.424,215,1.424,216,1.424,217,1.325,218,1.233,219,1.233,220,1.233,221,1.424,222,1.424,223,1.408,224,1.388,225,1.148,226,1.148,227,1.199,228,1.459,229,1.307,230,1.431,231,1.408,232,1.068]],["title/components/SignIn.html",[132,0.538,179,1.062]],["body/components/SignIn.html",[3,0.118,4,0.104,5,0.444,9,0.104,10,0.276,13,2.344,32,0.828,33,1.647,35,1.33,36,1.429,37,0.029,41,0.785,42,0.358,44,1.32,45,0.483,46,0.703,47,0.399,48,0.898,53,2.514,54,0.457,60,0.432,73,1.218,80,1.448,81,1.886,94,0.426,95,1.189,98,0.39,99,0.104,102,1.345,110,0.118,111,0.319,115,0.726,118,1.71,119,0.696,130,0.009,131,0.009,132,0.552,133,1.896,134,0.771,135,0.492,136,1.356,137,0.529,139,0.529,140,2.194,141,0.961,143,0.457,144,0.961,146,0.961,150,0.981,153,0.616,156,0.529,157,0.891,158,0.891,159,0.529,160,1.356,161,0.529,162,0.529,163,0.457,164,0.529,165,0.529,166,0.457,167,0.529,168,0.492,169,2.006,170,0.529,171,0.529,172,0.457,173,0.529,174,0.492,175,0.529,176,0.457,177,0.529,178,0.529,179,1.091,180,2.287,181,0.529,182,1.172,183,0.891,184,0.529,185,0.457,186,0.492,187,0.529,188,0.457,189,0.492,190,0.529,195,0.946,196,1.585,197,1.69,198,1.375,199,1.307,200,0.865,201,0.912,206,0.426,224,1.187,227,0.537,228,0.817,231,0.537,232,0.805,233,2.396,240,0.771,241,2.252,251,2.755,257,1.34,260,1.765,261,2.037,263,0.57,265,1.653,270,1.886,271,1.479,287,4.172,289,1.653,290,1.653,293,2.249,303,3.041,306,0.667,313,2.444,314,1.653,317,1.886,323,1.479,324,1.119,325,1.586,340,2.126,343,0.878,349,1.881,350,0.795,352,3.047,353,0.981,354,0.981,356,2.252,357,2.202,366,1.119,368,2.032,375,1.586,376,0.981,377,1.119,382,1.653,441,2.202,459,1.916,469,2.249,475,2.077,480,3.047,482,0.795,487,2.868,501,2.623,508,1.479,511,2.07,524,1.653,568,2.51,597,0.726,627,1.34,633,1.479,634,1.886,642,2.142,651,0.795,657,2.142,660,2.444,661,2.444,672,2.037,680,2.514,681,1.886,682,1.886,685,2.868,686,1.119,688,1.34,689,1.119,690,1.886,691,1.861,692,1.886,693,1.119,697,1.119,699,1.886,701,1.119,702,4.822,703,2.444,704,2.868,711,1.119,744,3.202,767,1.479,770,1.886,783,1.886,788,1.886,838,2.514,856,0.878,957,0.981,959,1.886,961,1.886,987,1.119,992,3.236,994,0.981,1015,0.795,1016,2.444,1018,1.886,1020,1.119,1034,1.119,1048,1.653,1067,5.035,1068,5.035,1069,1.119,1070,2.444,1071,2.24,1072,2.24,1073,2.444,1074,2.903,1075,5.096,1076,2.903,1077,2.903,1078,2.903,1079,3.407,1080,2.24,1081,3.407,1082,3.407,1083,2.24,1084,3.407,1085,2.24,1086,2.24,1087,3.407,1088,1.329,1089,2.868,1090,1.329,1091,1.886,1092,1.329,1093,2.868,1094,3.407,1095,2.806,1096,2.249,1097,2.24,1098,2.24,1099,2.24,1100,2.24,1101,2.24,1102,1.329,1103,3.407,1104,2.24,1105,2.24,1106,2.24,1107,1.886,1108,2.24,1109,1.329,1110,2.24,1111,2.24,1112,3.803,1113,3.693,1114,2.24,1115,1.329,1116,2.24,1117,3.803,1118,2.24,1119,2.24,1120,4.037,1121,1.329,1122,2.24,1123,1.329,1124,2.24,1125,2.24,1126,2.24,1127,2.24,1128,2.24,1129,3.407,1130,2.24,1131,1.329,1132,2.24,1133,2.24,1134,2.24,1135,2.24,1136,2.24,1137,2.24,1138,1.329,1139,1.886,1140,2.24,1141,4.123,1142,2.903,1143,3.407,1144,2.24,1145,1.329,1146,2.24,1147,2.444,1148,2.444,1149,2.24,1150,2.24,1151,1.329,1152,3.407,1153,2.24,1154,2.24,1155,2.24,1156,2.24,1157,2.24,1158,2.903,1159,1.329,1160,2.24,1161,2.24,1162,2.24,1163,2.24,1164,1.329,1165,1.886,1166,1.329,1167,2.24,1168,1.329,1169,1.329,1170,1.329,1171,1.329,1172,2.24,1173,2.24,1174,1.329,1175,1.329,1176,1.329,1177,1.329,1178,0.981,1179,1.329,1180,1.329,1181,1.329,1182,1.329,1183,1.886,1184,1.119,1185,1.329,1186,1.329,1187,1.329,1188,1.329,1189,1.329,1190,2.24,1191,1.119,1192,1.329,1193,1.119,1194,1.329,1195,1.886,1196,2.24,1197,1.329,1198,1.329,1199,1.119,1200,2.24,1201,1.329,1202,2.24,1203,2.444,1204,3.202,1205,1.329,1206,1.329,1207,1.329,1208,2.903,1209,1.886,1210,1.119,1211,1.119,1212,1.119,1213,2.24,1214,1.119,1215,1.119,1216,1.329,1217,1.329,1218,1.329,1219,1.329,1220,1.119,1221,2.903,1222,1.329,1223,1.329,1224,1.329,1225,1.329,1226,1.329,1227,1.329,1228,1.329,1229,2.868,1230,1.329,1231,1.119,1232,2.24,1233,1.329,1234,1.329,1235,1.329,1236,1.329,1237,1.329,1238,1.329,1239,1.329,1240,2.903,1241,1.329,1242,1.329,1243,1.329,1244,1.329,1245,1.329,1246,1.329,1247,1.329,1248,2.903,1249,1.329,1250,1.329,1251,1.329,1252,1.329,1253,1.329,1254,1.329,1255,1.329,1256,1.329,1257,1.329,1258,1.329,1259,1.119,1260,1.329,1261,1.329,1262,4.386,1263,1.329,1264,1.329,1265,1.329,1266,1.329,1267,1.329,1268,1.329,1269,1.329,1270,2.903,1271,2.24,1272,2.903,1273,2.24,1274,1.329,1275,2.24,1276,1.886,1277,2.24,1278,1.886,1279,2.903,1280,1.329,1281,1.329,1282,1.886,1283,1.329,1284,1.329,1285,1.329,1286,1.329,1287,1.329,1288,1.329,1289,1.329,1290,1.329,1291,1.329,1292,1.329,1293,1.119,1294,1.329,1295,1.329,1296,1.329,1297,1.329,1298,1.329,1299,4.172,1300,2.24,1301,2.24,1302,2.24,1303,2.24,1304,2.24,1305,3.407,1306,4.607,1307,3.407,1308,1.329,1309,1.329,1310,2.24,1311,1.329,1312,1.329,1313,1.329,1314,1.329,1315,1.329,1316,1.329,1317,2.24,1318,1.329,1319,1.329,1320,1.329,1321,1.329,1322,2.24,1323,2.24,1324,3.407,1325,1.329,1326,1.329,1327,1.329,1328,1.329,1329,2.24,1330,2.24,1331,2.24,1332,2.24,1333,2.24,1334,2.24,1335,2.24,1336,2.24,1337,1.329,1338,1.329,1339,1.329,1340,1.329,1341,1.329,1342,1.329,1343,1.329,1344,1.329,1345,1.329,1346,1.329,1347,1.329,1348,1.329,1349,1.329,1350,1.329,1351,1.329,1352,1.329,1353,1.329,1354,1.329,1355,1.329,1356,1.329]],["title/components/ToastError.html",[132,0.538,182,1.141]],["body/components/ToastError.html",[3,0.388,4,0.193,5,0.193,9,0.193,10,0.451,33,1.722,35,1.63,36,1.783,37,0.029,42,0.538,44,1.171,45,0.43,47,0.439,48,0.769,73,0.788,94,0.788,98,0.388,99,0.193,110,0.219,111,0.59,113,3.563,119,1.047,130,0.015,131,0.015,132,0.707,133,2.172,134,1.258,135,0.91,136,0.979,137,0.979,139,0.979,140,2.513,141,1.568,143,0.846,144,1.568,146,1.568,156,0.979,157,1.455,158,1.455,159,0.979,160,1.922,161,0.979,162,0.979,163,0.846,164,0.979,165,0.979,166,0.846,167,0.979,168,0.91,169,1.352,170,0.979,171,0.979,172,0.846,173,0.979,174,0.91,175,0.979,176,0.846,177,0.979,178,0.979,179,0.788,180,0.91,181,0.979,182,1.661,183,2.493,184,0.979,185,1.661,186,1.352,187,0.979,188,0.846,189,0.91,190,0.979,195,0.698,201,1.238,223,1.047,224,1.149,228,1.047,231,1.159,240,1.258,260,1.546,293,2.413,340,2.787,349,2.467,354,1.816,356,3.059,368,2.505,375,2.383,441,2.591,469,3.188,470,2.698,475,2.054,480,2.609,484,1.816,511,1.235,515,2.88,633,2.413,643,1.816,653,3.563,657,3.219,672,2.186,680,4.692,688,3.747,691,1.344,943,2.072,1015,3.086,1096,1.624,1231,2.072,1278,3.673,1293,3.078,1357,4.623,1358,2.072,1359,4.363,1360,4.363,1361,4.363,1362,4.363,1363,4.363,1364,3.656,1365,3.656,1366,4.829,1367,4.363,1368,4.363,1369,4.363,1370,4.363,1371,5.16,1372,5.16,1373,5.16,1374,3.656,1375,3.656,1376,4.829,1377,4.363,1378,3.656,1379,2.461,1380,2.461,1381,3.656,1382,2.461,1383,3.656,1384,2.461,1385,2.461,1386,6.143,1387,5.752,1388,3.656,1389,3.656,1390,2.461,1391,5.408,1392,5.408,1393,4.829,1394,2.461,1395,3.656,1396,2.461,1397,3.656,1398,3.078,1399,2.461,1400,3.656,1401,4.363,1402,2.461,1403,3.656,1404,3.656,1405,3.656,1406,3.078,1407,2.461,1408,3.656,1409,3.656,1410,3.656,1411,4.363,1412,3.656,1413,2.461,1414,2.461,1415,2.461,1416,1.816,1417,2.461,1418,2.461,1419,2.461,1420,3.656,1421,4.066,1422,2.461,1423,2.461,1424,2.461,1425,2.461,1426,2.461,1427,2.461,1428,2.461,1429,2.461,1430,2.461,1431,3.656,1432,2.461,1433,2.461,1434,2.461,1435,2.461,1436,2.461,1437,2.461,1438,2.461]],["title/components/ToastSampleIconComponent.html",[132,0.538,185,1.141]],["body/components/ToastSampleIconComponent.html",[3,0.393,4,0.346,5,0.346,37,0.028,42,0.729,45,0.485,73,1.413,94,1.413,98,0.393,99,0.346,110,0.393,111,1.059,130,0.022,131,0.022,132,0.958,133,2.336,134,1.874,135,2.014,136,1.757,137,1.757,139,1.757,140,2.719,143,1.518,156,1.757,157,2.168,158,2.168,159,1.757,160,2.455,161,1.757,162,1.757,163,1.518,164,1.757,165,1.757,166,1.518,167,1.757,168,1.632,169,2.014,170,1.757,171,1.757,172,1.518,173,1.757,174,1.632,175,1.757,176,1.518,177,1.757,178,1.757,179,1.413,180,1.632,181,1.757,182,1.518,183,2.455,184,1.757,185,2.122,186,2.281,187,1.757,188,1.518,189,1.632,190,1.757,263,2.336,688,2.64,1357,3.257,1416,4.359,1439,3.716,1440,5.447]],["title/components/UpdateForm.html",[132,0.538,188,1.141]],["body/components/UpdateForm.html",[3,0.226,4,0.199,5,0.429,9,0.199,10,0.462,13,1.011,32,1.385,33,1.716,35,1.234,36,1.325,37,0.029,41,0.773,42,0.549,44,1.424,45,0.528,47,0.484,48,1.023,54,1.529,60,0.814,73,0.814,80,1.039,94,1.812,95,0.656,98,0.536,99,0.199,110,0.226,111,0.61,130,0.015,131,0.015,132,0.721,133,2.184,134,1.288,135,0.94,136,1.011,137,1.011,139,1.011,140,2.527,141,1.606,143,0.874,144,1.606,146,1.606,150,1.875,156,1.011,157,1.49,158,1.49,159,1.011,160,1.952,161,1.011,162,1.011,163,0.874,164,1.011,165,1.011,166,0.874,167,1.011,168,0.94,169,1.814,170,1.011,171,1.011,172,0.874,173,1.011,174,0.94,175,1.011,176,0.874,177,1.011,178,1.011,179,0.814,180,0.94,181,1.011,182,0.874,183,1.49,184,1.011,185,0.874,186,0.94,187,1.011,188,1.688,189,0.94,190,1.011,195,0.849,197,1.039,198,0.705,200,1.116,201,0.61,229,1.165,236,3.272,240,1.288,260,1.675,297,2.763,306,1.276,331,1.875,340,2.104,349,2.104,350,2.239,352,3.544,357,1.88,358,3.62,359,1.875,360,2.14,368,1.735,370,2.14,371,2.14,381,1.875,459,2.935,475,2.31,477,1.388,480,1.52,482,1.52,486,2.14,488,1.875,511,1.88,568,2.472,597,2.046,672,1.52,726,2.14,764,2.14,835,2.14,1015,1.52,1070,3.743,1073,3.743,1089,4.13,1091,3.743,1095,1.875,1096,1.678,1113,3.743,1147,2.14,1165,3.153,1178,1.875,1184,2.14,1191,2.14,1209,2.14,1210,2.14,1211,2.14,1212,2.14,1214,2.14,1215,2.14,1220,2.14,1259,2.14,1441,5.259,1442,5.259,1443,2.14,1444,4.446,1445,4.446,1446,4.446,1447,4.446,1448,4.446,1449,4.446,1450,4.446,1451,4.446,1452,3.745,1453,3.745,1454,4.906,1455,4.446,1456,4.446,1457,3.745,1458,4.906,1459,3.745,1460,4.906,1461,4.906,1462,2.541,1463,5.23,1464,3.743,1465,3.745,1466,3.745,1467,2.541,1468,2.541,1469,3.745,1470,2.541,1471,2.541,1472,2.541,1473,2.541,1474,3.745,1475,2.541,1476,2.541,1477,2.541,1478,2.541,1479,2.541,1480,2.541,1481,2.541,1482,2.541,1483,2.541,1484,2.541,1485,2.541,1486,2.541,1487,2.541,1488,2.541,1489,2.541,1490,2.541,1491,2.541,1492,2.541,1493,2.541,1494,3.745,1495,3.745,1496,2.541,1497,2.541,1498,2.541,1499,2.541,1500,2.541,1501,2.541,1502,2.541,1503,4.446,1504,2.541,1505,2.541,1506,2.541,1507,2.541,1508,2.541,1509,3.745,1510,3.745,1511,2.541,1512,2.541,1513,3.745,1514,2.541,1515,2.541,1516,2.541,1517,2.541,1518,2.541,1519,2.541,1520,2.541,1521,2.541,1522,3.745,1523,3.745,1524,3.745,1525,3.153,1526,3.745,1527,3.153,1528,3.745,1529,3.745,1530,3.745,1531,3.745,1532,3.745,1533,3.745,1534,3.745,1535,3.745,1536,3.745]],["title/interfaces/UploadProgress.html",[191,0.451,220,1.062]],["body/interfaces/UploadProgress.html",[3,0.345,4,0.303,5,0.504,7,1.294,9,0.303,10,0.619,37,0.028,41,0.799,42,0.478,43,1.572,45,0.555,46,1.035,47,0.489,48,1.227,60,0.827,80,1.391,86,1.239,95,0.999,98,0.345,99,0.303,110,0.588,119,1.561,130,0.021,131,0.021,191,0.897,192,1.154,193,1.332,194,1.332,195,0.957,196,1.332,197,1.391,198,1.391,199,1.494,200,1.494,201,0.929,202,1.854,203,2.095,204,1.239,205,1.431,206,1.605,207,1.854,208,1.724,209,1.854,210,1.724,211,1.724,212,1.605,213,1.854,214,1.431,215,1.431,216,1.431,217,1.332,218,1.239,219,1.239,220,1.605,221,2.175,222,2.175,223,1.411,224,1.39,225,1.154,226,1.154,227,0.929,228,1.203,229,0.862,230,0.999,231,0.929,232,1.074]],["title/interfaces/User.html",[60,0.493,191,0.451]],["body/interfaces/User.html",[3,0.333,4,0.293,5,0.428,7,1.265,9,0.293,10,0.605,37,0.028,41,0.772,42,0.462,43,1.65,45,0.575,46,1.012,47,0.506,48,1.229,60,0.863,80,1.672,86,1.198,95,1.498,98,0.333,99,0.293,110,0.585,119,1.511,130,0.02,131,0.02,191,0.893,192,1.115,193,1.287,194,1.287,195,1.108,196,1.287,197,1.672,198,1.672,199,1.73,200,1.73,201,0.898,202,2.228,203,2.167,204,1.198,205,1.384,206,1.57,207,1.813,208,1.687,209,1.813,210,1.687,211,1.687,212,1.57,213,1.813,214,1.384,215,1.384,216,1.384,217,1.287,218,1.198,219,1.198,220,1.198,221,1.384,222,1.384,223,1.176,224,1.218,225,1.115,226,1.115,227,0.898,228,1.176,229,0.833,230,0.966,231,0.898,232,1.038]],["title/injectables/UserService.html",[0,0.921,1537,2.448]],["body/injectables/UserService.html",[0,0.714,1,2.065,2,0.728,3,0.14,4,0.123,5,0.456,7,0.405,8,0.858,9,0.123,10,0.318,13,2.344,32,0.952,33,1.617,35,0.907,36,0.974,37,0.029,38,1.037,41,0.861,43,0.844,44,1.434,45,0.371,46,0.78,47,0.387,48,1.027,54,1.627,56,1.037,60,0.856,72,1.899,73,1.683,77,0.858,84,1.323,86,1.335,88,1.323,94,0.824,95,0.975,98,0.421,99,0.123,100,0.858,101,0.789,102,1.192,103,1.159,110,0.14,111,0.377,115,2.065,118,2.565,119,1.074,130,0.011,131,0.011,195,0.796,197,1.048,199,0.468,206,0.503,223,1.134,224,1.381,226,1.335,227,0.784,228,1.292,229,0.842,230,0.405,231,0.907,236,1.955,237,2.788,238,2.752,240,0.885,241,3.217,251,1.539,252,0.858,255,1.159,260,2.014,261,3.777,262,1.899,263,1.788,264,3.055,277,2.752,289,1.159,300,1.159,301,3.121,302,0.858,303,1.037,305,1.159,306,0.789,307,0.939,308,1.159,310,1.037,312,1.159,323,2.752,325,2.278,327,1.899,329,3.304,330,1.323,331,1.159,337,3.304,340,2.686,343,2.752,347,1.323,349,2.399,350,1.955,352,3.345,356,2.872,357,2.703,358,3.077,359,3.077,367,1.699,368,2.495,375,1.406,376,3.304,381,1.159,382,1.159,385,1.899,412,1.159,415,1.899,416,1.899,417,1.323,421,2.788,424,2.788,432,1.159,441,0.789,452,1.323,475,1.301,477,0.858,511,2.852,540,1.323,610,2.167,627,1.539,643,2.788,646,3.771,691,2.065,700,2.788,707,2.412,734,1.899,736,3.182,798,1.899,843,1.159,856,1.699,898,2.752,900,1.323,901,2.412,902,3.182,903,2.167,904,2.167,919,2.167,936,3.771,939,2.167,944,1.323,945,3.182,946,3.182,951,2.167,956,1.159,957,2.412,960,2.167,967,3.304,969,1.323,970,3.511,971,1.323,972,3.771,973,1.323,974,1.323,975,2.167,976,2.167,980,3.511,981,4.301,982,3.077,986,3.511,991,1.323,992,2.412,993,1.323,994,1.159,998,4.301,1000,3.182,1015,1.539,1048,1.899,1051,1.323,1065,2.167,1066,2.167,1093,2.167,1095,2.788,1096,2.494,1120,1.323,1148,3.182,1183,2.167,1193,2.167,1195,2.167,1199,1.323,1203,1.323,1204,1.323,1229,1.323,1276,4.906,1282,2.167,1299,2.752,1421,2.167,1464,1.323,1525,2.167,1527,1.323,1537,1.899,1538,4.958,1539,3.779,1540,3.779,1541,3.779,1542,3.779,1543,3.779,1544,4.17,1545,3.779,1546,3.779,1547,3.268,1548,3.268,1549,2.573,1550,1.571,1551,3.779,1552,2.573,1553,2.573,1554,1.571,1555,2.573,1556,2.573,1557,4.728,1558,1.571,1559,3.779,1560,2.573,1561,4.935,1562,1.571,1563,2.573,1564,1.571,1565,2.573,1566,2.573,1567,2.573,1568,2.573,1569,1.571,1570,1.571,1571,2.573,1572,1.571,1573,2.573,1574,1.571,1575,2.573,1576,2.573,1577,2.573,1578,2.573,1579,2.573,1580,2.573,1581,1.571,1582,3.779,1583,4.478,1584,2.573,1585,3.268,1586,1.571,1587,2.573,1588,2.573,1589,1.571,1590,3.268,1591,2.573,1592,2.573,1593,2.573,1594,1.571,1595,2.573,1596,3.779,1597,1.571,1598,2.573,1599,3.268,1600,1.571,1601,1.571,1602,1.571,1603,1.571,1604,3.268,1605,1.571,1606,1.571,1607,1.571,1608,1.571,1609,1.571,1610,1.571,1611,1.571,1612,3.268,1613,1.571,1614,1.571,1615,1.571,1616,2.573,1617,1.571,1618,2.573,1619,1.571,1620,1.571,1621,1.571,1622,1.571,1623,1.571,1624,1.571,1625,2.573,1626,1.571,1627,1.571,1628,1.571,1629,1.571,1630,1.571,1631,1.571,1632,1.571,1633,1.571,1634,1.571,1635,1.571,1636,1.571,1637,1.571,1638,4.478,1639,1.571,1640,1.571,1641,1.571,1642,1.571,1643,1.571,1644,1.571,1645,2.573,1646,2.573,1647,1.571,1648,1.323,1649,1.571,1650,1.571,1651,1.571,1652,1.571,1653,1.571,1654,1.571,1655,2.573]],["title/coverage.html",[1656,3.339]],["body/coverage.html",[0,1.753,1,2.067,5,0.296,6,3.186,7,0.977,8,3.304,37,0.028,42,0.467,47,0.296,54,1.302,60,0.563,73,1.211,130,0.02,131,0.02,132,1.08,133,1.302,138,3.186,143,1.302,163,1.302,166,1.302,168,1.399,172,1.302,174,1.399,176,1.302,179,1.211,182,1.302,185,1.302,186,1.399,188,1.302,191,0.894,192,1.128,194,2.265,204,1.211,212,1.211,218,1.211,219,1.211,220,1.211,225,1.128,227,0.908,232,1.05,233,2.067,234,3.186,247,2.067,307,2.263,434,2.497,435,3.644,436,3.186,441,3.433,453,2.792,454,3.186,495,3.186,604,3.186,613,2.792,614,3.186,656,3.186,688,2.954,737,4.158,738,3.186,739,3.186,882,3.186,883,3.186,884,3.186,888,2.792,889,3.186,956,3.644,1052,4.158,1067,3.186,1068,3.186,1069,3.186,1357,3.644,1358,3.186,1416,2.792,1439,3.186,1441,3.186,1442,3.186,1443,3.186,1537,2.792,1538,3.186,1656,2.792,1657,3.186,1658,3.784,1659,3.784,1660,3.186,1661,3.784,1662,3.186,1663,5.499,1664,3.784,1665,3.784,1666,3.784,1667,3.784,1668,3.784,1669,4.939,1670,5.499,1671,3.784,1672,3.784,1673,5.499,1674,5.829,1675,4.939,1676,3.784,1677,3.784,1678,3.784,1679,3.784,1680,3.784,1681,3.784,1682,3.784,1683,3.784,1684,3.784,1685,3.784,1686,3.784,1687,3.784,1688,3.784,1689,3.784,1690,3.784,1691,3.784,1692,3.784,1693,3.784,1694,3.784,1695,3.784,1696,3.784,1697,3.784,1698,3.784,1699,3.784,1700,4.158,1701,4.939,1702,3.186,1703,3.784,1704,3.784]],["title/dependencies.html",[1705,2.334,1706,3.359]],["body/dependencies.html",[37,0.029,99,0.381,130,0.024,131,0.024,153,2.253,302,2.656,482,2.908,484,3.587,1026,3.587,1178,3.587,1706,4.094,1707,4.862,1708,4.862,1709,6.509,1710,4.862,1711,4.862,1712,4.862,1713,4.094,1714,5.775,1715,5.775,1716,4.862,1717,4.862,1718,4.862,1719,4.862,1720,4.862,1721,4.862,1722,4.862,1723,4.862,1724,4.862,1725,4.094,1726,4.862,1727,4.862,1728,4.862,1729,4.862,1730,4.862,1731,4.862,1732,4.862,1733,4.862,1734,4.862,1735,4.862]],["title/miscellaneous/functions.html",[1736,1.83,1737,3.359]],["body/miscellaneous/functions.html",[9,0.375,37,0.027,44,1.833,45,0.51,46,1.182,47,0.375,60,0.713,115,2.618,130,0.023,131,0.023,195,1.093,224,1.444,230,1.237,231,1.374,252,2.618,257,2.866,260,1.833,274,3.536,307,3.424,368,2.22,508,3.164,510,5.156,515,3.78,597,2.618,767,3.78,796,4.035,838,3.536,901,4.518,967,4.518,982,3.536,1021,3.536,1037,4.035,1700,4.035,1702,4.821,1736,3.164,1737,4.035,1738,5.726,1739,4.035,1740,4.793,1741,4.793,1742,4.793,1743,4.793,1744,4.793,1745,4.793,1746,4.793,1747,4.793,1748,4.035,1749,4.793,1750,4.793]],["title/index.html",[9,0.217,1751,2.773,1752,2.773]],["body/index.html",[4,0.307,35,1.402,37,0.026,54,1.349,116,3.301,130,0.021,131,0.021,132,0.907,134,1.349,189,1.45,230,1.012,279,2.893,292,3.301,310,2.588,651,2.345,714,3.301,908,4.256,909,3.301,912,3.301,1021,3.73,1026,4.36,1107,3.301,1139,3.301,1398,5.272,1406,3.301,1648,3.301,1656,2.893,1657,5.434,1713,3.301,1725,3.301,1739,3.301,1748,3.301,1753,3.921,1754,5.909,1755,3.921,1756,5.055,1757,6.116,1758,3.301,1759,3.921,1760,5.055,1761,5.594,1762,3.921,1763,6.454,1764,6.576,1765,5.909,1766,3.921,1767,5.055,1768,3.921,1769,3.921,1770,5.055,1771,3.921,1772,5.055,1773,3.921,1774,3.921,1775,5.055,1776,3.921,1777,3.921,1778,3.921,1779,6.454,1780,6.116,1781,3.921,1782,5.055,1783,3.921,1784,3.921,1785,3.921,1786,3.921,1787,5.594,1788,3.921,1789,3.921,1790,3.921,1791,3.921,1792,3.921,1793,3.921,1794,3.921,1795,3.921,1796,3.921,1797,3.921,1798,3.921,1799,5.594,1800,3.921,1801,3.921,1802,3.921,1803,3.921,1804,3.921,1805,5.909,1806,5.909,1807,5.909,1808,5.909,1809,3.921,1810,5.055,1811,3.921,1812,3.921,1813,3.921,1814,3.921,1815,3.921,1816,3.921,1817,3.921,1818,3.921,1819,3.921,1820,5.055,1821,5.594,1822,3.921,1823,3.921,1824,3.921,1825,3.921,1826,5.594,1827,3.921,1828,3.921,1829,5.055,1830,3.921,1831,3.921,1832,3.921,1833,3.921,1834,3.921,1835,3.921,1836,3.921,1837,3.921,1838,3.921,1839,3.921,1840,3.921,1841,2.893,1842,3.921]],["title/modules.html",[1843,3.81]],["body/modules.html",[37,0.025,130,0.025,131,0.025,1843,4.548]],["title/overview.html",[1841,3.339]],["body/overview.html",[2,2.476,37,0.025,130,0.025,131,0.025,134,1.838,193,1.838,1841,3.943,1844,5.344,1845,5.344,1846,5.344]],["title/interfaces/productImage.html",[191,0.451,212,1.062]],["body/interfaces/productImage.html",[3,0.349,4,0.307,5,0.438,7,1.304,9,0.307,10,0.623,37,0.028,41,0.808,42,0.483,43,1.665,45,0.557,46,1.043,47,0.479,48,1.23,60,0.831,80,1.401,86,1.254,95,1.011,98,0.349,99,0.307,110,0.589,119,1.528,130,0.021,131,0.021,191,0.899,192,1.167,193,1.347,194,1.347,196,1.347,197,1.401,198,1.401,199,1.505,200,1.505,201,0.939,202,1.868,203,2.103,204,1.254,205,1.448,206,1.617,207,1.868,208,1.737,209,1.868,210,1.737,211,1.737,212,1.79,213,1.868,214,1.448,215,1.448,216,2.184,217,2.032,218,1.254,219,1.254,220,1.254,221,1.448,222,1.448,223,1.212,224,1.245,225,1.167,226,1.167,227,0.939,228,1.212,229,0.872,230,1.011,231,0.939,232,1.086]],["title/properties.html",[10,0.492,1705,2.334]],["body/properties.html",[10,0.663,37,0.026,130,0.025,131,0.025,1758,4.523,1847,5.372]],["title/miscellaneous/variables.html",[1736,1.83,1848,3.359]],["body/miscellaneous/variables.html",[9,0.404,35,1.432,36,1.538,37,0.028,47,0.404,130,0.025,131,0.025,263,2.214,455,4.345,1660,4.345,1662,5.036,1736,3.407,1848,4.345,1849,5.161,1850,5.161,1851,5.161,1852,5.161,1853,5.161,1854,5.161,1855,5.161,1856,5.161,1857,5.161]],["title/routes.html",[632,3.339]],["body/routes.html",[37,0.025,130,0.025,131,0.025,632,3.985]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/productImage.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":441,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0\">ajouter",{"_index":880,"title":{},"body":{"components/ProductCard.html":{}}}],["0).gettime",{"_index":855,"title":{},"body":{"components/ProductCard.html":{}}}],["0.0.0",{"_index":1847,"title":{},"body":{"properties.html":{}}}],["0.0.41",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["0.15.0",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["0011",{"_index":552,"title":{},"body":{"components/Dashboard.html":{}}}],["0012",{"_index":544,"title":{},"body":{"components/Dashboard.html":{}}}],["1",{"_index":477,"title":{},"body":{"components/CircularImage.html":{},"components/Dashboard.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["1,024",{"_index":535,"title":{},"body":{"components/Dashboard.html":{}}}],["1,240.50",{"_index":532,"title":{},"body":{"components/Dashboard.html":{}}}],["1,847",{"_index":585,"title":{},"body":{"components/Dashboard.html":{}}}],["1.2.3",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1194,"title":{},"body":{"components/SignIn.html":{}}}],["10/12",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["10/23",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1052,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["1000",{"_index":856,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["1000ms",{"_index":964,"title":{},"body":{"injectables/ProductService.html":{}}}],["1024",{"_index":1195,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["10mb",{"_index":1196,"title":{},"body":{"components/SignIn.html":{}}}],["11",{"_index":1846,"title":{},"body":{"overview.html":{}}}],["12",{"_index":526,"title":{},"body":{"components/Dashboard.html":{}}}],["12.5",{"_index":587,"title":{},"body":{"components/Dashboard.html":{}}}],["13",{"_index":1844,"title":{},"body":{"overview.html":{}}}],["13/17",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":1281,"title":{},"body":{"components/SignIn.html":{}}}],["16/24",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["17/35",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["17/40",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":527,"title":{},"body":{"components/Dashboard.html":{}}}],["18/21",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["19.99",{"_index":566,"title":{},"body":{"components/Dashboard.html":{}}}],["1].charat(0)).touppercase",{"_index":1502,"title":{},"body":{"components/UpdateForm.html":{}}}],["2",{"_index":521,"title":{},"body":{"components/Dashboard.html":{}}}],["2.3.0",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["20.0.1",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":1759,"title":{},"body":{"index.html":{}}}],["20.1.3",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["20.1.4",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1009,"title":{},"body":{"injectables/ProductService.html":{}}}],["2023",{"_index":543,"title":{},"body":{"components/Dashboard.html":{}}}],["22",{"_index":557,"title":{},"body":{"components/Dashboard.html":{}}}],["23",{"_index":549,"title":{},"body":{"components/Dashboard.html":{}}}],["24",{"_index":520,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["25",{"_index":1438,"title":{},"body":{"components/ToastError.html":{}}}],["299",{"_index":1010,"title":{},"body":{"injectables/ProductService.html":{}}}],["3",{"_index":734,"title":{},"body":{"components/Navbar.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["3.13.0",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["3.8",{"_index":594,"title":{},"body":{"components/Dashboard.html":{}}}],["30",{"_index":572,"title":{},"body":{"components/Dashboard.html":{}}}],["300",{"_index":858,"title":{},"body":{"components/ProductCard.html":{}}}],["3000",{"_index":447,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["30j",{"_index":576,"title":{},"body":{"components/Dashboard.html":{}}}],["33",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["39.3",{"_index":591,"title":{},"body":{"components/Dashboard.html":{}}}],["3m",{"_index":577,"title":{},"body":{"components/Dashboard.html":{}}}],["4.1.10",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["45.00",{"_index":558,"title":{},"body":{"components/Dashboard.html":{}}}],["47",{"_index":588,"title":{},"body":{"components/Dashboard.html":{}}}],["48",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":540,"title":{},"body":{"components/Dashboard.html":{},"injectables/UserService.html":{}}}],["5.4.1",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["5mb",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["6",{"_index":1322,"title":{},"body":{"components/SignIn.html":{}}}],["60",{"_index":857,"title":{},"body":{"components/ProductCard.html":{}}}],["66",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1845,"title":{},"body":{"overview.html":{}}}],["7.0.3",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["7j",{"_index":575,"title":{},"body":{"components/Dashboard.html":{}}}],["8",{"_index":536,"title":{},"body":{"components/Dashboard.html":{}}}],["8.2",{"_index":590,"title":{},"body":{"components/Dashboard.html":{}}}],["83",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["89.90",{"_index":551,"title":{},"body":{"components/Dashboard.html":{}}}],["9/12",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["_issignin",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":624,"title":{},"body":{"injectables/GuardService.html":{}}}],["accessors",{"_index":752,"title":{},"body":{"components/ProductCard.html":{}}}],["accordingly",{"_index":1163,"title":{},"body":{"components/SignIn.html":{}}}],["account",{"_index":1299,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["action",{"_index":769,"title":{},"body":{"components/ProductCard.html":{}}}],["activated",{"_index":623,"title":{},"body":{"injectables/GuardService.html":{}}}],["activatedroutesnapshot",{"_index":619,"title":{},"body":{"injectables/GuardService.html":{}}}],["active",{"_index":721,"title":{},"body":{"components/Navbar.html":{}}}],["activeindex",{"_index":437,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["actuel",{"_index":1563,"title":{},"body":{"injectables/UserService.html":{}}}],["actuellement",{"_index":1560,"title":{},"body":{"injectables/UserService.html":{}}}],["add",{"_index":40,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["add_img_by_product_id",{"_index":12,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["added",{"_index":997,"title":{},"body":{"injectables/ProductService.html":{}}}],["addimageinproduct",{"_index":890,"title":{},"body":{"injectables/ProductService.html":{}}}],["addimageinproduct(id",{"_index":905,"title":{},"body":{"injectables/ProductService.html":{}}}],["adding",{"_index":842,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["additional",{"_index":1836,"title":{},"body":{"index.html":{}}}],["addproduct",{"_index":891,"title":{},"body":{"injectables/ProductService.html":{}}}],["addproduct(product",{"_index":920,"title":{},"body":{"injectables/ProductService.html":{}}}],["address",{"_index":81,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/SignIn.html":{}}}],["adds",{"_index":907,"title":{},"body":{"injectables/ProductService.html":{}}}],["addtocart",{"_index":743,"title":{},"body":{"components/ProductCard.html":{}}}],["addtocart(event",{"_index":776,"title":{},"body":{"components/ProductCard.html":{}}}],["addtocartevent",{"_index":749,"title":{},"body":{"components/ProductCard.html":{}}}],["adjusts",{"_index":1162,"title":{},"body":{"components/SignIn.html":{}}}],["admin",{"_index":61,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["again",{"_index":994,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["ajouter",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"components/Navbar.html":{}}}],["allowedroutesforclient",{"_index":645,"title":{},"body":{"injectables/GuardService.html":{}}}],["allowedroutesforclient.includes(state.url",{"_index":648,"title":{},"body":{"injectables/GuardService.html":{}}}],["allowedtypes",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedtypes.includes(file.type",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["already",{"_index":1186,"title":{},"body":{"components/SignIn.html":{}}}],["analyses",{"_index":601,"title":{},"body":{"components/Dashboard.html":{}}}],["angular",{"_index":1026,"title":{},"body":{"injectables/ProductService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/cdk",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":482,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":969,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":99,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/productImage.html":{}}}],["angular/forms",{"_index":1178,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":486,"title":{},"body":{"components/CircularImage.html":{},"components/UpdateForm.html":{}}}],["angular/material/core",{"_index":1485,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/material/dialog",{"_index":1482,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/material/icon",{"_index":488,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/UpdateForm.html":{}}}],["angular/material/input",{"_index":1483,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/material/select",{"_index":1484,"title":{},"body":{"components/UpdateForm.html":{}}}],["angular/platform",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":153,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"dependencies.html":{}}}],["animate",{"_index":438,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["annuler",{"_index":1534,"title":{},"body":{"components/UpdateForm.html":{}}}],["anti",{"_index":1049,"title":{},"body":{"injectables/ProductService.html":{}}}],["aperçu",{"_index":516,"title":{},"body":{"components/Dashboard.html":{}}}],["api",{"_index":38,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["apiurl",{"_index":904,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["apiurlservice",{"_index":1,"title":{"injectables/ApiUrlService.html":{}},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["app",{"_index":133,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["app.css",{"_index":147,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":145,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":1662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appels",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["application",{"_index":1770,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["applicationconfig",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["après",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["array",{"_index":833,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["array(3).fill",{"_index":476,"title":{},"body":{"components/CircularImage.html":{}}}],["arraybuffer",{"_index":1165,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["arrive",{"_index":1287,"title":{},"body":{"components/SignIn.html":{}}}],["artifacts",{"_index":1791,"title":{},"body":{"index.html":{}}}],["assigner",{"_index":1489,"title":{},"body":{"components/UpdateForm.html":{}}}],["associated",{"_index":797,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["async",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["async/await",{"_index":1568,"title":{},"body":{"injectables/UserService.html":{}}}],["asynchronous",{"_index":949,"title":{},"body":{"injectables/ProductService.html":{}}}],["attempt",{"_index":1066,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["attempts",{"_index":958,"title":{},"body":{"injectables/ProductService.html":{}}}],["au",{"_index":726,"title":{},"body":{"components/Navbar.html":{},"components/UpdateForm.html":{}}}],["aucun",{"_index":1412,"title":{},"body":{"components/ToastError.html":{}}}],["aucune",{"_index":1405,"title":{},"body":{"components/ToastError.html":{}}}],["aujourd'hui",{"_index":537,"title":{},"body":{"components/Dashboard.html":{}}}],["aujourd\\'hui",{"_index":603,"title":{},"body":{"components/Dashboard.html":{}}}],["auth",{"_index":117,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":628,"title":{},"body":{"injectables/GuardService.html":{}}}],["authenticated",{"_index":71,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{}}}],["authenticates",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["authform",{"_index":1073,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["authform.get('avatar')?.invalid",{"_index":1308,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('avatar')?.touched",{"_index":1309,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.errors?.['mismatch",{"_index":1328,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.errors?.['required",{"_index":1327,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.invalid",{"_index":1325,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('confirmpassword')?.touched",{"_index":1326,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.errors?.['email",{"_index":1316,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.errors?.['required",{"_index":1315,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.invalid",{"_index":1313,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('email')?.touched",{"_index":1314,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('name')?.invalid",{"_index":1311,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('name')?.touched",{"_index":1312,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.errors?.['minlength",{"_index":1321,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.errors?.['required",{"_index":1320,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.invalid",{"_index":1318,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get('password')?.touched",{"_index":1319,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'avatar\\')?.invalid",{"_index":1339,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'avatar\\')?.touched",{"_index":1340,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.errors?.[\\'mismatch",{"_index":1354,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.errors?.[\\'required",{"_index":1353,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.invalid",{"_index":1351,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'confirmpassword\\')?.touched",{"_index":1352,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.errors?.[\\'email",{"_index":1346,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.errors?.[\\'required",{"_index":1345,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.invalid",{"_index":1343,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'email\\')?.touched",{"_index":1344,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'name\\')?.invalid",{"_index":1341,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'name\\')?.touched",{"_index":1342,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.errors?.[\\'minlength",{"_index":1350,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.errors?.[\\'required",{"_index":1349,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.invalid",{"_index":1347,"title":{},"body":{"components/SignIn.html":{}}}],["authform.get(\\'password\\')?.touched",{"_index":1348,"title":{},"body":{"components/SignIn.html":{}}}],["authformdata",{"_index":192,"title":{"interfaces/AuthFormData.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["authorization",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["authresponse",{"_index":225,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["authservice",{"_index":233,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"coverage.html":{}}}],["auto",{"_index":451,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["automatically",{"_index":1771,"title":{},"body":{"index.html":{}}}],["automatiquement",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["autorisée",{"_index":652,"title":{},"body":{"injectables/GuardService.html":{}}}],["autres",{"_index":1033,"title":{},"body":{"injectables/ProductService.html":{}}}],["available",{"_index":1782,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":95,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["avatar.jpg",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarfile",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarfile.name",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarfile.type",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatarinput",{"_index":1232,"title":{},"body":{"components/SignIn.html":{}}}],["avatarinput.value",{"_index":1235,"title":{},"body":{"components/SignIn.html":{}}}],["avatarpreview",{"_index":1074,"title":{},"body":{"components/SignIn.html":{}}}],["avec",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["avoid",{"_index":781,"title":{},"body":{"components/ProductCard.html":{}}}],["await",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["back",{"_index":1301,"title":{},"body":{"components/SignIn.html":{}}}],["backend",{"_index":108,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["backoff",{"_index":951,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["badge",{"_index":810,"title":{},"body":{"components/ProductCard.html":{}}}],["badgeclass",{"_index":754,"title":{},"body":{"components/ProductCard.html":{}}}],["badges",{"_index":839,"title":{},"body":{"components/ProductCard.html":{}}}],["badgetext",{"_index":753,"title":{},"body":{"components/ProductCard.html":{}}}],["base",{"_index":960,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["basedelay",{"_index":946,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["baseurl",{"_index":14,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["bearer",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["before",{"_index":962,"title":{},"body":{"injectables/ProductService.html":{}}}],["behaviorsubject",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":610,"title":{},"body":{"injectables/DataService.html":{},"injectables/UserService.html":{}}}],["between",{"_index":1160,"title":{},"body":{"components/SignIn.html":{}}}],["bienvenue",{"_index":513,"title":{},"body":{"components/Dashboard.html":{}}}],["blob",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["blob([json.stringify(userdata",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{}}}],["body",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["bon",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["bord",{"_index":512,"title":{},"body":{"components/Dashboard.html":{}}}],["both",{"_index":1133,"title":{},"body":{"components/SignIn.html":{}}}],["boucle",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browser",{"_index":1713,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":1787,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1788,"title":{},"body":{"index.html":{}}}],["buttondirective",{"_index":1415,"title":{},"body":{"components/ToastError.html":{}}}],["buttons",{"_index":790,"title":{},"body":{"components/ProductCard.html":{}}}],["buyer",{"_index":1329,"title":{},"body":{"components/SignIn.html":{}}}],["buyer&#64;demo.com",{"_index":1338,"title":{},"body":{"components/SignIn.html":{}}}],["buyer@demo.com",{"_index":1356,"title":{},"body":{"components/SignIn.html":{}}}],["c'est",{"_index":1289,"title":{},"body":{"components/SignIn.html":{}}}],["cache",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["call",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["canactivate",{"_index":615,"title":{},"body":{"injectables/GuardService.html":{}}}],["canactivate(route",{"_index":618,"title":{},"body":{"injectables/GuardService.html":{}}}],["canhide",{"_index":744,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["car",{"_index":1515,"title":{},"body":{"components/UpdateForm.html":{}}}],["card",{"_index":740,"title":{},"body":{"components/ProductCard.html":{}}}],["card'},{'name",{"_index":173,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["card.css",{"_index":742,"title":{},"body":{"components/ProductCard.html":{}}}],["card.html",{"_index":741,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts",{"_index":739,"title":{},"body":{"components/ProductCard.html":{},"coverage.html":{}}}],["card.ts:107",{"_index":831,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:115",{"_index":804,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:124",{"_index":777,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:132",{"_index":785,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:141",{"_index":800,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:22",{"_index":762,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:24",{"_index":774,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:26",{"_index":765,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:28",{"_index":771,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:29",{"_index":760,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:37",{"_index":795,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:46",{"_index":808,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:62",{"_index":814,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:76",{"_index":817,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:86",{"_index":822,"title":{},"body":{"components/ProductCard.html":{}}}],["card.ts:96",{"_index":824,"title":{},"body":{"components/ProductCard.html":{}}}],["card/product",{"_index":738,"title":{},"body":{"components/ProductCard.html":{},"coverage.html":{}}}],["carouselcomponent",{"_index":460,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselconfig",{"_index":457,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselcontrolcomponent",{"_index":463,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselcustomconfig",{"_index":434,"title":{"injectables/CarouselCustomConfig.html":{}},"body":{"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"coverage.html":{}}}],["carouselindicatorscomponent",{"_index":483,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselinnercomponent",{"_index":461,"title":{},"body":{"components/CircularImage.html":{}}}],["carouselitemcomponent",{"_index":462,"title":{},"body":{"components/CircularImage.html":{}}}],["carroussel.config",{"_index":485,"title":{},"body":{"components/CircularImage.html":{}}}],["cart",{"_index":768,"title":{},"body":{"components/ProductCard.html":{}}}],["cas",{"_index":1024,"title":{},"body":{"injectables/ProductService.html":{}}}],["case",{"_index":861,"title":{},"body":{"components/ProductCard.html":{}}}],["catalogue",{"_index":733,"title":{},"body":{"components/Navbar.html":{}}}],["catch",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":971,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["catcherror((error",{"_index":980,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["category",{"_index":209,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["ce",{"_index":522,"title":{},"body":{"components/Dashboard.html":{}}}],["centralized",{"_index":106,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["certain",{"_index":786,"title":{},"body":{"components/ProductCard.html":{}}}],["cette",{"_index":528,"title":{},"body":{"components/Dashboard.html":{},"injectables/GuardService.html":{}}}],["champ",{"_index":1217,"title":{},"body":{"components/SignIn.html":{}}}],["change",{"_index":1130,"title":{},"body":{"components/SignIn.html":{}}}],["changed",{"_index":1192,"title":{},"body":{"components/SignIn.html":{}}}],["changement",{"_index":1245,"title":{},"body":{"components/SignIn.html":{}}}],["changements",{"_index":1182,"title":{},"body":{"components/SignIn.html":{}}}],["changepassword(currentpassword",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["changes",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["changing",{"_index":452,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"injectables/UserService.html":{}}}],["characters",{"_index":1323,"title":{},"body":{"components/SignIn.html":{}}}],["check",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["checkauth",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["checknetworkconnection",{"_index":1539,"title":{},"body":{"injectables/UserService.html":{}}}],["checks",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["choose",{"_index":1833,"title":{},"body":{"index.html":{}}}],["circular",{"_index":164,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["circularimage",{"_index":163,"title":{"components/CircularImage.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["claim",{"_index":696,"title":{},"body":{"components/Navbar.html":{}}}],["class",{"_index":111,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["classe",{"_index":720,"title":{},"body":{"components/Navbar.html":{}}}],["cleanavatarinput",{"_index":1079,"title":{},"body":{"components/SignIn.html":{}}}],["cleaned",{"_index":1236,"title":{},"body":{"components/SignIn.html":{}}}],["cleans",{"_index":1154,"title":{},"body":{"components/SignIn.html":{}}}],["clear",{"_index":1108,"title":{},"body":{"components/SignIn.html":{}}}],["cleared",{"_index":1105,"title":{},"body":{"components/SignIn.html":{}}}],["clearing",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearmessages",{"_index":1080,"title":{},"body":{"components/SignIn.html":{}}}],["clearmessages(delay",{"_index":1101,"title":{},"body":{"components/SignIn.html":{}}}],["clears",{"_index":1103,"title":{},"body":{"components/SignIn.html":{}}}],["cli",{"_index":1757,"title":{},"body":{"index.html":{}}}],["click",{"_index":783,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["client",{"_index":199,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["clients",{"_index":598,"title":{},"body":{"components/Dashboard.html":{}}}],["cliqu",{"_index":728,"title":{},"body":{"components/Navbar.html":{}}}],["close",{"_index":1533,"title":{},"body":{"components/UpdateForm.html":{}}}],["cmd",{"_index":542,"title":{},"body":{"components/Dashboard.html":{}}}],["code",{"_index":1021,"title":{},"body":{"injectables/ProductService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["come",{"_index":1831,"title":{},"body":{"index.html":{}}}],["comerce",{"_index":151,"title":{},"body":{"components/App.html":{}}}],["command",{"_index":1826,"title":{},"body":{"index.html":{}}}],["commande",{"_index":596,"title":{},"body":{"components/Dashboard.html":{}}}],["commandes",{"_index":525,"title":{},"body":{"components/Dashboard.html":{}}}],["commands",{"_index":1804,"title":{},"body":{"index.html":{}}}],["comme",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["commented",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["commonmodule",{"_index":459,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["compenant",{"_index":1417,"title":{},"body":{"components/ToastError.html":{}}}],["compenant.ts",{"_index":1439,"title":{},"body":{"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["compile",{"_index":1789,"title":{},"body":{"index.html":{}}}],["complete",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["completed",{"_index":222,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["complètement",{"_index":1094,"title":{},"body":{"components/SignIn.html":{}}}],["compodoc",{"_index":1725,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compodoc/compodoc",{"_index":1806,"title":{},"body":{"index.html":{}}}],["compodoc:buildgenerate",{"_index":1798,"title":{},"body":{"index.html":{}}}],["compodoc:servegenerate",{"_index":1801,"title":{},"body":{"index.html":{}}}],["compodocalternative",{"_index":1802,"title":{},"body":{"index.html":{}}}],["component",{"_index":132,"title":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":161,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["components",{"_index":134,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"index.html":{},"overview.html":{}}}],["composants",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["compte",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["computed",{"_index":680,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["computes",{"_index":809,"title":{},"body":{"components/ProductCard.html":{}}}],["confirm",{"_index":1324,"title":{},"body":{"components/SignIn.html":{}}}],["confirmpassword",{"_index":196,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["connect",{"_index":1561,"title":{},"body":{"injectables/UserService.html":{}}}],["connexion",{"_index":1282,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["considère",{"_index":1027,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.error('authentication",{"_index":1292,"title":{},"body":{"components/SignIn.html":{}}}],["console.error('error",{"_index":981,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["console.error('registration",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error('test",{"_index":989,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.error(`error",{"_index":1040,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.error(errormsg",{"_index":1047,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(\"effac",{"_index":1014,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(\"emission",{"_index":846,"title":{},"body":{"components/ProductCard.html":{}}}],["console.log('account",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('adding",{"_index":1035,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('avatar",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["console.log('debug",{"_index":699,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["console.log('deleting",{"_index":1002,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('fetching",{"_index":977,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('image",{"_index":1032,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('login",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('navigating",{"_index":505,"title":{},"body":{"components/Dashboard.html":{},"components/Navbar.html":{}}}],["console.log('product",{"_index":996,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('registration",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sending",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('signing",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('toggled",{"_index":1247,"title":{},"body":{"components/SignIn.html":{}}}],["console.log('user",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('valid",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`${key",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`image",{"_index":1044,"title":{},"body":{"injectables/ProductService.html":{}}}],["const",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["constructor(apiurl",{"_index":900,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(apiurlservice",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservice",{"_index":616,"title":{},"body":{"injectables/GuardService.html":{}}}],["constructor(datasharedservice",{"_index":759,"title":{},"body":{"components/ProductCard.html":{}}}],["constructor(dialogref",{"_index":1462,"title":{},"body":{"components/UpdateForm.html":{}}}],["constructor(fb",{"_index":1088,"title":{},"body":{"components/SignIn.html":{}}}],["constructor(private",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["constructor(route",{"_index":667,"title":{},"body":{"components/Navbar.html":{}}}],["constructor(router",{"_index":500,"title":{},"body":{"components/Dashboard.html":{}}}],["containing",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"miscellaneous/functions.html":{}}}],["content",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["contenu",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["continue",{"_index":1305,"title":{},"body":{"components/SignIn.html":{}}}],["control",{"_index":634,"title":{},"body":{"injectables/GuardService.html":{},"components/SignIn.html":{}}}],["control.value",{"_index":1257,"title":{},"body":{"components/SignIn.html":{}}}],["controls",{"_index":1111,"title":{},"body":{"components/SignIn.html":{}}}],["contrôler",{"_index":1428,"title":{},"body":{"components/ToastError.html":{}}}],["converting",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["coreui/angular",{"_index":484,"title":{},"body":{"components/CircularImage.html":{},"components/ToastError.html":{},"dependencies.html":{}}}],["coreui/coreui",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["coreui/icons",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["correction",{"_index":871,"title":{},"body":{"components/ProductCard.html":{}}}],["correctly",{"_index":1263,"title":{},"body":{"components/SignIn.html":{}}}],["cours",{"_index":553,"title":{},"body":{"components/Dashboard.html":{}}}],["coverage",{"_index":1656,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coveragetest",{"_index":1811,"title":{},"body":{"index.html":{}}}],["create",{"_index":53,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["create_product",{"_index":15,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["created",{"_index":999,"title":{},"body":{"injectables/ProductService.html":{}}}],["createdat",{"_index":202,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["createform",{"_index":1081,"title":{},"body":{"components/SignIn.html":{}}}],["creating",{"_index":1334,"title":{},"body":{"components/SignIn.html":{}}}],["creation",{"_index":812,"title":{},"body":{"components/ProductCard.html":{}}}],["credentials",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["créer",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"components/SignIn.html":{}}}],["css",{"_index":815,"title":{},"body":{"components/ProductCard.html":{}}}],["currency",{"_index":826,"title":{},"body":{"components/ProductCard.html":{}}}],["current",{"_index":77,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["currently",{"_index":70,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["currentnotification",{"_index":1377,"title":{},"body":{"components/ToastError.html":{}}}],["currentpassword",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"injectables/UserService.html":{}}}],["currentuser()?.name",{"_index":735,"title":{},"body":{"components/Navbar.html":{}}}],["currentuser?.id",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["currentusersubject",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["custom",{"_index":1139,"title":{},"body":{"components/SignIn.html":{},"index.html":{}}}],["côt",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["d'authentification",{"_index":1148,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["d'état",{"_index":693,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["d\\'authentification",{"_index":1172,"title":{},"body":{"components/SignIn.html":{}}}],["dans",{"_index":1018,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["dashboard",{"_index":166,"title":{"components/Dashboard.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["dashboard'},{'name",{"_index":167,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["dashboard.css",{"_index":497,"title":{},"body":{"components/Dashboard.html":{}}}],["dashboard.html",{"_index":496,"title":{},"body":{"components/Dashboard.html":{}}}],["data",{"_index":229,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["data.error",{"_index":708,"title":{},"body":{"components/Navbar.html":{}}}],["data.success",{"_index":705,"title":{},"body":{"components/Navbar.html":{}}}],["data.user.avatar",{"_index":1494,"title":{},"body":{"components/UpdateForm.html":{}}}],["data.user?.email",{"_index":1491,"title":{},"body":{"components/UpdateForm.html":{}}}],["data.user?.name",{"_index":1490,"title":{},"body":{"components/UpdateForm.html":{}}}],["data.user?.password",{"_index":1492,"title":{},"body":{"components/UpdateForm.html":{}}}],["data_form",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.email",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.name",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.password",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_form.role",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataservice",{"_index":247,"title":{"injectables/DataService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"coverage.html":{}}}],["datasharedservice",{"_index":761,"title":{},"body":{"components/ProductCard.html":{}}}],["datasubject",{"_index":605,"title":{},"body":{"injectables/DataService.html":{}}}],["date",{"_index":203,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["date().gettime",{"_index":853,"title":{},"body":{"components/ProductCard.html":{}}}],["date(this.product.createdat",{"_index":854,"title":{},"body":{"components/ProductCard.html":{}}}],["dayssincecreation",{"_index":851,"title":{},"body":{"components/ProductCard.html":{}}}],["de",{"_index":511,"title":{},"body":{"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["debug",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":1473,"title":{},"body":{"components/UpdateForm.html":{}}}],["default",{"_index":35,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":959,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["defined",{"_index":33,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":56,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["delete_img_by_media_id",{"_index":16,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["delete_product_by_id",{"_index":17,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["delete_user",{"_index":18,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["deleteaccount",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["deleted",{"_index":798,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["deleteimage",{"_index":745,"title":{},"body":{"components/ProductCard.html":{}}}],["deleteimage(id",{"_index":794,"title":{},"body":{"components/ProductCard.html":{}}}],["deleteimageinproduct",{"_index":892,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteimageinproduct(id",{"_index":922,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct",{"_index":893,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct(id",{"_index":925,"title":{},"body":{"injectables/ProductService.html":{}}}],["deletes",{"_index":924,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleting",{"_index":843,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["deletion",{"_index":772,"title":{},"body":{"components/ProductCard.html":{}}}],["demo",{"_index":1336,"title":{},"body":{"components/SignIn.html":{}}}],["dependencies",{"_index":1706,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depuis",{"_index":938,"title":{},"body":{"injectables/ProductService.html":{}}}],["derniers",{"_index":573,"title":{},"body":{"components/Dashboard.html":{}}}],["dernières",{"_index":541,"title":{},"body":{"components/Dashboard.html":{}}}],["des",{"_index":568,"title":{},"body":{"components/Dashboard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["description",{"_index":46,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["descriptive",{"_index":1742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["detailed",{"_index":1838,"title":{},"body":{"index.html":{}}}],["details",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["determines",{"_index":622,"title":{},"body":{"injectables/GuardService.html":{},"components/ProductCard.html":{}}}],["development",{"_index":1760,"title":{},"body":{"index.html":{}}}],["dialogref",{"_index":1454,"title":{},"body":{"components/UpdateForm.html":{}}}],["dialogref.close",{"_index":1516,"title":{},"body":{"components/UpdateForm.html":{}}}],["dialogue",{"_index":1510,"title":{},"body":{"components/UpdateForm.html":{}}}],["dim",{"_index":584,"title":{},"body":{"components/Dashboard.html":{}}}],["direct",{"_index":1803,"title":{},"body":{"index.html":{}}}],["direction",{"_index":439,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["directive",{"_index":159,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"index.html":{}}}],["directory",{"_index":1793,"title":{},"body":{"index.html":{}}}],["displayed",{"_index":763,"title":{},"body":{"components/ProductCard.html":{}}}],["displaying",{"_index":836,"title":{},"body":{"components/ProductCard.html":{}}}],["displays",{"_index":1127,"title":{},"body":{"components/SignIn.html":{}}}],["dist",{"_index":1792,"title":{},"body":{"index.html":{}}}],["document.queryselector('input[type=\"file\"][formcontrolname=\"avatar",{"_index":1233,"title":{},"body":{"components/SignIn.html":{}}}],["document.queryselectorall('.navbar",{"_index":723,"title":{},"body":{"components/Navbar.html":{}}}],["documentation",{"_index":1657,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1156,"title":{},"body":{"components/SignIn.html":{}}}],["dom",{"_index":136,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["données",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["double",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["du",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["dupont",{"_index":548,"title":{},"body":{"components/Dashboard.html":{}}}],["during",{"_index":1271,"title":{},"body":{"components/SignIn.html":{}}}],["déconnecte",{"_index":1573,"title":{},"body":{"injectables/UserService.html":{}}}],["défaut",{"_index":1393,"title":{},"body":{"components/ToastError.html":{}}}],["définir",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["délai",{"_index":1048,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["détail/corps",{"_index":1423,"title":{},"body":{"components/ToastError.html":{}}}],["détaillées",{"_index":602,"title":{},"body":{"components/Dashboard.html":{}}}],["détails",{"_index":533,"title":{},"body":{"components/Dashboard.html":{}}}],["déterminer",{"_index":1420,"title":{},"body":{"components/ToastError.html":{}}}],["e",{"_index":150,"title":{},"body":{"components/App.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["e.g",{"_index":788,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["e.target?.result",{"_index":1214,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["e2e",{"_index":1828,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1830,"title":{},"body":{"index.html":{}}}],["ecomerce",{"_index":1753,"title":{},"body":{"index.html":{}}}],["efface",{"_index":1149,"title":{},"body":{"components/SignIn.html":{}}}],["effect",{"_index":685,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["element",{"_index":158,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["elements",{"_index":787,"title":{},"body":{"components/ProductCard.html":{}}}],["email",{"_index":80,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["emits",{"_index":766,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["empty",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["en",{"_index":115,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/Dashboard.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["end",{"_index":1398,"title":{},"body":{"components/ToastError.html":{},"index.html":{}}}],["endpoint",{"_index":39,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["endpoints",{"_index":109,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["enregistrer",{"_index":1536,"title":{},"body":{"components/UpdateForm.html":{}}}],["enter",{"_index":1317,"title":{},"body":{"components/SignIn.html":{}}}],["environment.apiurl",{"_index":114,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["err",{"_index":987,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["err.success",{"_index":1268,"title":{},"body":{"components/SignIn.html":{}}}],["erreur",{"_index":943,"title":{},"body":{"injectables/ProductService.html":{},"components/ToastError.html":{}}}],["erreurs",{"_index":1034,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["error",{"_index":224,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["error'},{'name",{"_index":184,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["error('invalid",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('no",{"_index":991,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["error.css",{"_index":1365,"title":{},"body":{"components/ToastError.html":{}}}],["error.error",{"_index":988,"title":{},"body":{"injectables/ProductService.html":{}}}],["error.html",{"_index":1364,"title":{},"body":{"components/ToastError.html":{}}}],["error.message",{"_index":1000,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["error.status",{"_index":1023,"title":{},"body":{"injectables/ProductService.html":{}}}],["error.ts",{"_index":1358,"title":{},"body":{"components/ToastError.html":{},"coverage.html":{}}}],["error.ts:20",{"_index":1379,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:22",{"_index":1399,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:23",{"_index":1414,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:24",{"_index":1396,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:27",{"_index":1390,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:33",{"_index":1413,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:44",{"_index":1407,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:55",{"_index":1394,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:65",{"_index":1380,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:74",{"_index":1402,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:78",{"_index":1385,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:82",{"_index":1384,"title":{},"body":{"components/ToastError.html":{}}}],["error.ts:87",{"_index":1382,"title":{},"body":{"components/ToastError.html":{}}}],["error/toast",{"_index":688,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["error?.message",{"_index":1295,"title":{},"body":{"components/SignIn.html":{}}}],["errormessage",{"_index":232,"title":{"interfaces/ErrorMessage.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["errormsg",{"_index":1045,"title":{},"body":{"injectables/ProductService.html":{}}}],["errors",{"_index":1037,"title":{},"body":{"injectables/ProductService.html":{},"miscellaneous/functions.html":{}}}],["errors.join",{"_index":1061,"title":{},"body":{"injectables/ProductService.html":{}}}],["errors.length",{"_index":1056,"title":{},"body":{"injectables/ProductService.html":{}}}],["errors.push(errormsg",{"_index":1046,"title":{},"body":{"injectables/ProductService.html":{}}}],["errors[0",{"_index":1062,"title":{},"body":{"injectables/ProductService.html":{}}}],["est",{"_index":1421,"title":{},"body":{"components/ToastError.html":{},"injectables/UserService.html":{}}}],["et",{"_index":1096,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["etc",{"_index":1816,"title":{},"body":{"index.html":{}}}],["eur",{"_index":827,"title":{},"body":{"components/ProductCard.html":{}}}],["even",{"_index":1158,"title":{},"body":{"components/SignIn.html":{}}}],["event",{"_index":672,"title":{},"body":{"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["event.preventdefault",{"_index":718,"title":{},"body":{"components/Navbar.html":{}}}],["event.stoppropagation",{"_index":867,"title":{},"body":{"components/ProductCard.html":{}}}],["event.target",{"_index":729,"title":{},"body":{"components/Navbar.html":{}}}],["event.target.files[0",{"_index":1191,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["eventcoalescing",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":764,"title":{},"body":{"components/ProductCard.html":{},"components/UpdateForm.html":{}}}],["example",{"_index":1764,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1822,"title":{},"body":{"index.html":{}}}],["exhausted",{"_index":955,"title":{},"body":{"injectables/ProductService.html":{}}}],["existe",{"_index":644,"title":{},"body":{"injectables/GuardService.html":{}}}],["existing",{"_index":910,"title":{},"body":{"injectables/ProductService.html":{}}}],["exists",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["exponential",{"_index":950,"title":{},"body":{"injectables/ProductService.html":{}}}],["exponentiel",{"_index":1575,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":110,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["extracts",{"_index":832,"title":{},"body":{"components/ProductCard.html":{}}}],["failed",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fails",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["failure",{"_index":919,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["false",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fb",{"_index":1091,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["fera",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["ferme",{"_index":1509,"title":{},"body":{"components/UpdateForm.html":{}}}],["fetch('/api/health",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["fetch(this.apiurlservice.get_current_user",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch(this.apiurlservice.login",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch(this.apiurlservice.register",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetched",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["fetches",{"_index":932,"title":{},"body":{"injectables/ProductService.html":{}}}],["fetching",{"_index":975,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fichier",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["fichiers",{"_index":1039,"title":{},"body":{"injectables/ProductService.html":{}}}],["fields",{"_index":1117,"title":{},"body":{"components/SignIn.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["file.name",{"_index":1042,"title":{},"body":{"injectables/ProductService.html":{}}}],["file.size",{"_index":1193,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["file.type.startswith('image",{"_index":1201,"title":{},"body":{"components/SignIn.html":{}}}],["filereader",{"_index":1211,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["files",{"_index":912,"title":{},"body":{"injectables/ProductService.html":{},"index.html":{}}}],["fill",{"_index":1261,"title":{},"body":{"components/SignIn.html":{}}}],["final",{"_index":1427,"title":{},"body":{"components/ToastError.html":{}}}],["finally",{"_index":1296,"title":{},"body":{"components/SignIn.html":{}}}],["first",{"_index":963,"title":{},"body":{"injectables/ProductService.html":{}}}],["firstvaluefrom",{"_index":970,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["following",{"_index":1825,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":1332,"title":{},"body":{"components/SignIn.html":{}}}],["form",{"_index":169,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["form.css",{"_index":1453,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.html",{"_index":1452,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts",{"_index":1443,"title":{},"body":{"components/UpdateForm.html":{},"coverage.html":{}}}],["form.ts:104",{"_index":1468,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:30",{"_index":1479,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:31",{"_index":1478,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:32",{"_index":1477,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:33",{"_index":1465,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:36",{"_index":1476,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:38",{"_index":1475,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:56",{"_index":1467,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:65",{"_index":1470,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:77",{"_index":1472,"title":{},"body":{"components/UpdateForm.html":{}}}],["form.ts:81",{"_index":1471,"title":{},"body":{"components/UpdateForm.html":{}}}],["form/update",{"_index":1442,"title":{},"body":{"components/UpdateForm.html":{},"coverage.html":{}}}],["format",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["formats",{"_index":825,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["formatted",{"_index":929,"title":{},"body":{"injectables/ProductService.html":{}}}],["formbuilder",{"_index":1089,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["formcontrol",{"_index":1142,"title":{},"body":{"components/SignIn.html":{}}}],["formdata",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["formdata.append('avatar",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["formdata.append('data",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{}}}],["formdata.entries",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["formdata.length",{"_index":1057,"title":{},"body":{"injectables/ProductService.html":{}}}],["formgroup",{"_index":1113,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["formproduct",{"_index":168,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["forms",{"_index":1179,"title":{},"body":{"components/SignIn.html":{}}}],["formsmodule",{"_index":1446,"title":{},"body":{"components/UpdateForm.html":{}}}],["formulaire",{"_index":1147,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["found",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":1832,"title":{},"body":{"index.html":{}}}],["french",{"_index":828,"title":{},"body":{"components/ProductCard.html":{}}}],["friendly",{"_index":1740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["full",{"_index":1310,"title":{},"body":{"components/SignIn.html":{}}}],["function",{"_index":956,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["functions",{"_index":1737,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1779,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1755,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1739,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["gestion",{"_index":692,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["get_all_products",{"_index":19,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_all_users",{"_index":20,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_current_user",{"_index":21,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_my_all_product",{"_index":22,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_product_by_id",{"_index":23,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_user_by_email",{"_index":24,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_user_by_id",{"_index":25,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["get_user_by_name",{"_index":26,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["getauthheaders",{"_index":1540,"title":{},"body":{"injectables/UserService.html":{}}}],["getbadgeclass",{"_index":813,"title":{},"body":{"components/ProductCard.html":{}}}],["getbadgetext",{"_index":807,"title":{},"body":{"components/ProductCard.html":{}}}],["getcurrentuser",{"_index":1541,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1542,"title":{},"body":{"injectables/UserService.html":{}}}],["getheadertoken",{"_index":894,"title":{},"body":{"injectables/ProductService.html":{}}}],["getinitials",{"_index":1457,"title":{},"body":{"components/UpdateForm.html":{}}}],["getinitials(name",{"_index":1466,"title":{},"body":{"components/UpdateForm.html":{}}}],["getmyproduct",{"_index":895,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductbyid",{"_index":896,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductbyid(id",{"_index":934,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductimageurls",{"_index":830,"title":{},"body":{"components/ProductCard.html":{}}}],["getproductprice",{"_index":823,"title":{},"body":{"components/ProductCard.html":{}}}],["getproducts",{"_index":897,"title":{},"body":{"injectables/ProductService.html":{}}}],["getprofile",{"_index":1543,"title":{},"body":{"injectables/UserService.html":{}}}],["getprofileasync",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{}}}],["getstockstatusclass",{"_index":821,"title":{},"body":{"components/ProductCard.html":{}}}],["getstockstatustext",{"_index":816,"title":{},"body":{"components/ProductCard.html":{}}}],["getting",{"_index":1751,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["gif",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":1055,"title":{},"body":{"injectables/ProductService.html":{}}}],["gotomyproduct",{"_index":498,"title":{},"body":{"components/Dashboard.html":{}}}],["gotoupdateproduct",{"_index":746,"title":{},"body":{"components/ProductCard.html":{}}}],["gotoupdateproduct(event",{"_index":799,"title":{},"body":{"components/ProductCard.html":{}}}],["gsap",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["guard",{"_index":630,"title":{},"body":{"injectables/GuardService.html":{}}}],["guards",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["guardservice",{"_index":613,"title":{"injectables/GuardService.html":{}},"body":{"injectables/GuardService.html":{},"coverage.html":{}}}],["génère",{"_index":1555,"title":{},"body":{"injectables/UserService.html":{}}}],["gérer",{"_index":567,"title":{},"body":{"components/Dashboard.html":{}}}],["handled",{"_index":1031,"title":{},"body":{"injectables/ProductService.html":{}}}],["handlehttperror",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlehttperror(error",{"_index":982,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["handlehttperror(error).message",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["handlehttperror(res).message",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlehttperror(result",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlehttperror(result).message",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlers",{"_index":784,"title":{},"body":{"components/ProductCard.html":{}}}],["handles",{"_index":838,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["handling",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasmessage",{"_index":1366,"title":{},"body":{"components/ToastError.html":{}}}],["head",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["header",{"_index":930,"title":{},"body":{"injectables/ProductService.html":{}}}],["headers",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["helpbuilding",{"_index":1786,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":791,"title":{},"body":{"components/ProductCard.html":{}}}],["home",{"_index":1189,"title":{},"body":{"components/SignIn.html":{}}}],["hot",{"_index":1800,"title":{},"body":{"index.html":{}}}],["html",{"_index":157,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["htmlelement).classlist.add('active",{"_index":730,"title":{},"body":{"components/Navbar.html":{}}}],["htmlinputelement",{"_index":1234,"title":{},"body":{"components/SignIn.html":{}}}],["http",{"_index":901,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1769,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1818,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":902,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["httperrorresponse",{"_index":967,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["httpheaders",{"_index":1557,"title":{},"body":{"injectables/UserService.html":{}}}],["httpresponse",{"_index":968,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpresponse.body",{"_index":1013,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpresponse.ok",{"_index":1012,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpresponse.status",{"_index":1022,"title":{},"body":{"injectables/ProductService.html":{}}}],["https://localhost:8443",{"_index":49,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["human",{"_index":818,"title":{},"body":{"components/ProductCard.html":{}}}],["ici",{"_index":1288,"title":{},"body":{"components/SignIn.html":{}}}],["icon",{"_index":1416,"title":{},"body":{"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["icon'},{'name",{"_index":187,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["id",{"_index":43,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/CircularImage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["identifier",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["if(!issignup",{"_index":1330,"title":{},"body":{"components/SignIn.html":{}}}],["if(issignup",{"_index":1306,"title":{},"body":{"components/SignIn.html":{}}}],["if(loading",{"_index":1333,"title":{},"body":{"components/SignIn.html":{}}}],["image",{"_index":41,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["image'},{'name",{"_index":165,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["image(s",{"_index":1058,"title":{},"body":{"injectables/ProductService.html":{}}}],["image.css",{"_index":468,"title":{},"body":{"components/CircularImage.html":{}}}],["image.html",{"_index":467,"title":{},"body":{"components/CircularImage.html":{}}}],["image.imagepath",{"_index":865,"title":{},"body":{"components/ProductCard.html":{}}}],["image.ts",{"_index":454,"title":{},"body":{"components/CircularImage.html":{},"coverage.html":{}}}],["image.ts:24",{"_index":473,"title":{},"body":{"components/CircularImage.html":{}}}],["image.ts:25",{"_index":472,"title":{},"body":{"components/CircularImage.html":{}}}],["image.ts:28",{"_index":474,"title":{},"body":{"components/CircularImage.html":{}}}],["image/carroussel.config.ts",{"_index":436,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"coverage.html":{}}}],["image/carroussel.config.ts:10",{"_index":446,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/carroussel.config.ts:12",{"_index":448,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/carroussel.config.ts:6",{"_index":442,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/carroussel.config.ts:8",{"_index":443,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["image/circular",{"_index":453,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"coverage.html":{}}}],["image/gif",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["image/jpeg",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["image/jpg",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["image/png",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["image/webp",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["imagepath",{"_index":216,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["images",{"_index":844,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["imageurls",{"_index":211,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["immediate",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["immediately",{"_index":1106,"title":{},"body":{"components/SignIn.html":{}}}],["implementation",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":633,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["import",{"_index":98,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["imports",{"_index":141,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["in'},{'name",{"_index":181,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["in.css",{"_index":1072,"title":{},"body":{"components/SignIn.html":{}}}],["in.html",{"_index":1071,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts",{"_index":1069,"title":{},"body":{"components/SignIn.html":{},"coverage.html":{}}}],["in.ts:102",{"_index":1109,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:117",{"_index":1145,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:131",{"_index":1092,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:155",{"_index":1151,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:169",{"_index":1159,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:191",{"_index":1138,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:20",{"_index":1164,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:205",{"_index":1131,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:21",{"_index":1170,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:22",{"_index":1171,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:23",{"_index":1166,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:24",{"_index":1176,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:25",{"_index":1168,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:269",{"_index":1115,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:28",{"_index":1169,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:280",{"_index":1102,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:29",{"_index":1177,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:32",{"_index":1175,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:38",{"_index":1174,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:40",{"_index":1090,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:50",{"_index":1121,"title":{},"body":{"components/SignIn.html":{}}}],["in.ts:64",{"_index":1123,"title":{},"body":{"components/SignIn.html":{}}}],["in/sign",{"_index":1068,"title":{},"body":{"components/SignIn.html":{},"coverage.html":{}}}],["includes",{"_index":1776,"title":{},"body":{"index.html":{}}}],["including",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":778,"title":{},"body":{"components/ProductCard.html":{}}}],["indicating",{"_index":627,"title":{},"body":{"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["indisponible",{"_index":881,"title":{},"body":{"components/ProductCard.html":{}}}],["individual",{"_index":915,"title":{},"body":{"injectables/ProductService.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["information",{"_index":1406,"title":{},"body":{"components/ToastError.html":{},"index.html":{}}}],["informations",{"_index":1529,"title":{},"body":{"components/UpdateForm.html":{}}}],["inférieur",{"_index":561,"title":{},"body":{"components/Dashboard.html":{}}}],["initialized",{"_index":1114,"title":{},"body":{"components/SignIn.html":{}}}],["initializes",{"_index":1110,"title":{},"body":{"components/SignIn.html":{}}}],["inject",{"_index":1480,"title":{},"body":{"components/UpdateForm.html":{}}}],["inject(mat_dialog_data",{"_index":1474,"title":{},"body":{"components/UpdateForm.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injection",{"_index":1486,"title":{},"body":{"components/UpdateForm.html":{}}}],["input",{"_index":480,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["inputs",{"_index":470,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{},"components/ToastError.html":{}}}],["inscription",{"_index":1266,"title":{},"body":{"components/SignIn.html":{}}}],["instanceof",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["interacting",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":1180,"title":{},"body":{"components/SignIn.html":{}}}],["interactions",{"_index":840,"title":{},"body":{"components/ProductCard.html":{}}}],["interacts",{"_index":1135,"title":{},"body":{"components/SignIn.html":{}}}],["interface",{"_index":191,"title":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["interfaces",{"_index":193,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"overview.html":{},"interfaces/productImage.html":{}}}],["interval",{"_index":440,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["invalid",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["invers",{"_index":1750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inverse",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inverser",{"_index":1749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isauthenticatedsync",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{}}}],["isseller",{"_index":662,"title":{},"body":{"components/Navbar.html":{}}}],["issignin",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{}}}],["issignup",{"_index":1075,"title":{},"body":{"components/SignIn.html":{}}}],["isvalid",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["janvier",{"_index":550,"title":{},"body":{"components/Dashboard.html":{}}}],["jd",{"_index":546,"title":{},"body":{"components/Dashboard.html":{}}}],["jean",{"_index":547,"title":{},"body":{"components/Dashboard.html":{}}}],["jeu",{"_index":581,"title":{},"body":{"components/Dashboard.html":{}}}],["join",{"_index":1302,"title":{},"body":{"components/SignIn.html":{}}}],["jour",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["jours",{"_index":574,"title":{},"body":{"components/Dashboard.html":{}}}],["jpeg",{"_index":1526,"title":{},"body":{"components/UpdateForm.html":{}}}],["jpg",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["json",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(data_form",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1823,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["key",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["l'avatar",{"_index":1095,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["l'icône",{"_index":1424,"title":{},"body":{"components/ToastError.html":{}}}],["l'id",{"_index":939,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["l'input",{"_index":1231,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{}}}],["l'objet",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["l'utilisateur",{"_index":1276,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["la",{"_index":691,"title":{},"body":{"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["large",{"_index":1199,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["last",{"_index":953,"title":{},"body":{"injectables/ProductService.html":{}}}],["lasterror",{"_index":1065,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["le",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["legend",{"_index":156,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["les",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["lien",{"_index":727,"title":{},"body":{"components/Navbar.html":{}}}],["liens",{"_index":722,"title":{},"body":{"components/Navbar.html":{}}}],["limit",{"_index":849,"title":{},"body":{"components/ProductCard.html":{}}}],["limited",{"_index":862,"title":{},"body":{"components/ProductCard.html":{}}}],["link').foreach(link",{"_index":724,"title":{},"body":{"components/Navbar.html":{}}}],["link.classlist.remove('active",{"_index":725,"title":{},"body":{"components/Navbar.html":{}}}],["list",{"_index":1748,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["list'},{'name",{"_index":175,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["list.ts",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["list/product",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["liste",{"_index":599,"title":{},"body":{"components/Dashboard.html":{}}}],["literal",{"_index":1464,"title":{},"body":{"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["livr",{"_index":545,"title":{},"body":{"components/Dashboard.html":{}}}],["liés",{"_index":1100,"title":{},"body":{"components/SignIn.html":{}}}],["load",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["loaded",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["loading",{"_index":1076,"title":{},"body":{"components/SignIn.html":{}}}],["local",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"index.html":{}}}],["locale",{"_index":829,"title":{},"body":{"components/ProductCard.html":{}}}],["locales",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.clear",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('token",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["location",{"_index":107,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["location.pathname",{"_index":869,"title":{},"body":{"components/ProductCard.html":{}}}],["lock",{"_index":1532,"title":{},"body":{"components/UpdateForm.html":{}}}],["log",{"_index":993,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["logger",{"_index":1181,"title":{},"body":{"components/SignIn.html":{}}}],["login",{"_index":27,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":736,"title":{},"body":{"components/Navbar.html":{},"injectables/UserService.html":{}}}],["lors",{"_index":1244,"title":{},"body":{"components/SignIn.html":{}}}],["lun",{"_index":578,"title":{},"body":{"components/Dashboard.html":{}}}],["maintenant",{"_index":1419,"title":{},"body":{"components/ToastError.html":{}}}],["management",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductManagement.html":{},"injectables/UserService.html":{}}}],["management'},{'name",{"_index":177,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["management.css",{"_index":886,"title":{},"body":{"components/ProductManagement.html":{}}}],["management.html",{"_index":885,"title":{},"body":{"components/ProductManagement.html":{}}}],["management.ts",{"_index":884,"title":{},"body":{"components/ProductManagement.html":{},"coverage.html":{}}}],["management/product",{"_index":883,"title":{},"body":{"components/ProductManagement.html":{},"coverage.html":{}}}],["manages",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["managing",{"_index":103,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["map",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["map((httpresponse",{"_index":1011,"title":{},"body":{"injectables/ProductService.html":{}}}],["mar",{"_index":579,"title":{},"body":{"components/Dashboard.html":{}}}],["markallfieldsastouched",{"_index":1082,"title":{},"body":{"components/SignIn.html":{}}}],["marketplace",{"_index":1303,"title":{},"body":{"components/SignIn.html":{}}}],["marks",{"_index":1116,"title":{},"body":{"components/SignIn.html":{}}}],["marquer",{"_index":1216,"title":{},"body":{"components/SignIn.html":{}}}],["martin",{"_index":556,"title":{},"body":{"components/Dashboard.html":{}}}],["mat_dialog_data",{"_index":1481,"title":{},"body":{"components/UpdateForm.html":{}}}],["matbuttonmodule",{"_index":1450,"title":{},"body":{"components/UpdateForm.html":{}}}],["matbuttontogglemodule",{"_index":465,"title":{},"body":{"components/CircularImage.html":{}}}],["match",{"_index":1141,"title":{},"body":{"components/SignIn.html":{}}}],["matching",{"_index":131,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/productImage.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["matdialogactions",{"_index":1444,"title":{},"body":{"components/UpdateForm.html":{}}}],["matdialogmodule",{"_index":1445,"title":{},"body":{"components/UpdateForm.html":{}}}],["matdialogref",{"_index":1463,"title":{},"body":{"components/UpdateForm.html":{}}}],["material",{"_index":1813,"title":{},"body":{"index.html":{}}}],["materialthe",{"_index":1817,"title":{},"body":{"index.html":{}}}],["math.floor",{"_index":852,"title":{},"body":{"components/ProductCard.html":{}}}],["maticon",{"_index":1451,"title":{},"body":{"components/UpdateForm.html":{}}}],["maticonmodule",{"_index":466,"title":{},"body":{"components/CircularImage.html":{},"components/ProductCard.html":{}}}],["matinputmodule",{"_index":1447,"title":{},"body":{"components/UpdateForm.html":{}}}],["matoptionmodule",{"_index":1449,"title":{},"body":{"components/UpdateForm.html":{}}}],["matselectmodule",{"_index":1448,"title":{},"body":{"components/UpdateForm.html":{}}}],["max",{"_index":1197,"title":{},"body":{"components/SignIn.html":{}}}],["maximum",{"_index":957,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["maxretries",{"_index":945,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["maxsize",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["media",{"_index":57,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["mediafile",{"_index":218,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["mediaitem",{"_index":204,"title":{"interfaces/MediaItem.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["mer",{"_index":580,"title":{},"body":{"components/Dashboard.html":{}}}],["message",{"_index":231,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["messageloggereffect",{"_index":1077,"title":{},"body":{"components/SignIn.html":{}}}],["messages",{"_index":702,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["messagestatus",{"_index":660,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["messagetype",{"_index":1367,"title":{},"body":{"components/ToastError.html":{}}}],["met",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":139,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["method",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["mettre",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["milliseconds",{"_index":961,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["miscellaneous",{"_index":1736,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1258,"title":{},"body":{"components/SignIn.html":{}}}],["mock",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["mode",{"_index":1240,"title":{},"body":{"components/SignIn.html":{}}}],["model",{"_index":481,"title":{},"body":{"components/CircularImage.html":{}}}],["models/interfaces",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["modes",{"_index":1161,"title":{},"body":{"components/SignIn.html":{}}}],["modify",{"_index":1774,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1843,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mois",{"_index":523,"title":{},"body":{"components/Dashboard.html":{}}}],["moment",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["more",{"_index":909,"title":{},"body":{"injectables/ProductService.html":{},"index.html":{}}}],["moyen",{"_index":593,"title":{},"body":{"components/Dashboard.html":{}}}],["ms",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["myprofile",{"_index":663,"title":{},"body":{"components/Navbar.html":{}}}],["méthode",{"_index":643,"title":{},"body":{"injectables/GuardService.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["n'est",{"_index":1017,"title":{},"body":{"injectables/ProductService.html":{}}}],["name",{"_index":45,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["name.split",{"_index":1497,"title":{},"body":{"components/UpdateForm.html":{}}}],["namefor",{"_index":1781,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":143,"title":{"components/Navbar.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["navbar'},{'name",{"_index":171,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["navbar.css",{"_index":659,"title":{},"body":{"components/Navbar.html":{}}}],["navbar.html",{"_index":658,"title":{},"body":{"components/Navbar.html":{}}}],["navbar/navbar",{"_index":154,"title":{},"body":{"components/App.html":{}}}],["navigate",{"_index":714,"title":{},"body":{"components/Navbar.html":{},"index.html":{}}}],["navigateandsetactive",{"_index":664,"title":{},"body":{"components/Navbar.html":{}}}],["navigateandsetactive(route",{"_index":671,"title":{},"body":{"components/Navbar.html":{}}}],["navigates",{"_index":801,"title":{},"body":{"components/ProductCard.html":{}}}],["navigateur",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["navigation",{"_index":872,"title":{},"body":{"components/ProductCard.html":{}}}],["naviguer",{"_index":731,"title":{},"body":{"components/Navbar.html":{}}}],["ne",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["needs",{"_index":1835,"title":{},"body":{"index.html":{}}}],["nettoie",{"_index":1093,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["nettoyer",{"_index":1229,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["new",{"_index":54,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":444,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["ng",{"_index":1780,"title":{},"body":{"index.html":{}}}],["ngneat/tailwind",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":469,"title":{},"body":{"components/CircularImage.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["nombre",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{}}}],["notification",{"_index":1386,"title":{},"body":{"components/ToastError.html":{}}}],["notification.error",{"_index":1403,"title":{},"body":{"components/ToastError.html":{}}}],["notification.error.length",{"_index":1388,"title":{},"body":{"components/ToastError.html":{}}}],["notification.success",{"_index":1404,"title":{},"body":{"components/ToastError.html":{}}}],["notification.success.length",{"_index":1389,"title":{},"body":{"components/ToastError.html":{}}}],["notification?.error.length",{"_index":1391,"title":{},"body":{"components/ToastError.html":{}}}],["notification?.success.length",{"_index":1392,"title":{},"body":{"components/ToastError.html":{}}}],["notre",{"_index":1430,"title":{},"body":{"components/ToastError.html":{}}}],["nouveau",{"_index":508,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["nouvelle",{"_index":595,"title":{},"body":{"components/Dashboard.html":{}}}],["nouvelles",{"_index":689,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["now",{"_index":1274,"title":{},"body":{"components/SignIn.html":{}}}],["npm",{"_index":1765,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1805,"title":{},"body":{"index.html":{}}}],["null",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["number",{"_index":119,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/CarouselCustomConfig.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["o",{"_index":1025,"title":{},"body":{"injectables/ProductService.html":{}}}],["object",{"_index":767,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"miscellaneous/functions.html":{}}}],["object.keys(this.authform.controls).foreach(key",{"_index":1297,"title":{},"body":{"components/SignIn.html":{}}}],["objects",{"_index":834,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["observable",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":1005,"title":{},"body":{"injectables/ProductService.html":{}}}],["obtient",{"_index":1559,"title":{},"body":{"injectables/UserService.html":{}}}],["occurred",{"_index":1270,"title":{},"body":{"components/SignIn.html":{}}}],["onavatarselected",{"_index":1083,"title":{},"body":{"components/SignIn.html":{}}}],["onavatarselected(event",{"_index":1122,"title":{},"body":{"components/SignIn.html":{}}}],["oncancel",{"_index":1458,"title":{},"body":{"components/UpdateForm.html":{}}}],["one",{"_index":908,"title":{},"body":{"injectables/ProductService.html":{},"index.html":{}}}],["onfileselected",{"_index":1459,"title":{},"body":{"components/UpdateForm.html":{}}}],["onfileselected(event",{"_index":1469,"title":{},"body":{"components/UpdateForm.html":{}}}],["oninit",{"_index":657,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["onnewproductclick",{"_index":499,"title":{},"body":{"components/Dashboard.html":{}}}],["onsave",{"_index":1460,"title":{},"body":{"components/UpdateForm.html":{}}}],["onsignin",{"_index":665,"title":{},"body":{"components/Navbar.html":{}}}],["onsignout",{"_index":666,"title":{},"body":{"components/Navbar.html":{}}}],["onsubmit",{"_index":1084,"title":{},"body":{"components/SignIn.html":{}}}],["ontimerchange",{"_index":1374,"title":{},"body":{"components/ToastError.html":{}}}],["ontimerchange($event",{"_index":1381,"title":{},"body":{"components/ToastError.html":{}}}],["onupload",{"_index":1461,"title":{},"body":{"components/UpdateForm.html":{}}}],["onvisiblechange",{"_index":1375,"title":{},"body":{"components/ToastError.html":{}}}],["onvisiblechange($event",{"_index":1383,"title":{},"body":{"components/ToastError.html":{}}}],["open",{"_index":1768,"title":{},"body":{"index.html":{}}}],["operation",{"_index":707,"title":{},"body":{"components/Navbar.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["operations",{"_index":974,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["optimizes",{"_index":1794,"title":{},"body":{"index.html":{}}}],["optional",{"_index":195,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["optionnel",{"_index":1183,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["opération",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{}}}],["original",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["otherwise",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{},"components/SignIn.html":{}}}],["ou",{"_index":653,"title":{},"body":{"injectables/GuardService.html":{},"injectables/ProductService.html":{},"components/ToastError.html":{}}}],["out",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["output",{"_index":835,"title":{},"body":{"components/ProductCard.html":{},"components/UpdateForm.html":{}}}],["outputs",{"_index":748,"title":{},"body":{"components/ProductCard.html":{}}}],["ouvrir/fermer",{"_index":1432,"title":{},"body":{"components/ToastError.html":{}}}],["overall",{"_index":916,"title":{},"body":{"injectables/ProductService.html":{}}}],["overview",{"_index":1841,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned",{"_index":76,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{}}}],["p",{"_index":1807,"title":{},"body":{"index.html":{}}}],["package",{"_index":1705,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":651,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{},"index.html":{}}}],["panier",{"_index":592,"title":{},"body":{"components/Dashboard.html":{}}}],["par",{"_index":113,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{},"components/ToastError.html":{}}}],["param",{"_index":118,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["parts",{"_index":1496,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts.length",{"_index":1498,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts[0].charat(0",{"_index":1500,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts[0].charat(0).touppercase",{"_index":1499,"title":{},"body":{"components/UpdateForm.html":{}}}],["parts[parts.length",{"_index":1501,"title":{},"body":{"components/UpdateForm.html":{}}}],["pas",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["passe",{"_index":1239,"title":{},"body":{"components/SignIn.html":{}}}],["passing",{"_index":802,"title":{},"body":{"components/ProductCard.html":{}}}],["password",{"_index":197,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["passwordmatchvalidator",{"_index":1085,"title":{},"body":{"components/SignIn.html":{}}}],["passwordmatchvalidator(control",{"_index":1137,"title":{},"body":{"components/SignIn.html":{}}}],["passwords",{"_index":1143,"title":{},"body":{"components/SignIn.html":{}}}],["passées",{"_index":1488,"title":{},"body":{"components/UpdateForm.html":{}}}],["path",{"_index":792,"title":{},"body":{"components/ProductCard.html":{}}}],["percentage",{"_index":1368,"title":{},"body":{"components/ToastError.html":{}}}],["performance",{"_index":1795,"title":{},"body":{"index.html":{}}}],["performances",{"_index":518,"title":{},"body":{"components/Dashboard.html":{}}}],["performs",{"_index":1125,"title":{},"body":{"components/SignIn.html":{}}}],["person",{"_index":1531,"title":{},"body":{"components/UpdateForm.html":{}}}],["person_outline",{"_index":1528,"title":{},"body":{"components/UpdateForm.html":{}}}],["personnelles",{"_index":1530,"title":{},"body":{"components/UpdateForm.html":{}}}],["petit",{"_index":1275,"title":{},"body":{"components/SignIn.html":{}}}],["physiquement",{"_index":1230,"title":{},"body":{"components/SignIn.html":{}}}],["picture",{"_index":1307,"title":{},"body":{"components/SignIn.html":{}}}],["pipe",{"_index":986,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["pipes",{"_index":1785,"title":{},"body":{"index.html":{}}}],["plage",{"_index":1019,"title":{},"body":{"injectables/ProductService.html":{}}}],["please",{"_index":992,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["plus",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductCard.html":{}}}],["png",{"_index":1527,"title":{},"body":{"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["position",{"_index":1369,"title":{},"body":{"components/ToastError.html":{}}}],["post",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["pour",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"injectables/UserService.html":{}}}],["powerful",{"_index":1777,"title":{},"body":{"index.html":{}}}],["premium",{"_index":564,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["prev",{"_index":445,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["prevents",{"_index":779,"title":{},"body":{"components/ProductCard.html":{}}}],["preview",{"_index":1128,"title":{},"body":{"components/SignIn.html":{}}}],["previewurl",{"_index":1455,"title":{},"body":{"components/UpdateForm.html":{}}}],["price",{"_index":208,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["primarily",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["primeng",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["primeuix/themes",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":13,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["process",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["processes",{"_index":911,"title":{},"body":{"injectables/ProductService.html":{}}}],["product",{"_index":42,"title":{"interfaces/Product.html":{}},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["product's",{"_index":820,"title":{},"body":{"components/ProductCard.html":{}}}],["product'},{'name",{"_index":170,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["product.category",{"_index":876,"title":{},"body":{"components/ProductCard.html":{}}}],["product.description",{"_index":878,"title":{},"body":{"components/ProductCard.html":{}}}],["product.imageurls",{"_index":874,"title":{},"body":{"components/ProductCard.html":{}}}],["product.imageurls.length",{"_index":875,"title":{},"body":{"components/ProductCard.html":{}}}],["product.name",{"_index":877,"title":{},"body":{"components/ProductCard.html":{}}}],["product.sellername",{"_index":879,"title":{},"body":{"components/ProductCard.html":{}}}],["product.ts",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["product/form",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["productcard",{"_index":172,"title":{"components/ProductCard.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["productformdata",{"_index":219,"title":{"interfaces/ProductFormData.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["productid",{"_index":217,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["productidevent",{"_index":750,"title":{},"body":{"components/ProductCard.html":{}}}],["productimage",{"_index":212,"title":{"interfaces/productImage.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["productimageurls",{"_index":758,"title":{},"body":{"components/ProductCard.html":{}}}],["productimg",{"_index":471,"title":{},"body":{"components/CircularImage.html":{}}}],["production",{"_index":116,"title":{},"body":{"injectables/ApiUrlService.html":{},"index.html":{}}}],["productlist",{"_index":174,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["productmanagement",{"_index":176,"title":{"components/ProductManagement.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["productprice",{"_index":757,"title":{},"body":{"components/ProductCard.html":{}}}],["products",{"_index":64,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["products/myproduct",{"_index":793,"title":{},"body":{"components/ProductCard.html":{}}}],["productservice",{"_index":888,"title":{"injectables/ProductService.html":{}},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["produit",{"_index":509,"title":{},"body":{"components/Dashboard.html":{},"injectables/ProductService.html":{}}}],["produits",{"_index":519,"title":{},"body":{"components/Dashboard.html":{}}}],["profil",{"_index":646,"title":{},"body":{"injectables/GuardService.html":{},"injectables/UserService.html":{}}}],["profile",{"_index":73,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":178,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["progress",{"_index":221,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["progresscomponent",{"_index":1359,"title":{},"body":{"components/ToastError.html":{}}}],["project",{"_index":1754,"title":{},"body":{"index.html":{}}}],["promise",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["promo",{"_index":850,"title":{},"body":{"components/ProductCard.html":{}}}],["propagation",{"_index":780,"title":{},"body":{"components/ProductCard.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{},"properties.html":{}}}],["propriét",{"_index":1206,"title":{},"body":{"components/SignIn.html":{}}}],["propriétés",{"_index":690,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["protect",{"_index":631,"title":{},"body":{"injectables/GuardService.html":{}}}],["protected",{"_index":148,"title":{},"body":{"components/App.html":{}}}],["provide",{"_index":456,"title":{},"body":{"components/CircularImage.html":{}}}],["provideanimations",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["providedin",{"_index":100,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":455,"title":{},"body":{"components/CircularImage.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":105,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{}}}],["providezonechangedetection",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["présent",{"_index":1422,"title":{},"body":{"components/ToastError.html":{}}}],["prévisualisation",{"_index":1209,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["public",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["qu'il",{"_index":1029,"title":{},"body":{"injectables/ProductService.html":{}}}],["quand",{"_index":1238,"title":{},"body":{"components/SignIn.html":{}}}],["quantity",{"_index":210,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["que",{"_index":642,"title":{},"body":{"injectables/GuardService.html":{},"components/ProductCard.html":{},"components/SignIn.html":{}}}],["queryparams",{"_index":637,"title":{},"body":{"injectables/GuardService.html":{}}}],["qui",{"_index":941,"title":{},"body":{"injectables/ProductService.html":{}}}],["rapports",{"_index":600,"title":{},"body":{"components/Dashboard.html":{}}}],["reactiveformsmodule",{"_index":1070,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["readable",{"_index":819,"title":{},"body":{"components/ProductCard.html":{}}}],["reader",{"_index":1210,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["reader.onload",{"_index":1212,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["reader.readasdataurl(file",{"_index":1215,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["readonly",{"_index":11,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["received",{"_index":1741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recevra",{"_index":1418,"title":{},"body":{"components/ToastError.html":{}}}],["redirect",{"_index":1188,"title":{},"body":{"components/SignIn.html":{}}}],["redirecting",{"_index":1291,"title":{},"body":{"components/SignIn.html":{}}}],["rediriger",{"_index":649,"title":{},"body":{"injectables/GuardService.html":{}}}],["reference",{"_index":1842,"title":{},"body":{"index.html":{}}}],["references",{"_index":1839,"title":{},"body":{"index.html":{}}}],["register",{"_index":28,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["registers",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":91,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{}}}],["rejects",{"_index":952,"title":{},"body":{"injectables/ProductService.html":{}}}],["related",{"_index":973,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["reload",{"_index":1772,"title":{},"body":{"index.html":{}}}],["remember",{"_index":1331,"title":{},"body":{"components/SignIn.html":{}}}],["remet",{"_index":1097,"title":{},"body":{"components/SignIn.html":{}}}],["removeitem('token",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["remplacer",{"_index":112,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["renvoie",{"_index":1511,"title":{},"body":{"components/UpdateForm.html":{}}}],["renvoyer",{"_index":1519,"title":{},"body":{"components/UpdateForm.html":{}}}],["reports",{"_index":914,"title":{},"body":{"injectables/ProductService.html":{}}}],["representing",{"_index":848,"title":{},"body":{"components/ProductCard.html":{},"injectables/ProductService.html":{}}}],["request",{"_index":796,"title":{},"body":{"components/ProductCard.html":{},"miscellaneous/functions.html":{}}}],["requested",{"_index":773,"title":{},"body":{"components/ProductCard.html":{}}}],["require",{"_index":1157,"title":{},"body":{"components/SignIn.html":{}}}],["required",{"_index":1262,"title":{},"body":{"components/SignIn.html":{}}}],["requires",{"_index":933,"title":{},"body":{"injectables/ProductService.html":{}}}],["res",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["res.json",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.success",{"_index":1284,"title":{},"body":{"components/SignIn.html":{}}}],["res.token",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetform",{"_index":1086,"title":{},"body":{"components/SignIn.html":{}}}],["resetform(role",{"_index":1144,"title":{},"body":{"components/SignIn.html":{}}}],["resetting",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolves",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["resources",{"_index":1837,"title":{},"body":{"index.html":{}}}],["response",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["response.json",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.ok",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["restants",{"_index":565,"title":{},"body":{"components/Dashboard.html":{}}}],["result",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["result.role",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":130,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/productImage.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["results.length",{"_index":1059,"title":{},"body":{"injectables/ProductService.html":{}}}],["results.length}/${formdata.length",{"_index":1060,"title":{},"body":{"injectables/ProductService.html":{}}}],["results.push",{"_index":1043,"title":{},"body":{"injectables/ProductService.html":{}}}],["retourner",{"_index":654,"title":{},"body":{"injectables/GuardService.html":{}}}],["retries",{"_index":954,"title":{},"body":{"injectables/ProductService.html":{}}}],["retrieve",{"_index":82,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["retrieves",{"_index":928,"title":{},"body":{"injectables/ProductService.html":{}}}],["retry",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["retryoperation",{"_index":898,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["retryoperation(operation",{"_index":944,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":638,"title":{},"body":{"injectables/GuardService.html":{}}}],["revenus",{"_index":531,"title":{},"body":{"components/Dashboard.html":{}}}],["reverselistdoubleloop",{"_index":1702,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["reverselistdoubleloop(list",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["role",{"_index":198,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["root",{"_index":101,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":162,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["route",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{}}}],["router",{"_index":501,"title":{},"body":{"components/Dashboard.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/SignIn.html":{}}}],["routerlink",{"_index":464,"title":{},"body":{"components/CircularImage.html":{}}}],["routeroutlet",{"_index":142,"title":{},"body":{"components/App.html":{}}}],["routeroutlet,navbar",{"_index":155,"title":{},"body":{"components/App.html":{}}}],["routerstatesnapshot",{"_index":620,"title":{},"body":{"injectables/GuardService.html":{}}}],["routes",{"_index":632,"title":{"routes.html":{}},"body":{"injectables/GuardService.html":{},"routes.html":{}}}],["run",{"_index":1763,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1824,"title":{},"body":{"index.html":{}}}],["running",{"_index":1767,"title":{},"body":{"index.html":{}}}],["rupture",{"_index":559,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["rxjs",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["réactifs",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["récentes",{"_index":539,"title":{},"body":{"components/Dashboard.html":{}}}],["récupère",{"_index":936,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["récupérer",{"_index":940,"title":{},"body":{"injectables/ProductService.html":{}}}],["réinitialise",{"_index":1146,"title":{},"body":{"components/SignIn.html":{}}}],["réinitialiser",{"_index":701,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["réponses",{"_index":1007,"title":{},"body":{"injectables/ProductService.html":{}}}],["réseau",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{}}}],["résout",{"_index":942,"title":{},"body":{"injectables/ProductService.html":{}}}],["résultat",{"_index":1054,"title":{},"body":{"injectables/ProductService.html":{}}}],["réussi",{"_index":1290,"title":{},"body":{"components/SignIn.html":{}}}],["réussies",{"_index":1008,"title":{},"body":{"injectables/ProductService.html":{}}}],["s",{"_index":1809,"title":{},"body":{"index.html":{}}}],["sam",{"_index":583,"title":{},"body":{"components/Dashboard.html":{}}}],["sample",{"_index":186,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["sans",{"_index":1518,"title":{},"body":{"components/UpdateForm.html":{}}}],["save",{"_index":1535,"title":{},"body":{"components/UpdateForm.html":{}}}],["scaffolding",{"_index":1775,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1783,"title":{},"body":{"index.html":{}}}],["select",{"_index":1203,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["selected",{"_index":1129,"title":{},"body":{"components/SignIn.html":{}}}],["selectedavatarfile",{"_index":1078,"title":{},"body":{"components/SignIn.html":{}}}],["selectedfile",{"_index":1456,"title":{},"body":{"components/UpdateForm.html":{}}}],["selection",{"_index":1124,"title":{},"body":{"components/SignIn.html":{}}}],["selector",{"_index":140,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["seller",{"_index":200,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["seller&#64;demo.com",{"_index":1337,"title":{},"body":{"components/SignIn.html":{}}}],["seller's",{"_index":845,"title":{},"body":{"components/ProductCard.html":{}}}],["seller@demo.com",{"_index":1355,"title":{},"body":{"components/SignIn.html":{}}}],["selleravatar",{"_index":214,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["sellername",{"_index":213,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["semaine",{"_index":529,"title":{},"body":{"components/Dashboard.html":{}}}],["sending",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["sequentially",{"_index":913,"title":{},"body":{"injectables/ProductService.html":{}}}],["serve",{"_index":1799,"title":{},"body":{"index.html":{}}}],["served",{"_index":1819,"title":{},"body":{"index.html":{}}}],["server",{"_index":1761,"title":{},"body":{"index.html":{}}}],["service",{"_index":102,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["service.ts",{"_index":8,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/DataService.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["service.ts:105",{"_index":921,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:11",{"_index":50,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/DataService.html":{}}}],["service.ts:119",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:14",{"_index":617,"title":{},"body":{"injectables/GuardService.html":{}}}],["service.ts:142",{"_index":966,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:15",{"_index":90,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:17",{"_index":88,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/UserService.html":{}}}],["service.ts:178",{"_index":923,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:18",{"_index":903,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["service.ts:21",{"_index":66,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:213",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:223",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:231",{"_index":1558,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:239",{"_index":1562,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:24",{"_index":621,"title":{},"body":{"injectables/GuardService.html":{}}}],["service.ts:244",{"_index":906,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:248",{"_index":1554,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:26",{"_index":59,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/ProductService.html":{}}}],["service.ts:264",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:273",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:29",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:308",{"_index":1574,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:322",{"_index":926,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:33",{"_index":97,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:339",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:35",{"_index":93,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:390",{"_index":947,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:40",{"_index":83,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:41",{"_index":931,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:45",{"_index":84,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/UserService.html":{}}}],["service.ts:47",{"_index":69,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:52",{"_index":79,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:59",{"_index":78,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:61",{"_index":935,"title":{},"body":{"injectables/ProductService.html":{}}}],["service.ts:64",{"_index":96,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:66",{"_index":52,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:68",{"_index":63,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:70",{"_index":75,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:75",{"_index":55,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:8",{"_index":611,"title":{},"body":{"injectables/DataService.html":{}}}],["service.ts:80",{"_index":58,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:82",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:86",{"_index":34,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["service.ts:9",{"_index":609,"title":{},"body":{"injectables/DataService.html":{}}}],["service.ts:92",{"_index":927,"title":{},"body":{"injectables/ProductService.html":{}}}],["serviceresponse",{"_index":227,"title":{"interfaces/ServiceResponse.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["services/auth.service",{"_index":686,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["services/data",{"_index":687,"title":{},"body":{"components/Navbar.html":{},"components/ProductCard.html":{}}}],["session",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["settimeout",{"_index":1279,"title":{},"body":{"components/SignIn.html":{}}}],["settimeout(resolve",{"_index":1051,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["shareddata",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{}}}],["shirt",{"_index":563,"title":{},"body":{"components/Dashboard.html":{}}}],["showtoast",{"_index":1370,"title":{},"body":{"components/ToastError.html":{}}}],["si",{"_index":1015,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["side",{"_index":1126,"title":{},"body":{"components/SignIn.html":{}}}],["sign",{"_index":180,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["signal",{"_index":201,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["signal(0",{"_index":1395,"title":{},"body":{"components/ToastError.html":{}}}],["signal(false",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/SignIn.html":{},"components/ToastError.html":{}}}],["signal(null",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"components/UpdateForm.html":{}}}],["signal(true",{"_index":1167,"title":{},"body":{"components/SignIn.html":{}}}],["signal(undefined",{"_index":1378,"title":{},"body":{"components/ToastError.html":{}}}],["signals",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["signed",{"_index":1187,"title":{},"body":{"components/SignIn.html":{}}}],["signin",{"_index":179,"title":{"components/SignIn.html":{}},"body":{"components/App.html":{},"injectables/AuthService.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["signin(data_form",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["signing",{"_index":1335,"title":{},"body":{"components/SignIn.html":{}}}],["signout",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(data_form",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["simulate",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["single",{"_index":837,"title":{},"body":{"components/ProductCard.html":{}}}],["size",{"_index":206,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["slide",{"_index":492,"title":{},"body":{"components/CircularImage.html":{}}}],["slide.src",{"_index":494,"title":{},"body":{"components/CircularImage.html":{}}}],["slides",{"_index":450,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{}}}],["sm",{"_index":554,"title":{},"body":{"components/Dashboard.html":{}}}],["snapshot",{"_index":625,"title":{},"body":{"injectables/GuardService.html":{}}}],["something",{"_index":1408,"title":{},"body":{"components/ToastError.html":{}}}],["son",{"_index":937,"title":{},"body":{"injectables/ProductService.html":{}}}],["sont",{"_index":1487,"title":{},"body":{"components/UpdateForm.html":{}}}],["sophie",{"_index":555,"title":{},"body":{"components/Dashboard.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"interfaces/productImage.html":{}}}],["spam",{"_index":1050,"title":{},"body":{"injectables/ProductService.html":{}}}],["specified",{"_index":1104,"title":{},"body":{"components/SignIn.html":{}}}],["speed",{"_index":1796,"title":{},"body":{"index.html":{}}}],["spécifique",{"_index":1293,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{}}}],["src",{"_index":478,"title":{},"body":{"components/CircularImage.html":{}}}],["src/.../app.config.ts",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.config.ts",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":138,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:12",{"_index":152,"title":{},"body":{"components/App.html":{}}}],["src/app/auth/sign",{"_index":1067,"title":{},"body":{"components/SignIn.html":{},"coverage.html":{}}}],["src/app/error/toast",{"_index":1357,"title":{},"body":{"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"coverage.html":{}}}],["src/app/models/interfaces.ts",{"_index":194,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["src/app/navbar/navbar.ts",{"_index":656,"title":{},"body":{"components/Navbar.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.ts:15",{"_index":677,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:16",{"_index":679,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:19",{"_index":678,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:20",{"_index":684,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:21",{"_index":683,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:24",{"_index":668,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:35",{"_index":674,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:54",{"_index":675,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:58",{"_index":670,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:64",{"_index":669,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:69",{"_index":676,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/navbar/navbar.ts:73",{"_index":673,"title":{},"body":{"components/Navbar.html":{}}}],["src/app/products/circular",{"_index":435,"title":{},"body":{"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"coverage.html":{}}}],["src/app/products/product",{"_index":737,"title":{},"body":{"components/ProductCard.html":{},"coverage.html":{}}}],["src/app/profile/profile.ts",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["src/app/profile/update",{"_index":1441,"title":{},"body":{"components/UpdateForm.html":{},"coverage.html":{}}}],["src/app/seller/dashboard/dashboard.ts",{"_index":495,"title":{},"body":{"components/Dashboard.html":{},"coverage.html":{}}}],["src/app/seller/dashboard/dashboard.ts:10",{"_index":502,"title":{},"body":{"components/Dashboard.html":{}}}],["src/app/seller/dashboard/dashboard.ts:13",{"_index":503,"title":{},"body":{"components/Dashboard.html":{}}}],["src/app/seller/dashboard/dashboard.ts:18",{"_index":504,"title":{},"body":{"components/Dashboard.html":{}}}],["src/app/seller/form",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["src/app/seller/product",{"_index":882,"title":{},"body":{"components/ProductManagement.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":6,"title":{},"body":{"injectables/ApiUrlService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:128",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:142",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:20",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:65",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/data",{"_index":604,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/services/guard",{"_index":614,"title":{},"body":{"injectables/GuardService.html":{},"coverage.html":{}}}],["src/app/services/product",{"_index":889,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":1538,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/utils/utils.ts",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":1440,"title":{},"body":{"components/ToastSampleIconComponent.html":{}}}],["start",{"_index":1762,"title":{},"body":{"index.html":{}}}],["started",{"_index":1752,"title":{"index.html":{}},"body":{}}],["startonce",{"_index":1766,"title":{},"body":{"index.html":{}}}],["state",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/SignIn.html":{}}}],["state.url",{"_index":639,"title":{},"body":{"injectables/GuardService.html":{}}}],["statements",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["statistiques",{"_index":538,"title":{},"body":{"components/Dashboard.html":{}}}],["status",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["statut",{"_index":1016,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["stock",{"_index":560,"title":{},"body":{"components/Dashboard.html":{},"components/ProductCard.html":{}}}],["stocker",{"_index":1205,"title":{},"body":{"components/SignIn.html":{}}}],["stockstatusclass",{"_index":756,"title":{},"body":{"components/ProductCard.html":{}}}],["stockstatustext",{"_index":755,"title":{},"body":{"components/ProductCard.html":{}}}],["storage",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["store",{"_index":1790,"title":{},"body":{"index.html":{}}}],["stored",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["stores",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["stricte",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":48,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/CircularImage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["stripe",{"_index":1814,"title":{},"body":{"index.html":{}}}],["style",{"_index":1425,"title":{},"body":{"components/ToastError.html":{}}}],["styleurl",{"_index":146,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["submission",{"_index":1132,"title":{},"body":{"components/SignIn.html":{}}}],["subtitle",{"_index":479,"title":{},"body":{"components/CircularImage.html":{}}}],["success",{"_index":228,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["success/failure",{"_index":917,"title":{},"body":{"injectables/ProductService.html":{}}}],["successful",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/Navbar.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["successfully",{"_index":998,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["successmessage",{"_index":661,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["succès",{"_index":1278,"title":{},"body":{"components/SignIn.html":{},"components/ToastError.html":{}}}],["such",{"_index":1784,"title":{},"body":{"index.html":{}}}],["suffit",{"_index":1517,"title":{},"body":{"components/UpdateForm.html":{}}}],["suits",{"_index":1834,"title":{},"body":{"index.html":{}}}],["supposons",{"_index":641,"title":{},"body":{"injectables/GuardService.html":{}}}],["suppression",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["supprime",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["supprimer",{"_index":719,"title":{},"body":{"components/Navbar.html":{}}}],["supprimez",{"_index":1513,"title":{},"body":{"components/UpdateForm.html":{}}}],["sur",{"_index":571,"title":{},"body":{"components/Dashboard.html":{}}}],["switch",{"_index":859,"title":{},"body":{"components/ProductCard.html":{}}}],["switching",{"_index":1155,"title":{},"body":{"components/SignIn.html":{}}}],["switchmap",{"_index":629,"title":{},"body":{"injectables/GuardService.html":{}}}],["synchronously",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["sélectionner",{"_index":1524,"title":{},"body":{"components/UpdateForm.html":{}}}],["séparée",{"_index":1207,"title":{},"body":{"components/SignIn.html":{}}}],["séquentiel",{"_index":1038,"title":{},"body":{"injectables/ProductService.html":{}}}],["t",{"_index":230,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"components/Dashboard.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/productImage.html":{}}}],["table",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":510,"title":{},"body":{"components/Dashboard.html":{},"miscellaneous/functions.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["taille",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["tailwindcss/postcss",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["tap",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["tap((user:any",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["tats",{"_index":1099,"title":{},"body":{"components/SignIn.html":{}}}],["template",{"_index":135,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["templateurl",{"_index":144,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{}}}],["tentatives",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["test",{"_index":1810,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1829,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1827,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1821,"title":{},"body":{"index.html":{}}}],["text",{"_index":811,"title":{},"body":{"components/ProductCard.html":{}}}],["theme",{"_index":1812,"title":{},"body":{"index.html":{}}}],["then((res",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._issignin.asreadonly",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._issignin.set(false",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._issignin.set(true",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addtocartevent.emit(this.product",{"_index":868,"title":{},"body":{"components/ProductCard.html":{}}}],["this.apiurl.add_img_by_product_id(id",{"_index":1036,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.delete_img_by_media_id(id",{"_index":1003,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.delete_product_by_id(id",{"_index":1063,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.get_all_products",{"_index":978,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.apiurl.get_my_all_product",{"_index":983,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.authform",{"_index":1184,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["this.authform.get('avatar')?.markaspristine",{"_index":1228,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('avatar')?.markastouched",{"_index":1219,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('avatar')?.markasuntouched",{"_index":1227,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('avatar')?.setvalue(null",{"_index":1226,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('confirmpassword')?.clearvalidators",{"_index":1253,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('confirmpassword')?.setvalidators([validators.required",{"_index":1250,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('confirmpassword')?.updatevalueandvalidity",{"_index":1255,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('email')?.value",{"_index":1506,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get('name')?.clearvalidators",{"_index":1252,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('name')?.setvalidators([validators.required",{"_index":1249,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('name')?.updatevalueandvalidity",{"_index":1254,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.get('name')?.value",{"_index":1505,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get('password')?.value",{"_index":1508,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get('role')?.value",{"_index":1507,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.authform.get(key)?.markastouched",{"_index":1298,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.invalid",{"_index":1259,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["this.authform.reset",{"_index":1224,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform.value",{"_index":1265,"title":{},"body":{"components/SignIn.html":{}}}],["this.authform?.get('password')?.value",{"_index":1256,"title":{},"body":{"components/SignIn.html":{}}}],["this.authservice.checkauth",{"_index":697,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.authservice.checkauth().then(authenticated",{"_index":635,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.authservice.currentuser",{"_index":640,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{}}}],["this.authservice.issignin",{"_index":711,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.authservice.signin(formdata",{"_index":1283,"title":{},"body":{"components/SignIn.html":{}}}],["this.authservice.signout",{"_index":717,"title":{},"body":{"components/Navbar.html":{}}}],["this.authservice.signup(formdata",{"_index":1267,"title":{},"body":{"components/SignIn.html":{}}}],["this.avatarpreview",{"_index":1213,"title":{},"body":{"components/SignIn.html":{}}}],["this.badgetext",{"_index":860,"title":{},"body":{"components/ProductCard.html":{}}}],["this.baseurl}/api/admin/users/all",{"_index":65,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/admin/users/del/${id",{"_index":120,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/auth/login",{"_index":87,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/auth/register",{"_index":89,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/media/add/${id",{"_index":129,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/media/delete/${id",{"_index":127,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/${id",{"_index":125,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/all",{"_index":62,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/create",{"_index":51,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/delete/${id",{"_index":128,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/myproducts",{"_index":74,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/products/update/${id",{"_index":126,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/email/${email",{"_index":124,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/me",{"_index":68,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/name/${userid",{"_index":123,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/profile/${id",{"_index":122,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/update/${id",{"_index":121,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.baseurl}/api/users/update/avatar",{"_index":92,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["this.cancel.emit",{"_index":1521,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.canhide.set(false",{"_index":1241,"title":{},"body":{"components/SignIn.html":{}}}],["this.canhide.set(true",{"_index":1237,"title":{},"body":{"components/SignIn.html":{}}}],["this.checkauth",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cleanavatarinput",{"_index":1242,"title":{},"body":{"components/SignIn.html":{}}}],["this.clearmessages(0",{"_index":1246,"title":{},"body":{"components/SignIn.html":{}}}],["this.clearmessages(3000",{"_index":1200,"title":{},"body":{"components/SignIn.html":{}}}],["this.createform",{"_index":1185,"title":{},"body":{"components/SignIn.html":{}}}],["this.currentnotification",{"_index":1387,"title":{},"body":{"components/ToastError.html":{}}}],["this.currentuser",{"_index":716,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentuser.set(null",{"_index":695,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentuser.set(this.authservice.currentuser",{"_index":712,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentuser.set(user",{"_index":694,"title":{},"body":{"components/Navbar.html":{}}}],["this.currentusersubject.asobservable",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.asreadonly",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(updateduser",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(user",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.set(user",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.value",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["this.datasharedservice.updatedata(this.product",{"_index":870,"title":{},"body":{"components/ProductCard.html":{}}}],["this.datasubject.asobservable",{"_index":608,"title":{},"body":{"injectables/DataService.html":{}}}],["this.datasubject.next(data",{"_index":612,"title":{},"body":{"injectables/DataService.html":{}}}],["this.dialogref.close",{"_index":1520,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.dialogref.close(formdata",{"_index":1512,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.dialogref.close(this.selectedfile",{"_index":1504,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.errormessage",{"_index":681,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.errormessage.set",{"_index":703,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.errormessage.set('file",{"_index":1198,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set('please",{"_index":1202,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set(data.error",{"_index":709,"title":{},"body":{"components/Navbar.html":{}}}],["this.errormessage.set(err.error",{"_index":1269,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set(error?.error",{"_index":1294,"title":{},"body":{"components/SignIn.html":{}}}],["this.errormessage.set(res.error",{"_index":1285,"title":{},"body":{"components/SignIn.html":{}}}],["this.fb.group",{"_index":1220,"title":{},"body":{"components/SignIn.html":{},"components/UpdateForm.html":{}}}],["this.getauthheaders",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuser",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getheadertoken",{"_index":985,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.gettoken",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hasmessage",{"_index":1401,"title":{},"body":{"components/ToastError.html":{}}}],["this.http.delete(this.apiurl.delete_img_by_media_id(id",{"_index":1004,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(this.apiurl.delete_product_by_id(id",{"_index":1064,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(this.apiurl.delete_user",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.apiurl.get_all_products).pipe",{"_index":979,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(this.apiurl.get_current_user",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.apiurl.get_my_all_product",{"_index":984,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(this.apiurl.get_product_by_id(id",{"_index":990,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.post(this.apiurl.create_product",{"_index":995,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.put(`${this.apiurl.update_product(id",{"_index":1001,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.put(this.apiurl.update_avatar",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(this.apiurl.update_user(userid",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["this.issignin",{"_index":710,"title":{},"body":{"components/Navbar.html":{}}}],["this.issignup",{"_index":1248,"title":{},"body":{"components/SignIn.html":{}}}],["this.issignup.set(!this.issignup",{"_index":1243,"title":{},"body":{"components/SignIn.html":{}}}],["this.loading.set(false",{"_index":1272,"title":{},"body":{"components/SignIn.html":{}}}],["this.loading.set(true",{"_index":1264,"title":{},"body":{"components/SignIn.html":{}}}],["this.logout",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.markallfieldsastouched",{"_index":1260,"title":{},"body":{"components/SignIn.html":{}}}],["this.messagestatus",{"_index":1173,"title":{},"body":{"components/SignIn.html":{}}}],["this.oncancel",{"_index":1514,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.passwordmatchvalidator.bind(this",{"_index":1251,"title":{},"body":{"components/SignIn.html":{}}}],["this.percentage",{"_index":1436,"title":{},"body":{"components/ToastError.html":{}}}],["this.percentage.set($event",{"_index":1437,"title":{},"body":{"components/ToastError.html":{}}}],["this.percentage.set(this.visible",{"_index":1435,"title":{},"body":{"components/ToastError.html":{}}}],["this.previewurl",{"_index":1495,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.product.quantity",{"_index":864,"title":{},"body":{"components/ProductCard.html":{}}}],["this.productidevent.emit(this.product.id",{"_index":847,"title":{},"body":{"components/ProductCard.html":{}}}],["this.productimg.foreach((valu",{"_index":489,"title":{},"body":{"components/CircularImage.html":{}}}],["this.resetform",{"_index":1286,"title":{},"body":{"components/SignIn.html":{}}}],["this.route.navigate(['auth",{"_index":713,"title":{},"body":{"components/Navbar.html":{}}}],["this.route.navigate(['profil",{"_index":715,"title":{},"body":{"components/Navbar.html":{}}}],["this.route.navigate([route",{"_index":732,"title":{},"body":{"components/Navbar.html":{}}}],["this.router.createurltree",{"_index":655,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.router.createurltree(['/auth",{"_index":636,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.router.navigate",{"_index":1190,"title":{},"body":{"components/SignIn.html":{}}}],["this.router.navigate([\"/products/update",{"_index":873,"title":{},"body":{"components/ProductCard.html":{}}}],["this.router.navigate(['/products/myproduct",{"_index":506,"title":{},"body":{"components/Dashboard.html":{}}}],["this.router.navigate(['/products/new",{"_index":507,"title":{},"body":{"components/Dashboard.html":{}}}],["this.selectedavatarfile",{"_index":1208,"title":{},"body":{"components/SignIn.html":{}}}],["this.selectedfile",{"_index":1503,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.shareddata.data$.subscribe((data",{"_index":698,"title":{},"body":{"components/Navbar.html":{}}}],["this.shareddata.updatedata",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.slides[index",{"_index":490,"title":{},"body":{"components/CircularImage.html":{}}}],["this.successmessage",{"_index":682,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.successmessage.set",{"_index":704,"title":{},"body":{"components/Navbar.html":{},"components/SignIn.html":{}}}],["this.successmessage.set('sign",{"_index":1273,"title":{},"body":{"components/SignIn.html":{}}}],["this.successmessage.set(data.message",{"_index":706,"title":{},"body":{"components/Navbar.html":{}}}],["this.togglemode",{"_index":1280,"title":{},"body":{"components/SignIn.html":{}}}],["this.user.set(data.user",{"_index":1493,"title":{},"body":{"components/UpdateForm.html":{}}}],["this.validateimagefile(file",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["this.viewdetails.emit(productid",{"_index":866,"title":{},"body":{"components/ProductCard.html":{}}}],["this.visible",{"_index":1400,"title":{},"body":{"components/ToastError.html":{}}}],["this.visible.set($event",{"_index":1434,"title":{},"body":{"components/ToastError.html":{}}}],["this.visible.set(true",{"_index":1426,"title":{},"body":{"components/ToastError.html":{}}}],["this.visible.update((value",{"_index":1433,"title":{},"body":{"components/ToastError.html":{}}}],["throw",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["throwerror",{"_index":972,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["throws",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["time",{"_index":1107,"title":{},"body":{"components/SignIn.html":{},"index.html":{}}}],["title",{"_index":149,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{}}}],["titre",{"_index":1411,"title":{},"body":{"components/ToastError.html":{}}}],["toast",{"_index":183,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["toastbodycomponent",{"_index":1363,"title":{},"body":{"components/ToastError.html":{}}}],["toastcomponent",{"_index":1361,"title":{},"body":{"components/ToastError.html":{}}}],["toastdetail",{"_index":1371,"title":{},"body":{"components/ToastError.html":{}}}],["toastercomponent",{"_index":1360,"title":{},"body":{"components/ToastError.html":{}}}],["toasterror",{"_index":182,"title":{"components/ToastError.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["toastheadercomponent",{"_index":1362,"title":{},"body":{"components/ToastError.html":{}}}],["toastsampleiconcomponent",{"_index":185,"title":{"components/ToastSampleIconComponent.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["toasttitle",{"_index":1372,"title":{},"body":{"components/ToastError.html":{}}}],["today",{"_index":1304,"title":{},"body":{"components/SignIn.html":{}}}],["toggle",{"_index":487,"title":{},"body":{"components/CircularImage.html":{},"components/SignIn.html":{}}}],["toggle(even",{"_index":1150,"title":{},"body":{"components/SignIn.html":{}}}],["togglemode",{"_index":1087,"title":{},"body":{"components/SignIn.html":{}}}],["toggles",{"_index":1152,"title":{},"body":{"components/SignIn.html":{}}}],["toggletoast",{"_index":1376,"title":{},"body":{"components/ToastError.html":{}}}],["token",{"_index":226,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["token's",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["tools",{"_index":1778,"title":{},"body":{"index.html":{}}}],["top",{"_index":1397,"title":{},"body":{"components/ToastError.html":{}}}],["tort",{"_index":1028,"title":{},"body":{"injectables/ProductService.html":{}}}],["total",{"_index":586,"title":{},"body":{"components/Dashboard.html":{}}}],["touch",{"_index":1218,"title":{},"body":{"components/SignIn.html":{}}}],["touched",{"_index":1118,"title":{},"body":{"components/SignIn.html":{}}}],["tous",{"_index":524,"title":{},"body":{"components/Dashboard.html":{},"components/Navbar.html":{},"components/SignIn.html":{}}}],["toutes",{"_index":530,"title":{},"body":{"components/Dashboard.html":{}}}],["track",{"_index":493,"title":{},"body":{"components/CircularImage.html":{}}}],["traitement",{"_index":1006,"title":{},"body":{"injectables/ProductService.html":{}}}],["transactions",{"_index":589,"title":{},"body":{"components/Dashboard.html":{}}}],["transition",{"_index":449,"title":{},"body":{"injectables/CarouselCustomConfig.html":{}}}],["tree",{"_index":137,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["trigger",{"_index":1119,"title":{},"body":{"components/SignIn.html":{}}}],["triggered",{"_index":770,"title":{},"body":{"components/ProductCard.html":{},"components/SignIn.html":{}}}],["triggering",{"_index":782,"title":{},"body":{"components/ProductCard.html":{}}}],["true",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"injectables/GuardService.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastSampleIconComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["tsconfig.json",{"_index":1808,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":47,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{},"miscellaneous/variables.html":{}}}],["têtes",{"_index":1556,"title":{},"body":{"injectables/UserService.html":{}}}],["ui",{"_index":1136,"title":{},"body":{"components/SignIn.html":{}}}],["un",{"_index":515,"title":{},"body":{"components/Dashboard.html":{},"injectables/ProductService.html":{},"components/ToastError.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["une",{"_index":597,"title":{},"body":{"components/Dashboard.html":{},"injectables/GuardService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"miscellaneous/functions.html":{}}}],["unexpected",{"_index":1020,"title":{},"body":{"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["unit",{"_index":1820,"title":{},"body":{"index.html":{}}}],["unités",{"_index":562,"title":{},"body":{"components/Dashboard.html":{}}}],["up",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{}}}],["update",{"_index":94,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["update/delete",{"_index":789,"title":{},"body":{"components/ProductCard.html":{}}}],["update_avatar",{"_index":29,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["update_product",{"_index":30,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["update_user",{"_index":31,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["updateavatar",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavatar(file",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":700,"title":{},"body":{"components/Navbar.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":215,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["updatedata",{"_index":606,"title":{},"body":{"injectables/DataService.html":{}}}],["updatedata(data",{"_index":607,"title":{},"body":{"injectables/DataService.html":{}}}],["updateduser",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":188,"title":{"components/UpdateForm.html":{}},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{},"coverage.html":{}}}],["updateproduct",{"_index":899,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct(id",{"_index":965,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateprofile",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile(user",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["updates",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["updating",{"_index":976,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{}}}],["uploaded",{"_index":918,"title":{},"body":{"injectables/ProductService.html":{}}}],["uploadedat",{"_index":207,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["uploading",{"_index":1041,"title":{},"body":{"injectables/ProductService.html":{}}}],["uploadprogress",{"_index":220,"title":{"interfaces/UploadProgress.html":{}},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["url",{"_index":7,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/productImage.html":{}}}],["urls",{"_index":104,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/ProductCard.html":{}}}],["urltree",{"_index":626,"title":{},"body":{"injectables/GuardService.html":{}}}],["use",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["useclass",{"_index":458,"title":{},"body":{"components/CircularImage.html":{}}}],["used",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":60,"title":{"interfaces/User.html":{}},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/ErrorMessage.html":{},"injectables/GuardService.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"components/Navbar.html":{},"interfaces/Product.html":{},"components/ProductCard.html":{},"interfaces/ProductFormData.html":{},"injectables/ProductService.html":{},"interfaces/ServiceResponse.html":{},"components/SignIn.html":{},"components/UpdateForm.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/productImage.html":{}}}],["user's",{"_index":72,"title":{},"body":{"injectables/ApiUrlService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user().role",{"_index":1522,"title":{},"body":{"components/UpdateForm.html":{}}}],["user?.role",{"_index":647,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{}}}],["userdata",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{}}}],["userid",{"_index":86,"title":{},"body":{"injectables/ApiUrlService.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/productImage.html":{}}}],["username",{"_index":85,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["users",{"_index":67,"title":{},"body":{"injectables/ApiUrlService.html":{}}}],["userservice",{"_index":1537,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["uses",{"_index":1797,"title":{},"body":{"index.html":{}}}],["using",{"_index":1756,"title":{},"body":{"index.html":{}}}],["utilisant",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utilisateur",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["utilitaire",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["utility",{"_index":948,"title":{},"body":{"injectables/ProductService.html":{}}}],["utils/utils",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["vagrant",{"_index":1815,"title":{},"body":{"index.html":{}}}],["valeur",{"_index":1225,"title":{},"body":{"components/SignIn.html":{}}}],["valid",{"_index":1204,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["validateimagefile",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["validateimagefile(file",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["validates",{"_index":1134,"title":{},"body":{"components/SignIn.html":{}}}],["validation",{"_index":1120,"title":{},"body":{"components/SignIn.html":{},"injectables/UserService.html":{}}}],["validationresult",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["validationresult.error",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["validationresult.isvalid",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["validator",{"_index":1140,"title":{},"body":{"components/SignIn.html":{}}}],["validators",{"_index":1112,"title":{},"body":{"components/SignIn.html":{}}}],["validators.email",{"_index":1222,"title":{},"body":{"components/SignIn.html":{}}}],["validators.minlength(6",{"_index":1223,"title":{},"body":{"components/SignIn.html":{}}}],["validators.required",{"_index":1221,"title":{},"body":{"components/SignIn.html":{}}}],["valide",{"_index":1525,"title":{},"body":{"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["valider",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["validity",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["valu",{"_index":491,"title":{},"body":{"components/CircularImage.html":{}}}],["valuation",{"_index":1053,"title":{},"body":{"injectables/ProductService.html":{}}}],["value",{"_index":36,"title":{},"body":{"injectables/ApiUrlService.html":{},"components/App.html":{},"injectables/AuthService.html":{},"injectables/CarouselCustomConfig.html":{},"components/CircularImage.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":160,"title":{},"body":{"components/App.html":{},"components/CircularImage.html":{},"components/Dashboard.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"components/ProductManagement.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/ToastSampleIconComponent.html":{},"components/UpdateForm.html":{}}}],["variable",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1848,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ven",{"_index":582,"title":{},"body":{"components/Dashboard.html":{}}}],["ventes",{"_index":569,"title":{},"body":{"components/Dashboard.html":{}}}],["verifying",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["vers",{"_index":650,"title":{},"body":{"injectables/GuardService.html":{},"components/Navbar.html":{}}}],["version",{"_index":1758,"title":{},"body":{"index.html":{},"properties.html":{}}}],["veuillez",{"_index":1523,"title":{},"body":{"components/UpdateForm.html":{}}}],["video",{"_index":205,"title":{},"body":{"interfaces/AuthFormData.html":{},"interfaces/AuthResponse.html":{},"interfaces/ErrorMessage.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaItem.html":{},"interfaces/Product.html":{},"interfaces/ProductFormData.html":{},"interfaces/ServiceResponse.html":{},"interfaces/UploadProgress.html":{},"interfaces/User.html":{},"interfaces/productImage.html":{}}}],["view",{"_index":775,"title":{},"body":{"components/ProductCard.html":{}}}],["viewdetails",{"_index":751,"title":{},"body":{"components/ProductCard.html":{}}}],["viewed",{"_index":806,"title":{},"body":{"components/ProductCard.html":{}}}],["viewing",{"_index":841,"title":{},"body":{"components/ProductCard.html":{}}}],["viewproductdetails",{"_index":747,"title":{},"body":{"components/ProductCard.html":{}}}],["viewproductdetails(productid",{"_index":803,"title":{},"body":{"components/ProductCard.html":{}}}],["visibilit",{"_index":1429,"title":{},"body":{"components/ToastError.html":{}}}],["visibility",{"_index":1153,"title":{},"body":{"components/SignIn.html":{}}}],["visible",{"_index":1373,"title":{},"body":{"components/ToastError.html":{}}}],["visit",{"_index":1840,"title":{},"body":{"index.html":{}}}],["visiteurs",{"_index":534,"title":{},"body":{"components/Dashboard.html":{}}}],["voici",{"_index":514,"title":{},"body":{"components/Dashboard.html":{}}}],["void",{"_index":475,"title":{},"body":{"components/CircularImage.html":{},"components/Dashboard.html":{},"injectables/DataService.html":{},"components/Navbar.html":{},"components/ProductCard.html":{},"injectables/ProductService.html":{},"components/SignIn.html":{},"components/ToastError.html":{},"components/UpdateForm.html":{},"injectables/UserService.html":{}}}],["voie",{"_index":1277,"title":{},"body":{"components/SignIn.html":{}}}],["voir",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"components/Dashboard.html":{}}}],["volution",{"_index":570,"title":{},"body":{"components/Dashboard.html":{}}}],["vos",{"_index":517,"title":{},"body":{"components/Dashboard.html":{}}}],["vrai",{"_index":1431,"title":{},"body":{"components/ToastError.html":{}}}],["vérification",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["vérifie",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["vérifier",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["wait",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["webp",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["welcome",{"_index":1300,"title":{},"body":{"components/SignIn.html":{}}}],["went",{"_index":1409,"title":{},"body":{"components/ToastError.html":{}}}],["whenever",{"_index":1773,"title":{},"body":{"index.html":{}}}],["whose",{"_index":805,"title":{},"body":{"components/ProductCard.html":{}}}],["works",{"_index":887,"title":{},"body":{"components/ProductManagement.html":{}}}],["wrong",{"_index":1410,"title":{},"body":{"components/ToastError.html":{}}}],["x",{"_index":863,"title":{},"body":{"components/ProductCard.html":{}}}],["y",{"_index":1030,"title":{},"body":{"injectables/ProductService.html":{}}}],["yes",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"components/SignIn.html":{},"injectables/UserService.html":{}}}],["zone.js",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["zéro",{"_index":1098,"title":{},"body":{"components/SignIn.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiUrlService.html":{"url":"injectables/ApiUrlService.html","title":"injectable - ApiUrlService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiUrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-url-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ADD_IMG_BY_PRODUCT_ID\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Readonly\n                                CREATE_PRODUCT\n                            \n                            \n                                    Readonly\n                                DELETE_IMG_BY_Media_ID\n                            \n                            \n                                    Readonly\n                                DELETE_PRODUCT_BY_ID\n                            \n                            \n                                    Readonly\n                                DELETE_USER\n                            \n                            \n                                    Readonly\n                                GET_ALL_PRODUCTS\n                            \n                            \n                                    Readonly\n                                GET_ALL_USERS\n                            \n                            \n                                    Readonly\n                                GET_CURRENT_USER\n                            \n                            \n                                    Readonly\n                                GET_MY_ALL_PRODUCT\n                            \n                            \n                                    Readonly\n                                GET_PRODUCT_BY_ID\n                            \n                            \n                                    Readonly\n                                GET_USER_BY_EMAIL\n                            \n                            \n                                    Readonly\n                                GET_USER_BY_ID\n                            \n                            \n                                    Readonly\n                                GET_USER_BY_NAME\n                            \n                            \n                                    Readonly\n                                LOGIN\n                            \n                            \n                                    Readonly\n                                REGISTER\n                            \n                            \n                                    Readonly\n                                UPDATE_AVATAR\n                            \n                            \n                                    Readonly\n                                UPDATE_PRODUCT\n                            \n                            \n                                    Readonly\n                                UPDATE_USER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-url-service.ts:86\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ADD_IMG_BY_PRODUCT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:86\n                        \n                    \n\n            \n                \n                    API endpoint to add an image to a product by Product ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the product to add the image to.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:8443'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        CREATE_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/products/create`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:66\n                        \n                    \n\n            \n                \n                    API endpoint to create a new product.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        DELETE_IMG_BY_Media_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:75\n                        \n                    \n\n            \n                \n                    API endpoint to delete an image by its Media ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The Media ID of the image to delete.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        DELETE_PRODUCT_BY_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:80\n                        \n                    \n\n            \n                \n                    API endpoint to delete a product by ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the product to delete.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        DELETE_USER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:26\n                        \n                    \n\n            \n                \n                    API endpoint to delete a user by ID (admin only).\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the user to delete.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_ALL_PRODUCTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/products/all`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:68\n                        \n                    \n\n            \n                \n                    API endpoint to get all products.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_ALL_USERS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/admin/users/all`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:21\n                        \n                    \n\n            \n                \n                    API endpoint to get all users (admin only).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_CURRENT_USER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/users/me`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:47\n                        \n                    \n\n            \n                \n                    API endpoint to get the currently authenticated user's profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_MY_ALL_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/products/myproducts`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:70\n                        \n                    \n\n            \n                \n                    API endpoint to get all products owned by the current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_PRODUCT_BY_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:59\n                        \n                    \n\n            \n                \n                    API endpoint to get a product by ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_USER_BY_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:52\n                        \n                    \n\n            \n                \n                    API endpoint to get a user by email address.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    email\n                                                    \n                                                            The email address of the user to retrieve.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_USER_BY_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:40\n                        \n                    \n\n            \n                \n                    API endpoint to get a user by ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the user to retrieve.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        GET_USER_BY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:45\n                        \n                    \n\n            \n                \n                    API endpoint to get a user by username.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    userId\n                                                    \n                                                            The username of the user to retrieve.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/auth/login`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:17\n                        \n                    \n\n            \n                \n                    API endpoint for user login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        REGISTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/auth/register`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:15\n                        \n                    \n\n            \n                \n                    API endpoint for user registration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UPDATE_AVATAR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.baseUrl}/api/users/update/avatar`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:35\n                        \n                    \n\n            \n                \n                    API endpoint to update the current user's avatar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UPDATE_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:64\n                        \n                    \n\n            \n                \n                    API endpoint to update a product by ID.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            The ID of the product to update.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UPDATE_USER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-url-service.ts:33\n                        \n                    \n\n            \n                \n                    API endpoint to update a user by ID.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for managing API URLs.\n * Provides a centralized location for all backend API endpoints.\n */\nexport class ApiUrlService {\n private readonly baseUrl = 'https://localhost:8443'; // À remplacer par environment.apiUrl en production\n\n /** Auth Endpoints */\n /** API endpoint for user registration. */\n readonly REGISTER = `${this.baseUrl}/api/auth/register`;\n /** API endpoint for user login. */\n readonly LOGIN = `${this.baseUrl}/api/auth/login`;\n\n  /** Admin Endpoints */\n  /** API endpoint to get all users (admin only). */\n  readonly GET_ALL_USERS = `${this.baseUrl}/api/admin/users/all`;\n  /**\n   * API endpoint to delete a user by ID (admin only).\n   * @param id The ID of the user to delete.\n   */\n  readonly DELETE_USER = (id: number) => `${this.baseUrl}/api/admin/users/del/${id}`;\n\n  /** User Endpoints */\n  /**\n   * API endpoint to update a user by ID.\n   * @param id The ID of the user to update.\n   */\n  readonly UPDATE_USER = (id: string) => `${this.baseUrl}/api/users/update/${id}`;\n  /** API endpoint to update the current user's avatar. */\n  readonly UPDATE_AVATAR = `${this.baseUrl}/api/users/update/avatar`;\n  /**\n   * API endpoint to get a user by ID.\n   * @param id The ID of the user to retrieve.\n   */\n  readonly GET_USER_BY_ID = (id: number) => `${this.baseUrl}/api/users/profile/${id}`;\n  /**\n   * API endpoint to get a user by username.\n   * @param userId The username of the user to retrieve.\n   */\n  readonly GET_USER_BY_NAME = (userId: string) => `${this.baseUrl}/api/users/name/${userId}`;\n  /** API endpoint to get the currently authenticated user's profile. */\n  readonly GET_CURRENT_USER = `${this.baseUrl}/api/users/me`;\n  /**\n   * API endpoint to get a user by email address.\n   * @param email The email address of the user to retrieve.\n   */\n  readonly GET_USER_BY_EMAIL = (email: string) => `${this.baseUrl}/api/users/email/${email}`;\n\n  /** Product Endpoints */\n  /**\n   * API endpoint to get a product by ID.\n   * @param id The ID of the product to retrieve.\n   */\n  readonly GET_PRODUCT_BY_ID = (id: string) => `${this.baseUrl}/api/products/${id}`;\n  /**\n   * API endpoint to update a product by ID.\n   * @param id The ID of the product to update.\n   */\n  readonly UPDATE_PRODUCT = (id: string) => `${this.baseUrl}/api/products/update/${id}`;\n  /** API endpoint to create a new product. */\n  readonly CREATE_PRODUCT = `${this.baseUrl}/api/products/create`;\n  /** API endpoint to get all products. */\n  readonly GET_ALL_PRODUCTS = `${this.baseUrl}/api/products/all`;\n  /** API endpoint to get all products owned by the current user. */\n  readonly GET_MY_ALL_PRODUCT = `${this.baseUrl}/api/products/myproducts`\n  /**\n   * API endpoint to delete an image by its Media ID.\n   * @param id The Media ID of the image to delete.\n   */\n  readonly DELETE_IMG_BY_Media_ID = (id: string) => `${this.baseUrl}/api/media/delete/${id}`\n  /**\n   * API endpoint to delete a product by ID.\n   * @param id The ID of the product to delete.\n   */\n  readonly DELETE_PRODUCT_BY_ID = (id: string) => `${this.baseUrl}/api/products/delete/${id}`\n\n  /**\n   * API endpoint to add an image to a product by Product ID.\n   * @param id The ID of the product to add the image to.\n   */\n  readonly ADD_IMG_BY_PRODUCT_ID = (id : string) => `${this.baseUrl}/api/media/add/${id}`\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                Navbar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'e-comerce'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Navbar } from './navbar/navbar';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,Navbar],\n  templateUrl: './app.html',\n  styleUrl: './app.css'\n})\nexport class App {\n  protected title = 'e-comerce';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthFormData.html":{"url":"interfaces/AuthFormData.html","title":"interface - AuthFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"CLIENT\" | \"SELLER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"CLIENT\" | \"SELLER\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isSignIn\n                            \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Public\n                                isSignIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuth\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiUrlService: ApiUrlService, sharedData: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrlService\n                                                  \n                                                        \n                                                                        ApiUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedData\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Checks the current authentication status by verifying the stored token with the backend.\nUpdates the currentUserSubject and _isSignIn signals based on the token's validity.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the user is authenticated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(data_form: AuthFormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Authenticates a user by sending their credentials to the login API.\nOn successful login, stores the authentication token and updates the user's sign-in status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data_form\n                                            \n                                                            AuthFormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The authentication form data containing email and password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to true if sign-in is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Signs out the current user by clearing local storage and resetting authentication states.\n\n\n                        \n                            Returns :         ServiceResponse\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(data_form: AuthFormData, avatarFile?: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Registers a new user by sending their registration data and an optional avatar file to the sign-up API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data_form\n                                            \n                                                            AuthFormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registration form data containing user details.\n\n                                            \n                                        \n                                        \n                                                avatarFile\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Optional. The avatar image file to upload for the new user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves when the sign-up process is complete.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isSignIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSignIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._isSignIn.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { User, AuthFormData, AuthResponse, ServiceResponse } from '../models/interfaces';\nimport { ApiUrlService } from './api-url-service';\nimport { handleHttpError } from '../utils/utils';\nimport { DataService } from './data-service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for handling user authentication, including sign-in, sign-up, and session management.\n * Manages the current user's authentication state and provides methods for interacting with the authentication API.\n */\nexport class AuthService {\n  private currentUserSubject = signal(null);\n  public currentUser$ = this.currentUserSubject.asReadonly();\n  private _isSignIn = signal(false);\n  public isSignIn$ = this._isSignIn.asReadonly();\n\n  constructor(private apiUrlService: ApiUrlService, private sharedData: DataService) {\n    // Check for stored user\n    this.checkAuth();\n  }\n\n  /**\n   * Authenticates a user by sending their credentials to the login API.\n   * On successful login, stores the authentication token and updates the user's sign-in status.\n   * @param data_form The authentication form data containing email and password.\n   * @returns A Promise that resolves to `true` if sign-in is successful, `false` otherwise.\n   */\n  async signIn(data_form: AuthFormData): Promise {\n    // Mock authentication - simulate API call\n    console.log('Signing in with data:', data_form);\n    try {\n      let res = await fetch(this.apiUrlService.LOGIN, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data_form)\n      }).then((res) => res.json());\n      console.log('Login response:', res);\n      if (!res.token) {\n        console.log('Login error:', handleHttpError(res).message);\n        return { success: false, error: handleHttpError(res).message };\n      }\n      this._isSignIn.set(true);\n      localStorage.setItem('token', res.token);\n      await this.checkAuth();\n    } catch (error: any) {\n      return { success: false, error: handleHttpError(error).message };\n    }\n    return { success: true };\n  }\n\n  /**\n   * Registers a new user by sending their registration data and an optional avatar file to the sign-up API.\n   * @param data_form The registration form data containing user details.\n   * @param avatarFile Optional. The avatar image file to upload for the new user.\n   * @returns A Promise that resolves when the sign-up process is complete.\n   * @throws Error if registration fails or an invalid avatar file type is provided.\n   */\n  async signUp(data_form: AuthFormData, avatarFile?: File): Promise {\n    const formData = new FormData();\n    const file: File | Blob | null = avatarFile || null;\n    // Créer l'objet JSON pour les données utilisateur\n    const userData = {\n      email: data_form.email,\n      password: data_form.password,\n      name: data_form.name,\n      role: data_form.role\n    };\n\n    // Ajouter les données JSON comme Blob avec le bon Content-Type\n    formData.append('data', new Blob([JSON.stringify(userData)], {\n      type: 'application/json'\n    }));\n    // Vérification plus stricte du fichier\n    if (avatarFile) {\n      if (avatarFile instanceof File) {\n        console.log('Valid avatar file:', avatarFile.name, avatarFile.type);\n        formData.append('avatar', avatarFile);\n      } else if (file instanceof Blob) {\n        console.log('Avatar is a Blob, converting...');\n        formData.append('avatar', file, 'avatar.jpg');\n      } else {\n        throw new Error('Invalid avatar file');\n      }\n    }\n\n    console.log('Sending form data:', userData);\n\n    // Debug: voir le contenu du FormData\n    for (let [key, value] of formData.entries()) {\n      console.log(`${key}:`, value);\n    }\n\n    try {\n      let res: any = await fetch(this.apiUrlService.REGISTER, {\n        method: 'POST',\n        body: formData\n        // Ne pas définir Content-Type, le navigateur le fera automatiquement\n      });\n\n\n      const result = await res.json();\n      console.log('Registration success:', !result.role);\n\n      if (!result.role) {\n        console.error('Registration error:', handleHttpError(result));\n        return { success: false, error: handleHttpError(result).message };\n      }\n\n\n      return { success: true, data: result };\n\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      return { success: false, error: handleHttpError(error).message };\n    }\n  }\n\n  /**\n   * Signs out the current user by clearing local storage and resetting authentication states.\n   */\n  signOut(): ServiceResponse {\n    localStorage.removeItem('currentUser');\n    localStorage\n      .removeItem('token');\n    this._isSignIn.set(false);\n    localStorage.clear();\n    return { success: true };\n  }\n\n  /**\n   * Checks the current authentication status by verifying the stored token with the backend.\n   * Updates the `currentUserSubject` and `_isSignIn` signals based on the token's validity.\n   * @returns A Promise that resolves to `true` if the user is authenticated, `false` otherwise.\n   */\n  async checkAuth(): Promise {\n    const token = localStorage.getItem('token');\n    if (!token || token == undefined) {\n      this._isSignIn.set(false);\n      return false;\n    }\n\n    try {\n      const response = await fetch(this.apiUrlService.GET_CURRENT_USER, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n\n      if (response.ok) {\n        const user = await response.json();\n        this.currentUserSubject.set(user);\n        this._isSignIn.set(true);\n        return true;\n      }\n    } catch (error: any) {\n      this.sharedData.updateData({ error: 'Auth check failed: wait a moment and will retry', success: false });\n    }\n\n    this._isSignIn.set(false);\n    return false;\n  }\n\n  // /**\n  //  * Synchronously checks if an authentication token exists in local storage.\n  //  * This method is primarily used by route guards for immediate authentication checks.\n  //  * @returns `true` if a token is found, `false` otherwise.\n  //  */\n  // isAuthenticatedSync(): boolean {\n  //   return !!localStorage.getItem('token');\n  // }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarouselCustomConfig.html":{"url":"injectables/CarouselCustomConfig.html","title":"injectable - CarouselCustomConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CarouselCustomConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/products/circular-image/carroussel.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeIndex\n                            \n                            \n                                animate\n                            \n                            \n                                direction\n                            \n                            \n                                    Optional\n                                interval\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"next\" | \"prev\"\n\n                    \n                \n                \n                    \n                        Default value : 'next'\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3000\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/carroussel.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CarouselCustomConfig {\n  /* Animate transition of slides */\n  activeIndex = 0;\n  /* Animate transition of slides */\n  animate = true;\n  /* Default direction of auto changing of slides */\n  direction: 'next' | 'prev' = 'next';\n  /* Default interval of auto changing of slides */\n  interval? = 3000;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircularImage.html":{"url":"components/CircularImage.html","title":"component - CircularImage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CircularImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/products/circular-image/circular-image.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: CarouselConfig, useClass: CarouselCustomConfig }\n                \n            \n\n\n            \n                selector\n                app-circular-image\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            CarouselComponent\n                            CarouselInnerComponent\n                            CarouselItemComponent\n                            CarouselControlComponent\n                            RouterLink\n                            MatButtonToggleModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./circular-image.html\n            \n\n\n\n            \n                styleUrl\n                ./circular-image.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                productimg\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/products/circular-image/circular-image.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        productimg\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/circular-image/circular-image.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/circular-image/circular-image.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : new Array(3).fill({ id: -1, src: '', title: '', subtitle: '' })\n                    \n                \n                    \n                        \n                                Defined in src/app/products/circular-image/circular-image.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, model } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport {\n  CarouselComponent,\n  CarouselConfig,\n  CarouselControlComponent,\n  CarouselIndicatorsComponent,\n  CarouselInnerComponent,\n  CarouselItemComponent\n} from '@coreui/angular';\nimport { CarouselCustomConfig } from './carroussel.config';\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n    selector: 'app-circular-image',\n    imports: [CommonModule, CarouselComponent, CarouselInnerComponent, CarouselItemComponent, CarouselControlComponent, RouterLink, MatButtonToggleModule, MatIconModule],\n    templateUrl: './circular-image.html',\n    styleUrl: './circular-image.css',\n    providers: [{ provide: CarouselConfig, useClass: CarouselCustomConfig }]\n})\nexport class CircularImage {\n    @Input() productimg!: string[];\n    slides: any[] = new Array(3).fill({ id: -1, src: '', title: '', subtitle: '' });\n    constructor() { }\n\n    ngOnInit() {\n        this.productimg.forEach((valu, index) => {\n            this.slides[index] = {\n                src: valu\n            };\n        })\n    }\n}\n\n    \n\n    \n        \n  \n    @for (slide of slides; track slide.src) {\n      @if (slide.src) {\n        \n          \n        \n      }\n    }\n  \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (slide of slides; track slide.src) {      @if (slide.src) {                                }    }      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CircularImage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Dashboard.html":{"url":"components/Dashboard.html","title":"component - Dashboard","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Dashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/seller/dashboard/dashboard.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToMyProduct\n                            \n                            \n                                onNewProductClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/seller/dashboard/dashboard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToMyProduct\n                        \n                    \n                \n            \n            \n                \ngoToMyProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/seller/dashboard/dashboard.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNewProductClick\n                        \n                    \n                \n            \n            \n                \nonNewProductClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/seller/dashboard/dashboard.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  imports: [],\n  templateUrl: './dashboard.html',\n  styleUrl: './dashboard.css'\n})\nexport class Dashboard {\n  constructor(private router: Router) {}\n\n  goToMyProduct(){\n     console.log('Navigating to new product form');\n    this.router.navigate(['/products/myproduct']);\n  }\n\n  onNewProductClick(): void {\n    console.log('Navigating to new product form');\n    this.router.navigate(['/products/new']);\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    \n                \n            \n            Nouveau Produit\n        \n\n        \n        \n            \n                \n                    \n                        \n                            Tableau de bord\n                        Bienvenue ! Voici un aperçu de vos performances.\n                    \n                \n\n                \n                    \n                    \n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Produits\n                                            24\n                                            +2 ce mois\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir tous\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Commandes\n                                            12\n                                            +18% cette semaine\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir toutes\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Revenus\n                                            1,240.50 €\n                                            +12% ce mois\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir détails\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                                \n                                                \n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                            Visiteurs\n                                            1,024\n                                            +8% aujourd'hui\n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir statistiques\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n\n                    \n                    \n                        \n                        \n                            \n                                \n                                    \n                                        Commandes récentes\n                                        Les 5 dernières commandes de vos produits\n                                        \n                                    \n                                    \n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        \n                                            \n                                                CMD-2023-0012\n                                                \n                                                    Livré\n                                                \n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            JD\n                                                        \n                                                        Jean Dupont\n                                                    \n                                                \n                                                \n                                                    \n                                                        \n                                                        \n                                                    \n                                                    23 Janvier 2023\n                                                \n                                            \n                                            \n                                                2 produits\n                                                89.90 €\n                                            \n                                        \n                                    \n                                    \n                                        \n                                            \n                                                CMD-2023-0011\n                                                \n                                                    En cours\n                                                \n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            SM\n                                                        \n                                                        Sophie Martin\n                                                    \n                                                \n                                                \n                                                    \n                                                        \n                                                        \n                                                    \n                                                    22 Janvier 2023\n                                                \n                                            \n                                            \n                                                1 produit\n                                                45.00 €\n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Voir toutes les commandes\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n\n                        \n                        \n                            \n                                \n                                    \n                                        Produits en rupture\n                                        Produits avec un stock inférieur à 5\n                                            unités\n                                    \n                                    \n                                        \n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        \n                                            \n                                                T-shirt Premium\n                                                \n                                                    2 restants\n                                                \n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                        \n                                                    \n                                                    19.99 €\n                                                \n                                                \n                                                    \n                                                    \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Gérer le stock\n                                        \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n\n                    \n                    \n                        \n                            \n                                \n                                    Performances des ventes\n                                    Évolution des ventes sur les 30 derniers jours\n                                    \n                                \n                                \n                                    7j\n                                    30j\n                                    3m\n                                \n                            \n                        \n                        \n                            \n                                \n                                \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                \n                                \n                                \n                                    Lun\n                                    Mar\n                                    Mer\n                                    Jeu\n                                    Ven\n                                    Sam\n                                    Dim\n                                    Lun\n                                    Mar\n                                    Mer\n                                \n                            \n                            \n                                \n                                    €1,847\n                                    Total des ventes\n                                    +12.5%\n                                \n                                \n                                    47\n                                    Transactions\n                                    +8.2%\n                                \n                                \n                                    €39.3\n                                    Panier moyen\n                                    +3.8%\n                                \n                            \n                        \n                    \n\n                    \n                    \n                        \n                            \n                                \n                                    \n                                \n                            \n                            Ajouter un produit\n                            Créer un nouveau produit\n                        \n\n                        \n                            \n                                \n                                    \n                                    \n                                \n                            \n                            Nouvelle commande\n                            Créer une commande\n                        \n\n                        \n                            \n                                \n                                    \n                                \n                            \n                            Gérer clients\n                            Liste des clients\n                        \n\n                        \n                            \n                                \n                                    \n                                    \n                                \n                            \n                            Rapports\n                            Analyses détaillées\n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nouveau Produit                                                                                                                            Tableau de bord                        Bienvenue ! Voici un aperçu de vos performancesroduits                                            24                                            +2 ce mois                                                                                                                                                                                                                        Voir tousommandes                                            12                                            +18% cette semaine                                                                                                                                                                                                                        Voir toutesevenus                                            1,240.50 €                                            +12% ce mois                                                                                                                                                                                                                        Voir détailsisiteurs                                            1,024                                            +8% aujourd\\'hui                                                                                                                                                                                                                        Voir statistiques                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Commandes récentes                                        Les 5 dernières commandes de vos produitsivré                                                                                                                                                                                                                                                                                                                                                                JD                                                                                                                Jean Dupont                                                                                                                                                                                                                                                                                                                                                                                                                                23 Janvier 2023                                                                                                                                                                                        2 produits                                                89.90 €                                                                                                                                                                                                                                                                                                CMD-2023-0011                                                                                                    En cours                                                                                                                                                                                                                                                                                                                                                                SM                                                                                                                Sophie Martin                                                                                                                                                                                                                                                                                                                                                                                                                                22 Janvier 2023                                                                                                                                                                                        1 produit                                                45.00 €                                                                                                                                                                                                                                                                    Voir toutes les commandes                                                                                                                                                                                                                                                                                                                                                                                                                                            Produits en rupture                                        Produits avec un stock inférieur à 5                                            unitésshirt Premium                                                                                                    2 restants                                                                                                                                                                                                                                                                                                                                                                                                                                                                    19.99 €érer le stock                                                                                                                                                                                                                                                                                                                                                                                                                                        Performances des ventes                                    Évolution des ventes sur les 30 derniers jours                                                                                                                                        7j                                    30j                                    3mun                                    Mar                                    Mer                                    Jeu                                    Ven                                    Sam                                    Dim                                    Lun                                    Mar                                    Mer                                                                                                                                                            €1,847                                    Total des ventes                                    +12.5%                                                                                                    47                                    Transactions                                    +8.2%                                                                                                    €39.3                                    Panier moyen                                    +3.8%                                                                                                                                                                                                                                                                                                                                                                Ajouter un produit                            Créer un nouveau produit                                                                                                                                                                                                                                                                            Nouvelle commande                            Créer une commande                                                                                                                                                                                                                                        Gérer clients                            Liste des clients                                                                                                                                                                                                                                                                            Rapports                            Analyses détaillées                                                                                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Dashboard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/data-service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private dataSubject =  new BehaviorSubject(null);\n  public data$ = this.dataSubject.asObservable();\n\n  updateData(data: any) {\n    this.dataSubject.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuardService.html":{"url":"injectables/GuardService.html","title":"injectable - GuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guard-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guard-service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guard-service.ts:24\n                        \n                    \n\n\n            \n                \n                        Determines if a route can be activated.\nChecks user authentication and role-based access.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The activated route snapshot.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The router state snapshot.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                A boolean, UrlTree, Observable, or Promise indicating if the route can be activated.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable, of, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Guard service to protect routes based on user authentication status and role.\n * Implements the `CanActivate` interface to control access to routes.\n */\nexport class GuardService {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  /**\n   * Determines if a route can be activated.\n   * Checks user authentication and role-based access.\n   * @param route The activated route snapshot.\n   * @param state The router state snapshot.\n   * @returns A boolean, UrlTree, Observable, or Promise indicating if the route can be activated.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return this.authService.checkAuth().then(authenticated => {\n      if (!authenticated) {\n        return this.router.createUrlTree(['/auth'], {\n          queryParams: { returnUrl: state.url }\n        });\n      }\n\n      const user = this.authService.currentUser$(); // Supposons que cette méthode existe\n      const allowedRoutesForClient = ['/', '/profil'];\n\n      if (user?.role === 'CLIENT' && !allowedRoutesForClient.includes(state.url)) {\n        // Rediriger vers une page autorisée ou retourner false\n        return this.router.createUrlTree(['/']); // Ou return false;\n      }\n\n      return true;\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            uploadedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploadedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uploadedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaItem.html":{"url":"interfaces/MediaItem.html","title":"interface - MediaItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            uploadedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"image\" | \"video\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"image\" | \"video\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploadedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uploadedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Navbar.html":{"url":"components/Navbar.html","title":"component - Navbar","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Navbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                                ToastError\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Public\n                                isSignIn\n                            \n                            \n                                messageStatus\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSeller\n                            \n                            \n                                myProfile\n                            \n                            \n                                navigateAndSetActive\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSignIn\n                            \n                            \n                                onSignOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router, authService: AuthService, sharedData: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedData\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isSeller\n                        \n                    \n                \n            \n            \n                \nisSeller()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myProfile\n                        \n                    \n                \n            \n            \n                \nmyProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndSetActive\n                        \n                    \n                \n            \n            \n                \nnavigateAndSetActive(route: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSignIn\n                        \n                    \n                \n            \n            \n                \nonSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSignOut\n                        \n                    \n                \n            \n            \n                \nonSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSignIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    error: this.errorMessage(),\n    success: this.successMessage()\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, effect, OnInit, signal, Signal } from '@angular/core';\nimport { User } from '../models/interfaces';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { DataService } from '../services/data-service';\nimport { ToastError } from \"../error/toast-error/toast-error\";\n\n@Component({\n  selector: 'app-navbar',\n  imports: [ToastError],\n  templateUrl: './navbar.html',\n  styleUrl: './navbar.css'\n})\nexport class Navbar implements OnInit {\n  public currentUser = signal(null);\n  public isSignIn: Signal = signal(false);\n\n  // Nouvelles propriétés pour la gestion d'état\n  errorMessage = signal('');\n  successMessage = signal('');\n  messageStatus = computed(() => ({\n    error: this.errorMessage(),\n    success: this.successMessage()\n  }));\n  constructor(private route: Router, private authService: AuthService, private sharedData: DataService) {\n    effect(() => {\n      const user = this.authService.currentUser$();\n      if (user) {\n        this.currentUser.set(user);\n      } else {\n        this.currentUser.set(null);\n      }\n    });\n  }\n  async ngOnInit() {\n    // Claim  the current user on authservice  signal\n    await this.authService.checkAuth()\n    this.sharedData.data$.subscribe((data: any) => {\n      console.log('DEBUG - DataService data updated:', data);\n\n      // Réinitialiser les messages\n      this.errorMessage.set('');\n      this.successMessage.set('');\n      if (data.success) {\n        this.successMessage.set(data.message ?? 'Operation successful');\n      } else if (data.error) {\n        this.errorMessage.set(data.error);\n      }\n    });\n    this.isSignIn = this.authService.isSignIn$;\n    this.currentUser.set(this.authService.currentUser$());\n\n  }\n  onSignIn() {\n    this.route.navigate(['auth']);\n  }\n\n  myProfile() {\n    console.log('Navigating to profile');\n    // Navigate to the profile page\n    this.route.navigate(['profil']);\n  }\n\n  isSeller(): boolean {\n    const user = this.currentUser();\n    return user?.role == 'SELLER'\n  }\n\n  onSignOut() {\n    this.authService.signOut();\n    this.route.navigate(['auth']);\n  }\n  navigateAndSetActive(route: string, event: Event) {\n    event.preventDefault();\n\n    // Supprimer la classe active de tous les liens\n    document.querySelectorAll('.navbar-link').forEach(link => {\n      link.classList.remove('active');\n    });\n\n    // Ajouter la classe active au lien cliqué\n    (event.target as HTMLElement).classList.add('active');\n\n    // Naviguer vers la route\n    this.route.navigate([route]);\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n        \n\n            \n                \n                    \n                \n            \n        \n\n        \n        \n            \n                Catalogue\n            \n            @if (isSeller()) {\n            \n                Dashboard\n            \n            }\n        \n\n        \n        \n            \n            \n                ♡\n            \n\n            \n            \n                🛒\n                3\n            \n\n            \n            @if (!isSignIn()) {\n            \n                Sign In\n            \n            }@else {\n            \n                {{\n                    currentUser()?.name }}\n                \n                    Logout\n                \n            \n            }\n        \n\n        \n        \n            \n            \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                        Catalogue                        @if (isSeller()) {                            Dashboard                        }                                                                ♡                                                    🛒                3                                    @if (!isSignIn()) {                            Sign In                        }@else {                            {{                    currentUser()?.name }}                                    Logout                                        }                                                                        '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Navbar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrls\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sellerAvatar\n                                        \n                                \n                                \n                                        \n                                            sellerName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrls:         productImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         productImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductCard.html":{"url":"components/ProductCard.html","title":"component - ProductCard","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/products/product-card/product-card.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-card\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                CircularImage\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-card.html\n            \n\n\n\n            \n                styleUrl\n                ./product-card.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imageurls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                canHide\n                            \n                            \n                                deleteImage\n                            \n                            \n                                    Async\n                                goToUpdateProduct\n                            \n                            \n                                viewProductDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartEvent\n                            \n                            \n                                productIdEvent\n                            \n                            \n                                viewDetails\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    badgeText\n                                \n                                \n                                    badgeClass\n                                \n                                \n                                    stockStatusText\n                                \n                                \n                                    stockStatusClass\n                                \n                                \n                                    productPrice\n                                \n                                \n                                    productImageUrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(datasharedService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/products/product-card/product-card.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasharedService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        product\n                    \n                \n                \n                    \n                        Type :         Product\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:22\n                            \n                        \n                \n                    \n                        The product data to be displayed in the card.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addToCartEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:26\n                            \n                        \n                \n                    \n                        Emits the product object when the \"add to cart\" action is triggered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        productIdEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:28\n                            \n                        \n                \n                    \n                        Emits the product ID when an image deletion is requested.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewDetails\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/products/product-card/product-card.ts:24\n                            \n                        \n                \n                    \n                        Emits the product ID when the \"view details\" action is triggered.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:124\n                        \n                    \n\n\n            \n                \n                        Emits the product object to indicate that the user wants to add it to the cart.\nPrevents event propagation to avoid triggering other click handlers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canHide\n                        \n                    \n                \n            \n            \n                \ncanHide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:132\n                        \n                    \n\n\n            \n                \n                        Determines if certain elements (e.g., update/delete buttons) should be hidden based on the current route.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the current path is '/products/myproduct', false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteImage\n                        \n                    \n                \n            \n            \n                \ndeleteImage(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:37\n                        \n                    \n\n\n            \n                \n                        Emits the product ID to signal a request to delete an image associated with the product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the image to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToUpdateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToUpdateProduct(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:141\n                        \n                    \n\n\n            \n                \n                        Navigates to the product update page, passing the current product data.\nPrevents event propagation to avoid triggering other click handlers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewProductDetails\n                        \n                    \n                \n            \n            \n                \nviewProductDetails(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/products/product-card/product-card.ts:115\n                        \n                    \n\n\n            \n                \n                        Emits the product ID to indicate that the user wants to view product details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product whose details are to be viewed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imageurls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/products/product-card/product-card.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        badgeText\n                    \n                \n\n                \n                    \n                        getbadgeText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:46\n                                \n                            \n                    \n                        \n                                Computes a badge text based on product properties like creation date, quantity, and price.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        badgeClass\n                    \n                \n\n                \n                    \n                        getbadgeClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:62\n                                \n                            \n                    \n                        \n                                Computes the CSS class for the product badge based on its text.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stockStatusText\n                    \n                \n\n                \n                    \n                        getstockStatusText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:76\n                                \n                            \n                    \n                        \n                                Computes a human-readable stock status message based on the product's quantity.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stockStatusClass\n                    \n                \n\n                \n                    \n                        getstockStatusClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:86\n                                \n                            \n                    \n                        \n                                Computes the CSS class for the stock status based on the product's quantity.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        productPrice\n                    \n                \n\n                \n                    \n                        getproductPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:96\n                                \n                            \n                    \n                        \n                                Formats the product's price into a currency string (EUR, French locale).\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        productImageUrls\n                    \n                \n\n                \n                    \n                        getproductImageUrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/products/product-card/product-card.ts:107\n                                \n                            \n                    \n                        \n                                Extracts an array of image URLs from the product's image objects.\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Product } from '../../models/interfaces';\nimport { CommonModule } from '@angular/common';\nimport { CircularImage } from \"../circular-image/circular-image\";\nimport { DataService } from '../../services/data-service';\nimport { Router } from '@angular/router';\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n  selector: 'app-product-card',\n  imports: [CommonModule, CircularImage, MatIconModule],\n  templateUrl: './product-card.html',\n  styleUrl: './product-card.css'\n})\n/**\n * Component for displaying a single product as a card.\n * Handles displaying product details, badges, stock status, and user interactions like\n * viewing details, adding to cart, and deleting images (for seller's own products).\n */\nexport class ProductCard {\n  /** The product data to be displayed in the card. */\n  @Input() product!: Product;\n  /** Emits the product ID when the \"view details\" action is triggered. */\n  @Output() viewDetails = new EventEmitter();\n  /** Emits the product object when the \"add to cart\" action is triggered. */\n  @Output() addToCartEvent = new EventEmitter();\n  /** Emits the product ID when an image deletion is requested. */\n  @Output() productIdEvent = new EventEmitter();\n  imageurls: string[] = [];\n\n  constructor(private datasharedService: DataService, private router: Router) { }\n\n  /**\n   * Emits the product ID to signal a request to delete an image associated with the product.\n   * @param id The ID of the image to be deleted.\n   */\n  deleteImage(id: string) {\n    console.log(\"emission du product id \",id)\n    this.productIdEvent.emit(this.product.id);\n  }\n\n  /**\n   * Computes a badge text based on product properties like creation date, quantity, and price.\n   * @returns A string representing the badge (e.g., 'Nouveau', 'Stock Limité', 'Promo', 'Premium').\n   */\n  get badgeText(): string {\n    const daysSinceCreation = Math.floor(\n      (new Date().getTime() - new Date(this.product.createdAt || 0).getTime()) / (1000 * 60 * 60 * 24)\n    );\n\n    if (daysSinceCreation  300) return 'Premium';\n    return '';\n  }\n\n  /**\n   * Computes the CSS class for the product badge based on its text.\n   * @returns A string representing the CSS class.\n   */\n  get badgeClass(): string {\n    switch (this.badgeText) {\n      case 'Nouveau': return 'badge-new';\n      case 'Stock Limité': return 'badge-limited';\n      case 'Promo': return 'badge-promo';\n      case 'Premium': return 'badge-premium';\n      default: return '';\n    }\n  }\n\n  /**\n   * Computes a human-readable stock status message based on the product's quantity.\n   * @returns A string indicating the stock status (e.g., 'Rupture de stock', 'Plus que X en stock', 'En stock').\n   */\n  get stockStatusText(): string {\n    if (this.product.quantity === 0) return 'Rupture de stock';\n    if (this.product.quantity  image.imagePath);\n  }\n\n  /**\n   * Emits the product ID to indicate that the user wants to view product details.\n   * @param productId The ID of the product whose details are to be viewed.\n   */\n  viewProductDetails(productId: string) {\n    this.viewDetails.emit(productId);\n  }\n\n  /**\n   * Emits the product object to indicate that the user wants to add it to the cart.\n   * Prevents event propagation to avoid triggering other click handlers.\n   * @param event The DOM event.\n   */\n  addToCart(event: Event) {\n    event.stopPropagation();\n    this.addToCartEvent.emit(this.product);\n  }\n  /**\n   * Determines if certain elements (e.g., update/delete buttons) should be hidden based on the current route.\n   * @returns True if the current path is '/products/myproduct', false otherwise.\n   */\n  canHide(): boolean {\n    return location.pathname === \"/products/myproduct\";\n  }\n\n  /**\n   * Navigates to the product update page, passing the current product data.\n   * Prevents event propagation to avoid triggering other click handlers.\n   * @param event The DOM event.\n   */\n  async goToUpdateProduct(event: Event) {\n    event.stopPropagation();\n    this.datasharedService.updateData(this.product);\n    // Correction de la navigation\n    await this.router.navigate([\"/products/update\"]);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    @if (product.imageUrls && product.imageUrls.length > 0) {\n    @if (product.imageUrls.length > 1) {\n     -->\n    \n     -->\n    } @else if (product.imageUrls.length === 1) {\n    \n    }\n    } @else {\n    \n    }\n    \n      {{ badgeText }}\n    \n  \n\n\n  \n  \n    {{ product.category }}\n    {{ product.name }}\n    {{ product.description }}\n\n    \n    \n      \n      {{ product.sellerName }}\n    \n\n    \n    \n      {{ stockStatusText }}\n    \n\n    \n    \n      {{ productPrice }}\n      @if (!canHide()) {\n      \n         0\">Ajouter\n        Indisponible\n      \n      } @else {\n      \n        View\n      \n      \n        Delete\n      \n\n      }\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        @if (product.imageUrls && product.imageUrls.length > 0) {    @if (product.imageUrls.length > 1) {     -->         -->    } @else if (product.imageUrls.length === 1) {        }    } @else {        }          {{ badgeText }}              {{ product.category }}    {{ product.name }}    {{ product.description }}                    {{ product.sellerName }}                  {{ stockStatusText }}                  {{ productPrice }}      @if (!canHide()) {               0\">Ajouter        Indisponible            } @else {              View                    Delete            }      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductCard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductFormData.html":{"url":"interfaces/ProductFormData.html","title":"interface - ProductFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            imageUrls\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sellerName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrls:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductManagement.html":{"url":"components/ProductManagement.html","title":"component - ProductManagement","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductManagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/seller/product-management/product-management.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-management\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./product-management.html\n            \n\n\n\n            \n                styleUrl\n                ./product-management.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-product-management',\n  imports: [],\n  templateUrl: './product-management.html',\n  styleUrl: './product-management.css'\n})\nexport class ProductManagement {\n\n}\n\n    \n\n    \n        product-management works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'product-management works!'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductManagement'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/product-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addImageInProduct\n                            \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                deleteImageInProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Private\n                                getHeaderToken\n                            \n                            \n                                getMyProduct\n                            \n                            \n                                    Async\n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                    Async\n                                retryOperation\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiUrl: ApiUrlService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/product-service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        ApiUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addImageInProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    addImageInProduct(id: string, formdata: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:244\n                        \n                    \n\n\n            \n                \n                        Adds one or more images to an existing product on the backend.\nProcesses files sequentially and reports individual and overall success/failure.\n         including details about uploaded and failed images.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to add images to.\n\n                                            \n                                        \n                                        \n                                                formdata\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    An array of File objects representing the images to upload.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure,\nincluding details about uploaded and failed images.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    addProduct(product: FormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:105\n                        \n                    \n\n\n            \n                \n                        Adds a new product to the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                        FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The FormData object containing product details and images.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteImageInProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteImageInProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:178\n                        \n                    \n\n\n            \n                \n                        Deletes an image associated with a product from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the image to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:322\n                        \n                    \n\n\n            \n                \n                        Deletes a product from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaderToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaderToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:92\n                        \n                    \n\n\n            \n                \n                        Retrieves the authentication token from local storage and formats it for HTTP headers.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The formatted authorization header string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyProduct\n                        \n                    \n                \n            \n            \n                \ngetMyProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:41\n                        \n                    \n\n\n            \n                \n                        Fetches products owned by the current authenticated user from the backend.\nRequires an authentication token.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Product objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:61\n                        \n                    \n\n\n            \n                \n                        Récupère un produit par son ID depuis le backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'ID du produit à récupérer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Une Promise qui résout avec le produit ou une erreur.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:26\n                        \n                    \n\n\n            \n                \n                        Fetches all products from the backend.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Product objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        retryOperation\n                        \n                    \n                \n            \n            \n                \n                        \n                    retryOperation(operation: () => void, maxRetries: number, baseDelay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:390\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Utility method to retry an asynchronous operation with exponential backoff.\n         or rejects with the last error after all retries are exhausted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The asynchronous function to retry.\n\n                                            \n                                        \n                                        \n                                                maxRetries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    The maximum number of retry attempts. Defaults to 3.\n\n                                            \n                                        \n                                        \n                                                baseDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                            \n                                                    The base delay in milliseconds before the first retry. Defaults to 1000ms.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves with the result of the operation if successful,\nor rejects with the last error after all retries are exhausted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-service.ts:142\n                        \n                    \n\n\n            \n                \n                        Updates an existing product on the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to update.\n\n                                            \n                                        \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Product object containing the updated details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiUrlService } from './api-url-service';\nimport { Product, ServiceResponse } from '../models/interfaces';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable, firstValueFrom, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { handleHttpError } from '../utils/utils';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for managing product-related operations, including fetching, adding, updating,\n * and deleting products and their associated images.\n */\nexport class ProductService {\n\n  constructor(private apiUrl: ApiUrlService, private http: HttpClient) { }\n\n  /**\n   * Fetches all products from the backend.\n   * @returns An Observable that emits an array of Product objects.\n   */\n  getProducts(): Observable {\n    console.log('Fetching products from:', this.apiUrl.GET_ALL_PRODUCTS);\n    return this.http.get(this.apiUrl.GET_ALL_PRODUCTS).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.error('Error fetching products:', error);\n        return throwError(() => handleHttpError(error));\n      })\n    );\n  }\n\n  /**\n   * Fetches products owned by the current authenticated user from the backend.\n   * Requires an authentication token.\n   * @returns An Observable that emits an array of Product objects.\n   */\n  getMyProduct(): Observable {\n    console.log('Fetching products from:', this.apiUrl.GET_MY_ALL_PRODUCT);\n    return this.http.get(this.apiUrl.GET_MY_ALL_PRODUCT, {\n      headers: {\n        'Authorization': this.getHeaderToken()\n      }\n    }).pipe(\n      catchError((error: HttpErrorResponse) => {\n        // const err  = error.error;\n        console.error('Test Error fetching my products:', error);\n        return throwError(() => handleHttpError(error));\n      })\n    );\n  }\n\n  /**\n * Récupère un produit par son ID depuis le backend.\n * @param id L'ID du produit à récupérer.\n * @returns Une Promise qui résout avec le produit ou une erreur.\n */\n  async getProductById(id: string): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.http.get(this.apiUrl.GET_PRODUCT_BY_ID(id), {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          }\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error fetching product by ID:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n      return {\n        success: true,\n        data: response\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        error: handleHttpError(error).message\n      };\n    }\n  }\n\n /**\n   * Retrieves the authentication token from local storage and formats it for HTTP headers.\n   * @returns The formatted authorization header string.\n   * @throws Error if no authentication token is found.\n   */\n  private getHeaderToken(): string {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found. Please log in again.');\n    }\n    return `Bearer ${token}`;\n  }\n\n  /**\n   * Adds a new product to the backend.\n   * @param product The FormData object containing product details and images.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async addProduct(product: FormData): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.http.post(this.apiUrl.CREATE_PRODUCT, product, {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          }\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error adding product:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Product added successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Product created successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in addProduct:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to create product'\n      };\n    }\n  }\n\n  /**\n   * Updates an existing product on the backend.\n   * @param id The ID of the product to update.\n   * @param product The Product object containing the updated details.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async updateProduct(id: string, product: Product): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.http.put(`${this.apiUrl.UPDATE_PRODUCT(id)}`, product, {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          }\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error updating product:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Product updated successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Product updated successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in updateProduct:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to update product'\n      };\n    }\n  }\n\n  /**\n   * Deletes an image associated with a product from the backend.\n   * @param id The ID of the image to delete.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async deleteImageInProduct(id: string): Promise {\n    try {\n      console.log('Deleting image:', this.apiUrl.DELETE_IMG_BY_Media_ID(id));\n\n      const response = await firstValueFrom(\n        this.http.delete(this.apiUrl.DELETE_IMG_BY_Media_ID(id), {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          },\n          observe: 'response'\n        }).pipe(\n          // Traitement des réponses réussies (200-299)\n          map((httpResponse: HttpResponse) => {\n            if (httpResponse.ok) {\n              return {\n                success: true,\n                data: httpResponse.body,\n                message: 'Image deleted successfully!'\n              };\n            }\n            console.log(\"effac\")\n            // Si le statut n'est pas dans la plage 200-299\n            return {\n              success: false,\n              error: `Unexpected status code: ${httpResponse.status}`,\n              status: httpResponse.status\n            };\n          }),\n          catchError((error: HttpErrorResponse) => {\n            if (error.status === 200) {\n              // cas où Angular considère à tort qu'il y a une erreur\n              return of({\n                success: true,\n                data: null,\n                message: 'Image deleted successfully (handled)'\n              });\n            }\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Image deleted successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Image deleted successfully!'\n      };\n\n    } catch (error: any) {\n      // Pour les autres erreurs\n      return {\n        success: false,\n        error: handleHttpError(error).message,\n      };\n    }\n  }\n\n  /**\n   * Adds one or more images to an existing product on the backend.\n   * Processes files sequentially and reports individual and overall success/failure.\n   * @param id The ID of the product to add images to.\n   * @param formdata An array of File objects representing the images to upload.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure,\n   *          including details about uploaded and failed images.\n   */\n  async addImageInProduct(id: string, formdata: File[]): Promise {\n    try {\n      console.log('Adding images to product:', this.apiUrl.ADD_IMG_BY_PRODUCT_ID(id));\n\n      const results: any[] = [];\n      const errors: string[] = [];\n      // Traitement séquentiel des fichiers\n      for (let index = 0; index  {\n                console.error(`Error uploading file ${file.name}:`, error);\n                return throwError(() => handleHttpError(error));\n              })\n            )\n          );\n\n          results.push({ file: file.name, response });\n          console.log(`Image ${file.name} uploaded successfully`);\n\n        } catch (error: any) {\n          const errorMsg = `${error.message}`;\n          errors.push(errorMsg);\n          console.error(errorMsg);\n        }\n\n        // Délai anti-spam\n        if (index  setTimeout(resolve, 100));\n        }\n      }\n\n      // Évaluation du résultat global\n      if (errors.length === 0) {\n        return {\n          success: true,\n          data: results,\n          message: `All ${formdata.length} image(s) uploaded successfully!`\n        };\n      } else if (results.length > 0) {\n        return {\n          success: false,\n          data: { uploaded: results, errors },\n          error: `${results.length}/${formdata.length} images uploaded. ${errors.length} failed: ${errors.join(', ')}`\n        };\n      } else {\n        return {\n          success: false,\n          error: `Failed to upload images: ${errors[0]}`,\n        };\n      }\n\n    } catch (error: any) {\n      console.error('Error in addImageInProduct:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to upload images'\n      };\n    }\n  }\n\n\n\n\n  /**\n   * Deletes a product from the backend.\n   * @param id The ID of the product to delete.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  async deleteProduct(id: string): Promise {\n    try {\n      console.log('Deleting image:', this.apiUrl.DELETE_PRODUCT_BY_ID(id));\n\n      const response = await firstValueFrom(\n        this.http.delete(this.apiUrl.DELETE_PRODUCT_BY_ID(id), {\n          headers: {\n            'Authorization': this.getHeaderToken()\n          },\n          observe: 'response'\n        }).pipe(\n          // Traitement des réponses réussies (200-299)\n          map((httpResponse: HttpResponse) => {\n            if (httpResponse.ok) {\n              return {\n                success: true,\n                data: httpResponse.body,\n                message: 'Product deleted successfully!'\n              };\n            }\n            // Si le statut n'est pas dans la plage 200-299\n            return {\n              success: false,\n              error: `Unexpected status code: ${httpResponse.status}`,\n              status: httpResponse.status\n            };\n          }),\n          catchError((error: HttpErrorResponse) => {\n            if (error.status === 200) {\n              // cas où Angular considère à tort qu'il y a une erreur\n              return of({\n                success: true,\n                data: null,\n                message: 'Product deleted successfully (handled)'\n              });\n            }\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Product deleted successfully:', response);\n      return {\n        success: true,\n        data: response,\n        message: 'Product deleted successfully!'\n      };\n\n    } catch (error: any) {\n      // Pour les autres erreurs\n      return {\n        success: false,\n        error: handleHttpError(error).message,\n      };\n    }\n  }\n\n\n\n  /**\n   * Utility method to retry an asynchronous operation with exponential backoff.\n   * @template T The return type of the operation.\n   * @param operation The asynchronous function to retry.\n   * @param maxRetries The maximum number of retry attempts. Defaults to 3.\n   * @param baseDelay The base delay in milliseconds before the first retry. Defaults to 1000ms.\n   * @returns A Promise that resolves with the result of the operation if successful,\n   *          or rejects with the last error after all retries are exhausted.\n   */\n  async retryOperation(\n    operation: () => Promise,\n    maxRetries: number = 3,\n    baseDelay: number = 1000\n  ): Promise {\n    let lastError: any;\n\n    for (let attempt = 1; attempt  setTimeout(resolve, delay));\n      }\n    }\n\n    throw lastError;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceResponse.html":{"url":"interfaces/ServiceResponse.html","title":"interface - ServiceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignIn.html":{"url":"components/SignIn.html","title":"component - SignIn","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-in/sign-in.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-in\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                ToastError\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                avatarPreview\n                            \n                            \n                                canHide\n                            \n                            \n                                errorMessage\n                            \n                            \n                                isSignUp\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                messageLoggerEffect\n                            \n                            \n                                messageStatus\n                            \n                            \n                                selectedAvatarFile\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanAvatarInput\n                            \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Private\n                                markAllFieldsAsTouched\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onAvatarSelected\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Private\n                                passwordMatchValidator\n                            \n                            \n                                resetForm\n                            \n                            \n                                toggle\n                            \n                            \n                                toggleMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-in/sign-in.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cleanAvatarInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    cleanAvatarInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:131\n                        \n                    \n\n\n            \n                \n                        Nettoie complètement l'avatar input et remet à zéro tous les états liés\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages(delay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:280\n                        \n                    \n\n\n            \n                \n                        Clears success and error messages after a specified delay.\nIf delay is 0, messages are cleared immediately.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    The time in milliseconds after which to clear the messages. Defaults to 0.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    createForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:102\n                        \n                    \n\n\n            \n                \n                        Initializes and returns the authentication form with its controls and validators.\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                The initialized FormGroup for the authentication form.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markAllFieldsAsTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAllFieldsAsTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:269\n                        \n                    \n\n\n            \n                \n                        Marks all form fields as touched to trigger validation messages.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAvatarSelected\n                        \n                    \n                \n            \n            \n                \nonAvatarSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:64\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an avatar file.\nPerforms client-side validation and displays a preview of the selected image.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event triggered by the file input change.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:205\n                        \n                    \n\n\n            \n                \n                        Handles the form submission for both sign-in and sign-up.\nValidates the form, interacts with the authentication service, and manages UI state.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatchValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:191\n                        \n                    \n\n\n            \n                \n                        Custom validator to check if the 'password' and 'confirmPassword' fields match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The FormControl for 'confirmPassword'.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A validation error object if passwords do not match, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm(role?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:117\n                        \n                    \n\n\n            \n                \n                        Réinitialise complètement le formulaire d'authentification,\nnettoie l'avatar et efface les messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(even?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:155\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the avatar input based on the selected role.\nCleans the avatar input if switching to a role that doesn't require it (e.g., CLIENT).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                even\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Optional string indicating the role to toggle to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMode\n                        \n                    \n                \n            \n            \n                \ntoggleMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.ts:169\n                        \n                    \n\n\n            \n                \n                        Toggles between sign-in and sign-up modes.\nAdjusts form validators and clears messages accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarPreview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | ArrayBuffer | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canHide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSignUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageLoggerEffect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : effect(() => {\n    console.log('DEBUG - Nouveau statut des messages d\\'authentification :', this.messageStatus());\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    error: this.errorMessage(),\n    success: this.successMessage()\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAvatarFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal, computed, effect } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { ToastError } from \"../../error/toast-error/toast-error\";\nimport { ServiceResponse } from '../../models/interfaces';\n\n@Component({\n  selector: 'app-sign-in',\n  imports: [CommonModule, ReactiveFormsModule, ToastError],\n  templateUrl: './sign-in.html',\n  styleUrl: './sign-in.css'\n})\n/**\n * Component for user sign-in and sign-up.\n * Manages authentication forms, user input, and interaction with the authentication service.\n */\nexport class SignIn implements OnInit {\n  authForm: FormGroup;\n  isSignUp = signal(false);\n  loading = signal(false);\n  avatarPreview: string | ArrayBuffer | null = null;\n  selectedAvatarFile!: File;\n  canHide = signal(true);\n\n  // Nouvelles propriétés pour la gestion d'état des messages\n  errorMessage = signal('');\n  successMessage = signal('');\n\n  // Computed pour créer l'objet de statut des messages\n  messageStatus = computed(() => ({\n    error: this.errorMessage(),\n    success: this.successMessage()\n  }));\n\n  // Effect pour logger les changements de messages (optionnel)\n  private messageLoggerEffect = effect(() => {\n    console.log('DEBUG - Nouveau statut des messages d\\'authentification :', this.messageStatus());\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.authForm = this.createForm();\n  }\n\n  async ngOnInit(): Promise {\n    // If the user is already signed in, redirect to home page\n    await this.authService.checkAuth();\n    if (this.authService.isSignIn$()) {\n      this.router.navigate(['/']);\n      return;\n    }\n  }\n\n  /**\n   * Handles the selection of an avatar file.\n   * Performs client-side validation and displays a preview of the selected image.\n   * @param event The DOM event triggered by the file input change.\n   */\n  onAvatarSelected(event: any) {\n    const file = event.target.files[0];\n\n    if (file && file instanceof File) {\n      console.log('Avatar input changed:', file);\n\n      // Validation\n      if (file.size > 10 * 1024 * 1024) { // 10MB max\n        this.errorMessage.set('File too large. Maximum size is 10MB.');\n        this.clearMessages(3000);\n        return;\n      }\n\n      if (!file.type.startsWith('image/')) {\n        this.errorMessage.set('Please select a valid image file.');\n        this.clearMessages(3000);\n        return;\n      }\n\n      // Stocker le fichier dans une propriété séparée\n      this.selectedAvatarFile = file;\n\n      // Prévisualisation\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.avatarPreview = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n\n      // Marquer le champ comme touché pour la validation\n      this.authForm.get('avatar')?.markAsTouched();\n    }\n  }\n\n  /**\n   * Initializes and returns the authentication form with its controls and validators.\n   * @returns The initialized FormGroup for the authentication form.\n   */\n  private createForm(): FormGroup {\n    return this.fb.group({\n      name: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: [''],\n      role: ['CLIENT', Validators.required],\n      avatar: [null]\n    });\n  }\n\n  /**\n  * Réinitialise complètement le formulaire d'authentification,\n  * nettoie l'avatar et efface les messages.\n  */\n  resetForm(role?: string): void {\n    this.authForm.reset({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      role: role || 'CLIENT',\n      avatar: null\n    });\n  }\n\n  /**\n   * Nettoie complètement l'avatar input et remet à zéro tous les états liés\n   */\n  private cleanAvatarInput(): void {\n    // Réinitialiser la valeur du FormControl\n    this.authForm.get('avatar')?.setValue(null);\n    this.authForm.get('avatar')?.markAsUntouched();\n    this.authForm.get('avatar')?.markAsPristine();\n\n    // Nettoyer les propriétés de prévisualisation\n    this.avatarPreview = null;\n    this.selectedAvatarFile = null as any;\n\n    // Optionnel : Nettoyer physiquement l'input file dans le DOM\n    const avatarInput = document.querySelector('input[type=\"file\"][formControlName=\"avatar\"]') as HTMLInputElement;\n    if (avatarInput) {\n      avatarInput.value = '';\n    }\n\n    console.log('Avatar input cleaned');\n  }\n\n  /**\n   * Toggles the visibility of the avatar input based on the selected role.\n   * Cleans the avatar input if switching to a role that doesn't require it (e.g., CLIENT).\n   * @param even Optional string indicating the role to toggle to.\n   */\n  toggle(even?: string) {\n    if (even != \"SELLER\") {\n      this.canHide.set(true);\n      return;\n    }\n    // Nettoyer l'avatar quand on passe en mode CLIENT\n    this.canHide.set(false);\n    this.cleanAvatarInput();\n  }\n\n  /**\n   * Toggles between sign-in and sign-up modes.\n   * Adjusts form validators and clears messages accordingly.\n   */\n  toggleMode(): void {\n    this.isSignUp.set(!this.isSignUp());\n    // Nettoyer les messages lors du changement de mode\n    this.clearMessages(0);\n    console.log('Toggled sign-up mode:', this.isSignUp());\n    if (this.isSignUp()) {\n      this.authForm.get('name')?.setValidators([Validators.required]);\n      this.authForm.get('confirmPassword')?.setValidators([Validators.required, this.passwordMatchValidator.bind(this)]);\n    } else {\n      this.authForm.get('name')?.clearValidators();\n      this.authForm.get('confirmPassword')?.clearValidators();\n    }\n\n    this.authForm.get('name')?.updateValueAndValidity();\n    this.authForm.get('confirmPassword')?.updateValueAndValidity();\n  }\n\n  /**\n   * Custom validator to check if the 'password' and 'confirmPassword' fields match.\n   * @param control The FormControl for 'confirmPassword'.\n   * @returns A validation error object if passwords do not match, otherwise null.\n   */\n  private passwordMatchValidator(control: any): any {\n    const password = this.authForm?.get('password')?.value;\n    const confirmPassword = control.value;\n\n    if (password !== confirmPassword) {\n      return { mismatch: true };\n    }\n    return null;\n  }\n\n  /**\n   * Handles the form submission for both sign-in and sign-up.\n   * Validates the form, interacts with the authentication service, and manages UI state.\n   */\n  async onSubmit(): Promise {\n    // Validation du formulaire\n    if (this.authForm.invalid) {\n      this.markAllFieldsAsTouched();\n      this.errorMessage.set('Please fill in all required fields correctly.');\n      return;\n    }\n\n    this.loading.set(true);\n    this.errorMessage.set('');\n    this.successMessage.set('');\n\n    try {\n      const formData = this.authForm.value;\n\n      if (this.isSignUp()) {\n        // Inscription\n        let err: ServiceResponse = await this.authService.signUp(formData, this.selectedAvatarFile);\n        if (!err.success) {\n          this.errorMessage.set(err.error || 'An error occurred during sign-up.');\n          this.loading.set(false);\n          return;\n        }\n\n        this.successMessage.set('Sign up successful! You can now sign in.');\n        // Petit délai pour que l'utilisateur voie le message de succès\n        setTimeout(() => {\n          this.toggleMode();\n          this.successMessage.set('');\n        }, 1500);\n\n      } else {\n        // Connexion\n        const res = await this.authService.signIn(formData);\n        if (!res.success) {\n          this.errorMessage.set(res.error || 'An error occurred during sign-in.');\n          this.loading.set(false);\n          this.resetForm();\n          return;\n        }\n\n        // Si on arrive ici, c'est que la connexion a réussi\n        this.successMessage.set('Sign in successful! Redirecting...');\n\n        // Petit délai pour que l'utilisateur voie le message de succès\n        setTimeout(() => {\n          this.router.navigate(['/']);\n        }, 1000);\n      }\n    } catch (error: any) {\n      console.error('Authentication error:', error);\n\n      // Gestion spécifique des erreurs d'authentification\n      this.errorMessage.set(error?.error || error?.message || 'An unexpected error occurred. Please try again.');\n\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n\n  /**\n   * Marks all form fields as touched to trigger validation messages.\n   */\n  private markAllFieldsAsTouched(): void {\n    Object.keys(this.authForm.controls).forEach(key => {\n      this.authForm.get(key)?.markAsTouched();\n    });\n  }\n\n  /**\n   * Clears success and error messages after a specified delay.\n   * If delay is 0, messages are cleared immediately.\n   * @param delay The time in milliseconds after which to clear the messages. Defaults to 0.\n   */\n  private clearMessages(delay: number = 0): void {\n    if (delay === 0) {\n      this.errorMessage.set('');\n      this.successMessage.set('');\n    } else {\n      setTimeout(() => {\n        this.errorMessage.set('');\n        this.successMessage.set('');\n      }, delay);\n    }\n  }\n\n  \n}\n    \n\n    \n        \n  \n    \n    \n\n    \n      \n      \n        \n          Sign In\n        \n        \n          Sign Up\n        \n      \n\n      \n        \n        \n          \n            \n          \n          \n            {{isSignUp() ? 'Create your account' : 'Welcome back!'}}\n          \n          \n            {{isSignUp() ? 'Join our marketplace today' : 'Sign in to continue to your account'}}\n          \n        \n\n        \n        \n          \n          @if(isSignUp() && !canHide()) {\n          \n            Profile Picture\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                  \n                  \n                    \n                      \n                      \n                      \n                    \n                  \n                \n                \n              \n            \n            Click to upload a profile picture (optional)\n            @if (authForm.get('avatar')?.invalid && authForm.get('avatar')?.touched) {\n            \n              Please select a valid image file\n            \n            }\n          \n          }\n          \n          @if(isSignUp()) {\n          \n            Full Name\n            \n            @if (authForm.get('name')?.invalid && authForm.get('name')?.touched) {\n            \n              Name is required\n            \n            }\n          \n          }\n\n          \n          \n            Email Address\n            \n            @if (authForm.get('email')?.invalid && authForm.get('email')?.touched) {\n            \n              @if (authForm.get('email')?.errors?.['required']) {\n              Email is required\n              }\n              @if (authForm.get('email')?.errors?.['email']) {\n              Please enter a valid email\n              }\n            \n            }\n          \n\n          \n          \n            Password\n            \n              \n              \n                \n                  \n                  \n                  \n                \n              \n            \n            @if (authForm.get('password')?.invalid && authForm.get('password')?.touched) {\n            \n              @if (authForm.get('password')?.errors?.['required']) {\n              Password is required\n              }\n              @if (authForm.get('password')?.errors?.['minlength']) {\n              Password must be at least 6 characters\n              }\n            \n            }\n          \n\n          \n          @if(isSignUp()) {\n          \n            Confirm Password\n            \n              \n              \n                \n                  \n                  \n                  \n                \n              \n            \n            @if (authForm.get('confirmPassword')?.invalid && authForm.get('confirmPassword')?.touched) {\n            \n              @if (authForm.get('confirmPassword')?.errors?.['required']) {\n              Please confirm your password\n              }\n              @if (authForm.get('confirmPassword')?.errors?.['mismatch']) {\n              Passwords do not match\n              }\n            \n            }\n          \n          }\n\n          \n          @if(isSignUp()) {\n          \n            Account Type\n            \n              \n                \n                \n                  \n                    \n                  \n                  Buyer\n                \n              \n              \n                \n                \n                  \n                    \n                    \n                  \n                  Seller\n                \n              \n            \n          \n          }\n\n          \n          @if(!isSignUp()) {\n          \n            \n              \n              \n                Remember me\n              \n            \n            \n              \n                Forgot password?\n              \n            \n          \n          }\n\n          \n          \n\n            \n            @if(loading()) {\n            \n              \n                \n                \n                \n              \n              {{isSignUp() ? 'Creating Account...' : 'Signing In...'}}\n            \n            }\n            @else {\n            \n              \n              \n              {{isSignUp() ? 'Create Account' : 'Sign In'}}\n            \n            }\n          \n        \n\n        \n        \n          \n            \n              \n            \n            \n              \n                Or continue with\n              \n            \n          \n\n          \n            \n              \n                \n                  \n                \n              \n            \n            \n              \n                \n                  \n                  \n                \n              \n            \n          \n        \n\n        \n        \n          Demo Credentials:\n          Email: seller&#64;demo.com | Password: password\n          Email: buyer&#64;demo.com | Password: password\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Sign In                          Sign Up                                                                                          {{isSignUp() ? \\'Create your account\\' : \\'Welcome back!\\'}}                                {{isSignUp() ? \\'Join our marketplace today\\' : \\'Sign in to continue to your account\\'}}                                                      @if(isSignUp() && !canHide()) {                      Profile Picture                                                                                                                                                                                                                                                                                                                                                                                  Click to upload a profile picture (optional)            @if (authForm.get(\\'avatar\\')?.invalid && authForm.get(\\'avatar\\')?.touched) {                          Please select a valid image file                        }                    }                    @if(isSignUp()) {                      Full Name                        @if (authForm.get(\\'name\\')?.invalid && authForm.get(\\'name\\')?.touched) {                          Name is required                        }                    }                                Email Address                        @if (authForm.get(\\'email\\')?.invalid && authForm.get(\\'email\\')?.touched) {                          @if (authForm.get(\\'email\\')?.errors?.[\\'required\\']) {              Email is required              }              @if (authForm.get(\\'email\\')?.errors?.[\\'email\\']) {              Please enter a valid email              }                        }                                          Password                                                                                                                                                                    @if (authForm.get(\\'password\\')?.invalid && authForm.get(\\'password\\')?.touched) {                          @if (authForm.get(\\'password\\')?.errors?.[\\'required\\']) {              Password is required              }              @if (authForm.get(\\'password\\')?.errors?.[\\'minlength\\']) {              Password must be at least 6 characters              }                        }                              @if(isSignUp()) {                      Confirm Password                                                                                                                                                                    @if (authForm.get(\\'confirmPassword\\')?.invalid && authForm.get(\\'confirmPassword\\')?.touched) {                          @if (authForm.get(\\'confirmPassword\\')?.errors?.[\\'required\\']) {              Please confirm your password              }              @if (authForm.get(\\'confirmPassword\\')?.errors?.[\\'mismatch\\']) {              Passwords do not match              }                        }                    }                    @if(isSignUp()) {                      Account Type                                                                                                                                    Buyer                                                                                                                                                                          Seller                                                              }                    @if(!isSignUp()) {                                                                  Remember me                                                                    Forgot password?                                              }                                            @if(loading()) {                                                                                                      {{isSignUp() ? \\'Creating Account...\\' : \\'Signing In...\\'}}                        }            @else {                                                      {{isSignUp() ? \\'Create Account\\' : \\'Sign In\\'}}                        }                                                                                                                            Or continue with                                                                                                                                                                                                                                                                                                                        Demo Credentials:          Email: seller@demo.com | Password: password          Email: buyer@demo.com | Password: password                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignIn'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastError.html":{"url":"components/ToastError.html","title":"component - ToastError","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/toast-error/toast-error.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast-error\n            \n\n\n            \n                imports\n                \n                            ProgressComponent\n                            ToasterComponent\n                            ToastComponent\n                            ToastHeaderComponent\n                                ToastSampleIconComponent\n                            ToastBodyComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast-error.html\n            \n\n\n\n            \n                styleUrl\n                ./toast-error.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasMessage\n                            \n                            \n                                messageType\n                            \n                            \n                                percentage\n                            \n                            \n                                position\n                            \n                            \n                                showToast\n                            \n                            \n                                toastDetail\n                            \n                            \n                                toastTitle\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onTimerChange\n                            \n                            \n                                onVisibleChange\n                            \n                            \n                                toggleToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentNotification\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentNotification\n                    \n                \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                        \n                            \n                                    Defined in src/app/error/toast-error/toast-error.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTimerChange\n                        \n                    \n                \n            \n            \n                \nonTimerChange($event: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVisibleChange\n                        \n                    \n                \n            \n            \n                \nonVisibleChange($event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleToast\n                        \n                    \n                \n            \n            \n                \ntoggleToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/error/toast-error/toast-error.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    return !!notification && (notification.error.length > 0 || notification.success.length > 0);\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'error';\n    } else if (notification?.success.length) {\n      return 'success';\n    }\n    return 'info'; // Ou un type par défaut\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'top-end'\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.visible() && this.hasMessage())\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toastDetail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return notification.error;\n    } else if (notification?.success.length) {\n      return notification.success;\n    }\n    return 'Aucune information.';\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toastTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'Something went wrong';\n    } else if (notification?.success.length) {\n      return 'Succès';\n    }\n    return 'Notification'; // Titre par défaut si aucun message spécifique\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/error/toast-error/toast-error.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, input, Input, OnInit, Signal, signal } from '@angular/core';\nimport { ButtonDirective, ProgressComponent, ToasterComponent, ToastComponent, ToastHeaderComponent, ToastBodyComponent } from '@coreui/angular';\nimport { ToastSampleIconComponent } from './toast-sample-icon-compenant';\n\n@Component({\n  selector: 'app-toast-error',\n  imports: [\n    ProgressComponent,\n    ToasterComponent,\n    ToastComponent,\n    ToastHeaderComponent,\n    ToastSampleIconComponent,\n    ToastBodyComponent],\n  templateUrl: './toast-error.html',\n  styleUrl: './toast-error.css'\n})\nexport class ToastError implements OnInit {\n\n  // L'Input recevra maintenant l'objet { error: string, success: string }\n  @Input() currentNotification: Signal = signal(undefined);\n\n  position = 'top-end';\n  visible = signal(false);\n  percentage = signal(0);\n\n  // Computed pour déterminer si un message (erreur ou succès) est présent\n  hasMessage = computed(() => {\n    const notification = this.currentNotification();\n    return !!notification && (notification.error.length > 0 || notification.success.length > 0);\n  });\n\n  // Computed pour le titre du toast\n  toastTitle = computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'Something went wrong';\n    } else if (notification?.success.length) {\n      return 'Succès';\n    }\n    return 'Notification'; // Titre par défaut si aucun message spécifique\n  });\n\n  // Computed pour le détail/corps du toast\n  toastDetail = computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return notification.error;\n    } else if (notification?.success.length) {\n      return notification.success;\n    }\n    return 'Aucune information.';\n  });\n\n  // Computed pour déterminer le type de message (pour l'icône ou le style)\n  messageType = computed(() => {\n    const notification = this.currentNotification();\n    if (notification?.error.length) {\n      return 'error';\n    } else if (notification?.success.length) {\n      return 'success';\n    }\n    return 'info'; // Ou un type par défaut\n  });\n\n  ngOnInit(): void {\n    if (this.hasMessage()) {\n      this.visible.set(true);\n\n    }\n  }\n\n  // Computed final pour contrôler la visibilité du toast\n  // Le toast est visible si notre signal `visible` est vrai ET si `hasMessage` est vrai\n  showToast = computed(() => this.visible() && this.hasMessage());\n\n\n  // Méthode pour ouvrir/fermer le toast\n  toggleToast() {\n    this.visible.update((value) => !value);\n  }\n\n  onVisibleChange($event: boolean) {\n    this.visible.set($event);\n    this.percentage.set(this.visible() ? this.percentage() : 0);\n  }\n\n  onTimerChange($event: number) {\n    this.percentage.set($event * 25);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{toastTitle()}}\n    \n    \n      {{toastDetail()}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{toastTitle()}}              {{toastDetail()}}            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastError'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastSampleIconComponent.html":{"url":"components/ToastSampleIconComponent.html","title":"component - ToastSampleIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastSampleIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/toast-error/toast-sample-icon-compenant.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toast-sample-icon\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n            \n                template\n                \n    \n  \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'toast-sample-icon',\n  template: `\n    \n  `,\n  standalone: true\n})\nexport class ToastSampleIconComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastSampleIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateForm.html":{"url":"components/UpdateForm.html","title":"component - UpdateForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/update-form/update-form.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-form\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogActions\n                            MatDialogModule\n                            FormsModule\n                            ReactiveFormsModule\n                            MatInputModule\n                            MatSelectModule\n                            MatOptionModule\n                            MatButtonModule\n                            MatIcon\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./update-form.html\n            \n\n\n\n            \n                styleUrl\n                ./update-form.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                previewUrl\n                            \n                            \n                                selectedFile\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitials\n                            \n                            \n                                onCancel\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                onSave\n                            \n                            \n                                onUpload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, fb: FormBuilder, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/update-form/update-form.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/update-form/update-form.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previewUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | ArrayBuffer | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/update-form/update-form.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Inject, Input, Output, signal } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogActions, MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { MatIcon } from '@angular/material/icon';\nimport { User } from '../../models/interfaces';\n\n@Component({\n  selector: 'app-update-form',\n  imports: [\n    CommonModule,\n    MatDialogActions,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatButtonModule,\n    MatIcon\n  ],\n  templateUrl: './update-form.html',\n  styleUrl: './update-form.css'\n})\nexport class UpdateForm {\n  user = signal(null);\n  selectedFile: File | null = null;\n  previewUrl: string | ArrayBuffer | null = null;\n  authForm: FormGroup;\n \n  constructor(\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: { user: User } // Injection des données\n  ) {\n    // Si des données utilisateur sont passées, les assigner au formulaire\n     this.authForm = this.fb.group({\n      avatar: [null],\n      name: [data.user?.name || ''],\n      email: [data.user?.email || ''],\n      password: [data.user?.password || '']\n    });\n    this.user.set(data.user);\n    // Prévisualisation de l'avatar\n    if (data.user.avatar) {\n      this.previewUrl = data.user.avatar;\n    }\n\n  }\n\n\n  getInitials(name: string): string {\n    if (!name) return '';\n    const parts = name.split(' ');\n    if (parts.length === 1) {\n      return parts[0].charAt(0).toUpperCase();\n    }\n    return (parts[0].charAt(0) + parts[parts.length - 1].charAt(0)).toUpperCase();\n  }\n\n  onFileSelected(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      this.selectedFile = file;\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  onUpload(): void {\n    this.dialogRef.close(this.selectedFile);\n  }\n\n  onSave(): void {\n    if (this.authForm.invalid) {\n      return;\n    }\n\n    const formData = new FormData();\n   let userData = {\n      name: this.authForm.get('name')?.value,\n      email: this.authForm.get('email')?.value,\n      role: this.authForm.get('role')?.value,\n      password: this.authForm.get('password')?.value\n    };\n    formData.append('data', new Blob([JSON.stringify(userData)], { type: 'application/json' }));\n\n    if (this.selectedFile) {\n      formData.append('avatar', this.selectedFile);\n    }\n\n    // Ferme le dialogue et renvoie les données\n    this.dialogRef.close(formData);\n    // Supprimez this.onCancel() car dialogRef.close() suffit\n  }\n\n  onCancel(): void {\n    // Ferme le dialogue sans renvoyer de données\n    this.dialogRef.close();\n    // Supprimez this.cancel.emit()\n  }\n}\n    \n\n    \n        \n    \n        \n       @if (user().role === 'SELLER') {\n         \n             \n                 \n                     \n                         \n                             \n                                 \n                                     \n                                 \n                             \n                             \n                         \n                         \n                     \n\n                     \n                         \n                             Veuillez sélectionner une image valide (JPEG, PNG)\n                         \n                     \n                 \n             \n         \n       }\n        \n        \n            \n                person_outline\n                Informations personnelles\n            \n            \n                \n                    \n                        \n                        person\n                    \n                \n\n                \n                    \n                        \n                        lock\n                    \n                \n            \n        \n\n    \n        close\n        Annuler\n    \n    \n        save\n        Enregistrer\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   @if (user().role === \\'SELLER\\') {                                                                                                                                                                                                                                                                                                                                                                                                                                     Veuillez sélectionner une image valide (JPEG, PNG)                                                                                            }                                            person_outline                Informations personnelles                                                                                                            person                                                                                                                        lock                                                                    close        Annuler                save        Enregistrer    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CircularImage', 'selector': 'app-circular-image'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'FormProduct', 'selector': 'app-form-product'},{'name': 'Navbar', 'selector': 'app-navbar'},{'name': 'ProductCard', 'selector': 'app-product-card'},{'name': 'ProductList', 'selector': 'app-product-list'},{'name': 'ProductManagement', 'selector': 'app-product-management'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'SignIn', 'selector': 'app-sign-in'},{'name': 'ToastError', 'selector': 'app-toast-error'},{'name': 'ToastSampleIconComponent', 'selector': 'toast-sample-icon'},{'name': 'UpdateForm', 'selector': 'app-update-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadProgress.html":{"url":"interfaces/UploadProgress.html","title":"interface - UploadProgress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadProgress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            progress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"CLIENT\" | \"SELLER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"CLIENT\" | \"SELLER\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkNetworkConnection\n                            \n                            \n                                    Private\n                                getAuthHeaders\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Private\n                                getCurrentUserId\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                getProfileAsync\n                            \n                            \n                                    Private\n                                getToken\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                retryOperation\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Private\n                                validateImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiUrl: ApiUrlService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        ApiUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkNetworkConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkNetworkConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:339\n                        \n                    \n\n\n            \n                \n                        Méthode utilitaire pour vérifier la connexion réseau\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:248\n                        \n                    \n\n\n            \n                \n                        Génère les en-têtes d'authentification\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                HttpHeaders\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:231\n                        \n                    \n\n\n            \n                \n                        Obtient l'utilisateur actuellement connecté\n\n\n                        \n                            Returns :         User | null\n\n                        \n                            \n                                User | null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:239\n                        \n                    \n\n\n            \n                \n                        Obtient l'ID de l'utilisateur actuel\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                string | null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:29\n                        \n                    \n\n\n            \n                \n                        Récupère le profil de l'utilisateur connecté (Observable - pour les composants réactifs)\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfileAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileAsync()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:45\n                        \n                    \n\n\n            \n                \n                        Récupère le profil de l'utilisateur connecté (Promise - pour les appels async/await)\n\n\n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                Promise>\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:264\n                        \n                    \n\n\n            \n                \n                        Récupère le token d'authentification\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                string | null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:223\n                        \n                    \n\n\n            \n                \n                        Vérifie si l'utilisateur est connecté\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:213\n                        \n                    \n\n\n            \n                \n                        Déconnecte l'utilisateur et nettoie les données\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                A Promise that resolves to a ServiceResponse indicating success or failure.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        retryOperation\n                        \n                    \n                \n            \n            \n                \n                        \n                    retryOperation(operation: () => void, maxRetries: number, baseDelay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:308\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Méthode utilitaire pour retry avec backoff exponentiel\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOpération à retry\n\n\n                                            \n                                        \n                                        \n                                                maxRetries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nNombre maximum de tentatives\n\n\n                                            \n                                        \n                                        \n                                                baseDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                            \n                                                    \nDélai de base en ms\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAvatar(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:119\n                        \n                    \n\n\n            \n                \n                        Met à jour l'avatar de l'utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFichier image pour l'avatar\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(user: Partial, userId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:82\n                        \n                    \n\n\n            \n                \n                        Met à jour le profil utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLes données utilisateur à mettre à jour\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nID de l'utilisateur (optionnel)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                Promise>\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateImageFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateImageFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:273\n                        \n                    \n\n\n            \n                \n                        Valide le format et la taille du fichier image\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFichier à valider\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                : boolean, error?: string}\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError, firstValueFrom } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ApiUrlService } from './api-url-service';\nimport { User, ServiceResponse } from '../models/interfaces';\nimport { handleHttpError } from '../utils/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for managing user-related operations, including profile management,\n * authentication status, and avatar updates.\n */\nexport class UserService {\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n\n  constructor(\n    private apiUrl: ApiUrlService,\n    private http: HttpClient\n  ) {}\n\n  /**\n   * Récupère le profil de l'utilisateur connecté (Observable - pour les composants réactifs)\n   * @returns Observable\n   */\n  getProfile(): Observable {\n    return this.http.get(this.apiUrl.GET_CURRENT_USER, {\n      headers: this.getAuthHeaders()\n    }).pipe(\n      tap((user:any) => this.currentUserSubject.next(user)),\n      catchError((error: HttpErrorResponse) => {\n        console.error('Error fetching user profile:', error);\n        return throwError(() => handleHttpError(error));\n      })\n    );\n  }\n\n  /**\n   * Récupère le profil de l'utilisateur connecté (Promise - pour les appels async/await)\n   * @returns Promise>\n   */\n  async getProfileAsync(): Promise> {\n    try {\n      const user : any = await firstValueFrom(\n        this.http.get(this.apiUrl.GET_CURRENT_USER, {\n          headers: this.getAuthHeaders()\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error fetching user profile:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      this.currentUserSubject.next(user);\n      console.log('User profile fetched successfully:', user);\n      \n      return {\n        success: true,\n        data: user,\n        message: 'Profile loaded successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in getProfileAsync:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to load profile'\n      };\n    }\n  }\n\n  /**\n   * Met à jour le profil utilisateur\n   * @param user - Les données utilisateur à mettre à jour\n   * @param userId - ID de l'utilisateur (optionnel)\n   * @returns Promise>\n   */\n  async updateProfile(user: Partial, userId?: string): Promise> {\n    try {\n      const id = userId || this.getCurrentUserId();\n      const updatedUser :any = await firstValueFrom(\n        this.http.put(this.apiUrl.UPDATE_USER(userId!), user, {\n          headers: this.getAuthHeaders()\n        }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error updating user profile:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      this.currentUserSubject.next(updatedUser);\n      console.log('User profile updated successfully:', updatedUser);\n      \n      return {\n        success: true,\n        data: updatedUser,\n        message: 'Profile updated successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in updateProfile:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to update profile'\n      };\n    }\n  }\n\n  /**\n   * Met à jour l'avatar de l'utilisateur\n   * @param file - Fichier image pour l'avatar\n   * @returns Promise\n   */\n  async updateAvatar(file: File): Promise {\n    try {\n      // Validation côté client\n      const validationResult = this.validateImageFile(file);\n      if (!validationResult.isValid) {\n        return {\n          success: false,\n          error: validationResult.error\n        };\n      }\n\n      const formData = new FormData();\n      formData.append('avatar', file);\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${this.getToken()}`\n      });\n\n      const response = await firstValueFrom(\n        this.http.put(this.apiUrl.UPDATE_AVATAR, formData, { headers }).pipe(\n          catchError((error: HttpErrorResponse) => {\n            console.error('Error updating avatar:', error);\n            return throwError(() => handleHttpError(error));\n          })\n        )\n      );\n\n      console.log('Avatar updated successfully:', response);\n      \n      return {\n        success: true,\n        data: response,\n        message: 'Avatar updated successfully!'\n      };\n\n    } catch (error: any) {\n      console.error('Error in updateAvatar:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to update avatar'\n      };\n    }\n  }\n\n  /**\n   * Changes the user's password.\n   * @param currentPassword The user's current password.\n   * @param newPassword The new password to set.\n   * @returns A Promise that resolves to a ServiceResponse indicating success or failure.\n   */\n  // This method is commented out in the original file, so I will keep it commented out.\n  // async changePassword(currentPassword: string, newPassword: string): Promise {\n  //   // Implementation for changing password\n  // }\n\n  // /**\n  //  * Supprime le compte utilisateur\n  //  * @returns Promise\n  //  */\n  // async deleteAccount(): Promise {\n  //   try {\n  //     const response = await firstValueFrom(\n  //       this.http.delete(this.apiUrl.DELETE_USER, {\n  //         headers: this.getAuthHeaders()\n  //       }).pipe(\n  //         catchError((error: HttpErrorResponse) => {\n  //           console.error('Error deleting account:', error);\n  //           return throwError(() => handleHttpError(error));\n  //         })\n  //       )\n  //     );\n\n  //     // Nettoyer les données locales après suppression\n  //     this.logout();\n  //     console.log('Account deleted successfully');\n      \n  //     return {\n  //       success: true,\n  //       data: response,\n  //       message: 'Account deleted successfully!'\n  //     };\n\n  //   } catch (error: any) {\n  //     console.error('Error in deleteAccount:', error);\n  //     return {\n  //       success: false,\n  //       error: error.message || 'Failed to delete account'\n  //     };\n  //   }\n  // }\n\n  /**\n   * Déconnecte l'utilisateur et nettoie les données\n   */\n  logout(): void {\n    this.currentUserSubject.next(null);\n    localStorage.removeItem('token');\n    console.log('User logged out successfully');\n  }\n\n  /**\n   * Vérifie si l'utilisateur est connecté\n   * @returns boolean\n   */\n  isLoggedIn(): boolean {\n    return !!this.getToken();\n  }\n\n  /**\n   * Obtient l'utilisateur actuellement connecté\n   * @returns User | null\n   */\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Obtient l'ID de l'utilisateur actuel\n   * @returns string | null\n   */\n  private getCurrentUserId(): string | null {\n    const currentUser = this.getCurrentUser();\n    return currentUser?.id || null;\n  }\n\n  /**\n   * Génère les en-têtes d'authentification\n   * @returns HttpHeaders\n   */\n  private getAuthHeaders(): HttpHeaders {\n    const token = this.getToken();\n    if (!token) {\n      throw new Error('No authentication token found. Please log in again.');\n    }\n    \n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  /**\n   * Récupère le token d'authentification\n   * @returns string | null\n   */\n  private getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  /**\n   * Valide le format et la taille du fichier image\n   * @param file - Fichier à valider\n   * @returns {isValid: boolean, error?: string}\n   */\n  private validateImageFile(file: File): {isValid: boolean, error?: string} {\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    \n    if (!allowedTypes.includes(file.type)) {\n      return {\n        isValid: false,\n        error: 'Invalid file format. Please use JPG, PNG, GIF, or WebP.'\n      };\n    }\n    \n    if (file.size > maxSize) {\n      return {\n        isValid: false,\n        error: 'File is too large. Maximum size is 5MB.'\n      };\n    }\n    \n    if (file.size === 0) {\n      return {\n        isValid: false,\n        error: 'File is empty. Please select a valid image.'\n      };\n    }\n    \n    return { isValid: true };\n  }\n\n  /**\n   * Méthode utilitaire pour retry avec backoff exponentiel\n   * @param operation - Opération à retry\n   * @param maxRetries - Nombre maximum de tentatives\n   * @param baseDelay - Délai de base en ms\n   * @returns Promise\n   */\n  async retryOperation(\n    operation: () => Promise, \n    maxRetries: number = 3, \n    baseDelay: number = 1000\n  ): Promise {\n    let lastError: any;\n    \n    for (let attempt = 1; attempt  setTimeout(resolve, delay));\n      }\n    }\n    \n    throw lastError;\n  }\n\n  /**\n   * Méthode utilitaire pour vérifier la connexion réseau\n   * @returns Promise\n   */\n  async checkNetworkConnection(): Promise {\n    try {\n      const response = await fetch('/api/health', { \n        method: 'HEAD',\n        cache: 'no-cache'\n      });\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/sign-in/sign-in.ts\n            \n            component\n            SignIn\n            \n                43 %\n                (10/23)\n            \n        \n        \n            \n                \n                src/app/error/toast-error/toast-error.ts\n            \n            component\n            ToastError\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/error/toast-error/toast-sample-icon-compenant.ts\n            \n            component\n            ToastSampleIconComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            AuthFormData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            MediaFile\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            MediaItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            ProductFormData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            productImage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            ServiceResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            UploadProgress\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/interfaces.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.ts\n            \n            component\n            Navbar\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/products/circular-image/carroussel.config.ts\n            \n            injectable\n            CarouselCustomConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/products/circular-image/circular-image.ts\n            \n            component\n            CircularImage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/products/product-card/product-card.ts\n            \n            component\n            ProductCard\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/products/product-list/product-list.ts\n            \n            component\n            ProductList\n            \n                48 %\n                (17/35)\n            \n        \n        \n            \n                \n                src/app/profile/profile.ts\n            \n            component\n            Profile\n            \n                66 %\n                (16/24)\n            \n        \n        \n            \n                \n                src/app/profile/update-form/update-form.ts\n            \n            component\n            UpdateForm\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/seller/dashboard/dashboard.ts\n            \n            component\n            Dashboard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/seller/form-product/form-product.ts\n            \n            component\n            FormProduct\n            \n                42 %\n                (17/40)\n            \n        \n        \n            \n                \n                src/app/seller/product-management/product-management.ts\n            \n            component\n            ProductManagement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api-url-service.ts\n            \n            injectable\n            ApiUrlService\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/services/data-service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/guard-service.ts\n            \n            injectable\n            GuardService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/product-service.ts\n            \n            injectable\n            ProductService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/services/user-service.ts\n            \n            injectable\n            UserService\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                        src/app/utils/utils.ts\n            \n            function\n            handleHttpError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/utils/utils.ts\n            \n            function\n            reverseListDoubleLoop\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.1.3\n        \n            @angular/common : 20.1.4\n        \n            @angular/compiler : 20.1.4\n        \n            @angular/core : 20.1.4\n        \n            @angular/forms : 20.1.4\n        \n            @angular/material : ^20.1.4\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @coreui/angular : ^5.5.6\n        \n            @coreui/coreui : ^5.4.1\n        \n            @coreui/icons-angular : ^5.5.6\n        \n            @ngneat/tailwind : ^7.0.3\n        \n            @primeuix/themes : ^1.2.3\n        \n            @tailwindcss/postcss : ^4.1.10\n        \n            compodoc : ^0.0.41\n        \n            gsap : ^3.13.0\n        \n            primeng : ^20.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleHttpError   (src/.../utils.ts)\n                        \n                        \n                            reverseListDoubleLoop   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleHttpError\n                        \n                    \n                \n            \n            \n                \nhandleHttpError(error: HttpErrorResponse)\n                \n            \n\n\n\n\n            \n                \n                        Handles HTTP errors by generating a user-friendly error message based on the HTTP status code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HttpErrorResponse object received from an HTTP request.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Error\n\n                        \n                            \n                                An Error object containing a descriptive error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reverseListDoubleLoop\n                        \n                    \n                \n            \n            \n                \nreverseListDoubleLoop(list)\n                \n            \n\n\n\n\n            \n                \n                        Inverse un tableau en utilisant une double boucle.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                list\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le tableau à inverser.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                Un nouveau tableau inversé.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEComerce\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :npm startOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nDocumentation\nThis project uses Compodoc for generating documentation.\nGenerate documentation:\nExample :npm run compodoc:buildGenerate and serve documentation with hot-reload:\nExample :npm run compodoc:serveGenerate and serve documentation (one-time):\nExample :npm run compodocAlternative direct commands:\nExample :# Generate documentation only\nnpx @compodoc/compodoc -p tsconfig.json\n\n# Generate and serve documentation\nnpx @compodoc/compodoc -p tsconfig.json -s\n\n# Generate with coverage test\nnpx @compodoc/compodoc -p tsconfig.json --coverageTest\n\n# Generate with custom theme (material, stripe, vagrant, etc.)\nnpx @compodoc/compodoc -p tsconfig.json -t materialThe documentation will be available at http://localhost:8080/ when served.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/productImage.html":{"url":"interfaces/productImage.html","title":"interface - productImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  productImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imagePath\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Signal } from \"@angular/core\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'CLIENT' | 'SELLER';\n  avatar?: string;\n  password?: string;\n  createdAt: Date;\n}\n\nexport interface MediaItem {\n  id: string;\n  name: string;\n  url: string;\n  type: 'image' | 'video';\n  size: number;\n  uploadedAt: Date;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category?: string;\n  quantity: number;\n  imageUrls: productImage[];\n  sellerName: string;\n  sellerAvatar?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface productImage {\n  id: string;\n  imagePath: string;\n  productId: string;\n}\n\nexport interface MediaFile {\n  id: string;\n  name: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedAt: Date;\n  userId: string;\n}\n\nexport interface AuthFormData {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  name?: string;\n  role?: 'CLIENT' | 'SELLER';\n}\n\nexport interface ProductFormData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  quantity: number;\n  sellerName?: string;\n  imageUrls: string[];\n}\n\nexport interface UploadProgress {\n  file: File;\n  progress: number;\n  completed: boolean;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  user?: User;\n  token: string;\n}\n\nexport interface ServiceResponse {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface ErrorMessage{\n  error : string;\n  success : string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimationsAsync(),\n    provideAnimations(),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
